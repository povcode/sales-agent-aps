{"ast":null,"code":"import _createClass from \"/Users/prottasofgrosskofic/Documents/GitHub/sales-agent-site/aspro-sales-agent/aps-sales-agent/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/prottasofgrosskofic/Documents/GitHub/sales-agent-site/aspro-sales-agent/aps-sales-agent/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { Injectable, ɵɵdefineInjectable, Component, ChangeDetectionStrategy, Input, Directive, ElementRef, Renderer2, ViewContainerRef, Output, NgModule } from '@angular/core';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { isBs3, parseTriggers } from 'ngx-bootstrap/utils';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\nimport { timer } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Configuration service for the Popover directive.\n * You can inject this service, typically in your root component, and customize\n * the values of its properties in order to provide default values for all the\n * popovers used in the application.\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'ngx-bootstrap/component-loader';\nimport * as ɵngcc3 from 'ngx-bootstrap/positioning';\n\nfunction PopoverContainerComponent_h3_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"h3\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.title);\n  }\n}\n\nvar _c0 = [\"*\"];\n\nvar PopoverConfig = /*#__PURE__*/_createClass(function PopoverConfig() {\n  _classCallCheck(this, PopoverConfig);\n\n  /**\n   * sets disable adaptive position\n   */\n  this.adaptivePosition = true;\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\", \"auto\"\n   */\n\n  this.placement = 'top';\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n\n  this.triggers = 'click';\n  this.outsideClick = false;\n  /**\n   * delay before showing the tooltip\n   */\n\n  this.delay = 0;\n});\n\nPopoverConfig.ɵfac = function PopoverConfig_Factory(t) {\n  return new (t || PopoverConfig)();\n};\n/** @nocollapse */\n\n\nPopoverConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function PopoverConfig_Factory() {\n    return new PopoverConfig();\n  },\n  token: PopoverConfig,\n  providedIn: \"root\"\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PopoverConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * sets disable adaptive position\n   * @type {?}\n   */\n  PopoverConfig.prototype.adaptivePosition;\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\", \"auto\"\n   * @type {?}\n   */\n\n  PopoverConfig.prototype.placement;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   * @type {?}\n   */\n\n  PopoverConfig.prototype.triggers;\n  /** @type {?} */\n\n  PopoverConfig.prototype.outsideClick;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * @type {?}\n   */\n\n  PopoverConfig.prototype.container;\n  /**\n   * delay before showing the tooltip\n   * @type {?}\n   */\n\n  PopoverConfig.prototype.delay;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar PopoverContainerComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} config\n   */\n  function PopoverContainerComponent(config) {\n    _classCallCheck(this, PopoverContainerComponent);\n\n    Object.assign(this, config);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(PopoverContainerComponent, [{\n    key: \"isBs3\",\n    get: function get() {\n      return isBs3();\n    }\n  }]);\n\n  return PopoverContainerComponent;\n}();\n\nPopoverContainerComponent.ɵfac = function PopoverContainerComponent_Factory(t) {\n  return new (t || PopoverContainerComponent)(ɵngcc0.ɵɵdirectiveInject(PopoverConfig));\n};\n\nPopoverContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: PopoverContainerComponent,\n  selectors: [[\"popover-container\"]],\n  hostAttrs: [\"role\", \"tooltip\", 2, \"display\", \"block\"],\n  hostVars: 7,\n  hostBindings: function PopoverContainerComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"id\", ctx.popoverId);\n      ɵngcc0.ɵɵclassMap(\"popover in popover-\" + ctx.placement + \" \" + \"bs-popover-\" + ctx.placement + \" \" + ctx.placement + \" \" + ctx.containerClass);\n      ɵngcc0.ɵɵclassProp(\"show\", !ctx.isBs3)(\"bs3\", ctx.isBs3);\n    }\n  },\n  inputs: {\n    placement: \"placement\",\n    title: \"title\"\n  },\n  ngContentSelectors: _c0,\n  decls: 4,\n  vars: 1,\n  consts: [[1, \"popover-arrow\", \"arrow\"], [\"class\", \"popover-title popover-header\", 4, \"ngIf\"], [1, \"popover-content\", \"popover-body\"], [1, \"popover-title\", \"popover-header\"]],\n  template: function PopoverContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelement(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, PopoverContainerComponent_h3_1_Template, 2, 1, \"h3\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵprojection(3);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.title);\n    }\n  },\n  directives: [ɵngcc1.NgIf],\n  styles: [\".bs3.popover-top[_nghost-%COMP%] {\\n      margin-bottom: 10px;\\n    }\\n    .bs3.popover.top[_nghost-%COMP%] > .arrow[_ngcontent-%COMP%] {\\n      margin-left: -2px;\\n    }\\n    .bs3.popover.top[_nghost-%COMP%] {\\n      margin-bottom: 10px;\\n    }\\n    .popover.bottom[_nghost-%COMP%] > .arrow[_ngcontent-%COMP%] {\\n      margin-left: -4px;\\n    }\\n    .bs3.bs-popover-left[_nghost-%COMP%] {\\n      margin-right: .5rem;\\n    }\\n    .bs3.bs-popover-right[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%], .bs3.bs-popover-left[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{\\n      margin: .3rem 0;\\n    }\"],\n  changeDetection: 0\n});\n/** @nocollapse */\n\nPopoverContainerComponent.ctorParameters = function () {\n  return [{\n    type: PopoverConfig\n  }];\n};\n\nPopoverContainerComponent.propDecorators = {\n  placement: [{\n    type: Input\n  }],\n  title: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PopoverContainerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'popover-container',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      // tslint:disable-next-line\n      host: {\n        '[attr.id]': 'popoverId',\n        '[class]': '\"popover in popover-\" + placement + \" \" + \"bs-popover-\" + placement + \" \" + placement + \" \" + containerClass',\n        '[class.show]': '!isBs3',\n        '[class.bs3]': 'isBs3',\n        role: 'tooltip',\n        style: 'display:block;'\n      },\n      template: \"<div class=\\\"popover-arrow arrow\\\"></div>\\n<h3 class=\\\"popover-title popover-header\\\" *ngIf=\\\"title\\\">{{ title }}</h3>\\n<div class=\\\"popover-content popover-body\\\">\\n  <ng-content></ng-content>\\n</div>\\n\",\n      styles: [\"\\n    :host.bs3.popover-top {\\n      margin-bottom: 10px;\\n    }\\n    :host.bs3.popover.top>.arrow {\\n      margin-left: -2px;\\n    }\\n    :host.bs3.popover.top {\\n      margin-bottom: 10px;\\n    }\\n    :host.popover.bottom>.arrow {\\n      margin-left: -4px;\\n    }\\n    :host.bs3.bs-popover-left {\\n      margin-right: .5rem;\\n    }\\n    :host.bs3.bs-popover-right .arrow, :host.bs3.bs-popover-left .arrow{\\n      margin: .3rem 0;\\n    }\\n    \"]\n    }]\n  }], function () {\n    return [{\n      type: PopoverConfig\n    }];\n  }, {\n    placement: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  PopoverContainerComponent.prototype.placement;\n  /** @type {?} */\n\n  PopoverContainerComponent.prototype.title;\n  /** @type {?} */\n\n  PopoverContainerComponent.prototype.containerClass;\n  /** @type {?} */\n\n  PopoverContainerComponent.prototype.popoverId;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar id = 0;\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\n\nvar PopoverDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} _config\n   * @param {?} _elementRef\n   * @param {?} _renderer\n   * @param {?} _viewContainerRef\n   * @param {?} cis\n   * @param {?} _positionService\n   */\n  function PopoverDirective(_config, _elementRef, _renderer, _viewContainerRef, cis, _positionService) {\n    _classCallCheck(this, PopoverDirective);\n\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._positionService = _positionService;\n    /**\n     * unique id popover - use for aria-describedby\n     */\n\n    this.popoverId = id++;\n    /**\n     * Close popover on outside click\n     */\n\n    this.outsideClick = false;\n    /**\n     * Css class for popover container\n     */\n\n    this.containerClass = '';\n    this._isInited = false;\n    this._popover = cis.createLoader(_elementRef, _viewContainerRef, _renderer).provide({\n      provide: PopoverConfig,\n      useValue: _config\n    });\n    Object.assign(this, _config);\n    this.onShown = this._popover.onShown;\n    this.onHidden = this._popover.onHidden; // fix: no focus on button on Mac OS #1795\n\n    if (typeof window !== 'undefined') {\n      _elementRef.nativeElement.addEventListener('click',\n      /**\n      * @return {?}\n      */\n      function () {\n        try {\n          _elementRef.nativeElement.focus();\n        } catch (err) {\n          return;\n        }\n      });\n    }\n  }\n  /**\n   * Returns whether or not the popover is currently being shown\n   * @return {?}\n   */\n\n\n  _createClass(PopoverDirective, [{\n    key: \"isOpen\",\n    get: function get() {\n      return this._popover.isShown;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      if (value) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    }\n    /**\n     * Set attribute aria-describedBy for element directive and\n     * set id for the popover\n     * @return {?}\n     */\n\n  }, {\n    key: \"setAriaDescribedBy\",\n    value: function setAriaDescribedBy() {\n      this._ariaDescribedby = this.isOpen ? \"ngx-popover-\".concat(this.popoverId) : null;\n\n      if (this._ariaDescribedby) {\n        this._popover.instance.popoverId = this._ariaDescribedby;\n\n        this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ariaDescribedby);\n      } else {\n        this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      }\n    }\n    /**\n     * Opens an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     * @return {?}\n     */\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _this = this;\n\n      if (this._popover.isShown || !this.popover || this._delayTimeoutId) {\n        return;\n      }\n\n      this._positionService.setOptions({\n        modifiers: {\n          flip: {\n            enabled: this.adaptivePosition\n          },\n          preventOverflow: {\n            enabled: this.adaptivePosition\n          }\n        }\n      });\n      /** @type {?} */\n\n\n      var showPopover =\n      /**\n      * @return {?}\n      */\n      function showPopover() {\n        if (_this._delayTimeoutId) {\n          _this._delayTimeoutId = undefined;\n        }\n\n        _this._popover.attach(PopoverContainerComponent).to(_this.container).position({\n          attachment: _this.placement\n        }).show({\n          content: _this.popover,\n          context: _this.popoverContext,\n          placement: _this.placement,\n          title: _this.popoverTitle,\n          containerClass: _this.containerClass\n        });\n\n        if (!_this.adaptivePosition) {\n          _this._positionService.calcPosition();\n\n          _this._positionService.deletePositionElement(_this._popover._componentRef.location);\n        }\n\n        _this.isOpen = true;\n\n        _this.setAriaDescribedBy();\n      };\n      /** @type {?} */\n\n\n      var cancelDelayedTooltipShowing =\n      /**\n      * @return {?}\n      */\n      function cancelDelayedTooltipShowing() {\n        if (_this._popoverCancelShowFn) {\n          _this._popoverCancelShowFn();\n        }\n      };\n\n      if (this.delay) {\n        /** @type {?} */\n        var _timer = timer(this.delay).subscribe(\n        /**\n        * @return {?}\n        */\n        function () {\n          showPopover();\n          cancelDelayedTooltipShowing();\n        });\n\n        if (this.triggers) {\n          parseTriggers(this.triggers).forEach(\n          /**\n          * @param {?} trigger\n          * @return {?}\n          */\n          function (trigger) {\n            _this._popoverCancelShowFn = _this._renderer.listen(_this._elementRef.nativeElement, trigger.close,\n            /**\n            * @return {?}\n            */\n            function () {\n              _timer.unsubscribe();\n\n              cancelDelayedTooltipShowing();\n            });\n          });\n        }\n      } else {\n        showPopover();\n      }\n    }\n    /**\n     * Closes an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     * @return {?}\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      if (this._delayTimeoutId) {\n        clearTimeout(this._delayTimeoutId);\n        this._delayTimeoutId = undefined;\n      }\n\n      if (this.isOpen) {\n        this._popover.hide();\n\n        this.setAriaDescribedBy();\n        this.isOpen = false;\n      }\n    }\n    /**\n     * Toggles an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     * @return {?}\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (this.isOpen) {\n        return this.hide();\n      }\n\n      this.show();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this2 = this;\n\n      // fix: seems there are an issue with `routerLinkActive`\n      // which result in duplicated call ngOnInit without call to ngOnDestroy\n      // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n      if (this._isInited) {\n        return;\n      }\n\n      this._isInited = true;\n\n      this._popover.listen({\n        triggers: this.triggers,\n        outsideClick: this.outsideClick,\n        show:\n        /**\n        * @return {?}\n        */\n        function show() {\n          return _this2.show();\n        },\n        hide:\n        /**\n        * @return {?}\n        */\n        function hide() {\n          return _this2.hide();\n        }\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._popover.dispose();\n    }\n  }]);\n\n  return PopoverDirective;\n}();\n\nPopoverDirective.ɵfac = function PopoverDirective_Factory(t) {\n  return new (t || PopoverDirective)(ɵngcc0.ɵɵdirectiveInject(PopoverConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ComponentLoaderFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.PositioningService));\n};\n\nPopoverDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: PopoverDirective,\n  selectors: [[\"\", \"popover\", \"\"]],\n  inputs: {\n    outsideClick: \"outsideClick\",\n    containerClass: \"containerClass\",\n    isOpen: \"isOpen\",\n    adaptivePosition: \"adaptivePosition\",\n    popover: \"popover\",\n    popoverContext: \"popoverContext\",\n    popoverTitle: \"popoverTitle\",\n    placement: \"placement\",\n    triggers: \"triggers\",\n    container: \"container\",\n    delay: \"delay\"\n  },\n  outputs: {\n    onShown: \"onShown\",\n    onHidden: \"onHidden\"\n  },\n  exportAs: [\"bs-popover\"]\n});\n/** @nocollapse */\n\nPopoverDirective.ctorParameters = function () {\n  return [{\n    type: PopoverConfig\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: ComponentLoaderFactory\n  }, {\n    type: PositioningService\n  }];\n};\n\nPopoverDirective.propDecorators = {\n  adaptivePosition: [{\n    type: Input\n  }],\n  popover: [{\n    type: Input\n  }],\n  popoverContext: [{\n    type: Input\n  }],\n  popoverTitle: [{\n    type: Input\n  }],\n  placement: [{\n    type: Input\n  }],\n  outsideClick: [{\n    type: Input\n  }],\n  triggers: [{\n    type: Input\n  }],\n  container: [{\n    type: Input\n  }],\n  containerClass: [{\n    type: Input\n  }],\n  isOpen: [{\n    type: Input\n  }],\n  delay: [{\n    type: Input\n  }],\n  onShown: [{\n    type: Output\n  }],\n  onHidden: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PopoverDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[popover]',\n      exportAs: 'bs-popover'\n    }]\n  }], function () {\n    return [{\n      type: PopoverConfig\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc2.ComponentLoaderFactory\n    }, {\n      type: ɵngcc3.PositioningService\n    }];\n  }, {\n    outsideClick: [{\n      type: Input\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    onShown: [{\n      type: Output\n    }],\n    onHidden: [{\n      type: Output\n    }],\n    isOpen: [{\n      type: Input\n    }],\n    adaptivePosition: [{\n      type: Input\n    }],\n    popover: [{\n      type: Input\n    }],\n    popoverContext: [{\n      type: Input\n    }],\n    popoverTitle: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    triggers: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    delay: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /**\n   * unique id popover - use for aria-describedby\n   * @type {?}\n   */\n  PopoverDirective.prototype.popoverId;\n  /**\n   * sets disable adaptive position\n   * @type {?}\n   */\n\n  PopoverDirective.prototype.adaptivePosition;\n  /**\n   * Content to be displayed as popover.\n   * @type {?}\n   */\n\n  PopoverDirective.prototype.popover;\n  /**\n   * Context to be used if popover is a template.\n   * @type {?}\n   */\n\n  PopoverDirective.prototype.popoverContext;\n  /**\n   * Title of a popover.\n   * @type {?}\n   */\n\n  PopoverDirective.prototype.popoverTitle;\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   * @type {?}\n   */\n\n  PopoverDirective.prototype.placement;\n  /**\n   * Close popover on outside click\n   * @type {?}\n   */\n\n  PopoverDirective.prototype.outsideClick;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   * @type {?}\n   */\n\n  PopoverDirective.prototype.triggers;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * @type {?}\n   */\n\n  PopoverDirective.prototype.container;\n  /**\n   * Css class for popover container\n   * @type {?}\n   */\n\n  PopoverDirective.prototype.containerClass;\n  /**\n   * Delay before showing the tooltip\n   * @type {?}\n   */\n\n  PopoverDirective.prototype.delay;\n  /**\n   * Emits an event when the popover is shown\n   * @type {?}\n   */\n\n  PopoverDirective.prototype.onShown;\n  /**\n   * Emits an event when the popover is hidden\n   * @type {?}\n   */\n\n  PopoverDirective.prototype.onHidden;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  PopoverDirective.prototype._popoverCancelShowFn;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  PopoverDirective.prototype._delayTimeoutId;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  PopoverDirective.prototype._popover;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  PopoverDirective.prototype._isInited;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  PopoverDirective.prototype._ariaDescribedby;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  PopoverDirective.prototype._elementRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  PopoverDirective.prototype._renderer;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  PopoverDirective.prototype._positionService;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar PopoverModule = /*#__PURE__*/function () {\n  function PopoverModule() {\n    _classCallCheck(this, PopoverModule);\n  }\n\n  _createClass(PopoverModule, null, [{\n    key: \"forRoot\",\n    value:\n    /**\n     * @return {?}\n     */\n    function forRoot() {\n      return {\n        ngModule: PopoverModule,\n        providers: [ComponentLoaderFactory, PositioningService]\n      };\n    }\n  }]);\n\n  return PopoverModule;\n}();\n\nPopoverModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: PopoverModule\n});\nPopoverModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function PopoverModule_Factory(t) {\n    return new (t || PopoverModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PopoverModule, {\n    declarations: function declarations() {\n      return [PopoverDirective, PopoverContainerComponent];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [PopoverDirective];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PopoverModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [PopoverDirective, PopoverContainerComponent],\n      exports: [PopoverDirective],\n      entryComponents: [PopoverContainerComponent]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { PopoverConfig, PopoverContainerComponent, PopoverDirective, PopoverModule };","map":{"version":3,"sources":["ngx-bootstrap/popover/popover.config.ts","ngx-bootstrap/popover/popover-container.component.ts","ngx-bootstrap/popover/popover.directive.ts","ngx-bootstrap/popover/popover.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n/**\n * Configuration service for the Popover directive.\n * You can inject this service, typically in your root component, and customize\n * the values of its properties in order to provide default values for all the\n * popovers used in the application.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PopoverConfig {\n  /** sets disable adaptive position */\n  adaptivePosition = true;\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\", \"auto\"\n   */\n  placement = 'top';\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  triggers = 'click';\n\n  outsideClick = false;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   */\n  container: string;\n  /** delay before showing the tooltip */\n  delay = 0;\n}\n","import { ChangeDetectionStrategy, Input, Component } from '@angular/core';\nimport { PopoverConfig } from './popover.config';\nimport { isBs3 } from 'ngx-bootstrap/utils';\n\n@Component({\n  selector: 'popover-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line\n  host: {\n    '[attr.id]': 'popoverId',\n    '[class]':\n      '\"popover in popover-\" + placement + \" \" + \"bs-popover-\" + placement + \" \" + placement + \" \" + containerClass',\n    '[class.show]': '!isBs3',\n    '[class.bs3]': 'isBs3',\n    role: 'tooltip',\n    style: 'display:block;'\n  },\n  styles: [\n    `\n    :host.bs3.popover-top {\n      margin-bottom: 10px;\n    }\n    :host.bs3.popover.top>.arrow {\n      margin-left: -2px;\n    }\n    :host.bs3.popover.top {\n      margin-bottom: 10px;\n    }\n    :host.popover.bottom>.arrow {\n      margin-left: -4px;\n    }\n    :host.bs3.bs-popover-left {\n      margin-right: .5rem;\n    }\n    :host.bs3.bs-popover-right .arrow, :host.bs3.bs-popover-left .arrow{\n      margin: .3rem 0;\n    }\n    `\n  ],\n  templateUrl: './popover-container.component.html'\n})\nexport class PopoverContainerComponent {\n  @Input() placement: string;\n  @Input() title: string;\n  containerClass: string;\n  popoverId: string;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  constructor(config: PopoverConfig) {\n    Object.assign(this, config);\n  }\n}\n","import {\n  Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output,\n  Renderer2, TemplateRef, ViewContainerRef\n} from '@angular/core';\nimport { PopoverConfig } from './popover.config';\nimport { ComponentLoader, ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { PopoverContainerComponent } from './popover-container.component';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\nimport { timer } from 'rxjs';\nimport { parseTriggers, Trigger } from 'ngx-bootstrap/utils';\n\nlet id = 0;\n\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\n@Directive({selector: '[popover]', exportAs: 'bs-popover'})\nexport class PopoverDirective implements OnInit, OnDestroy {\n  /** unique id popover - use for aria-describedby */\n  popoverId = id++;\n  /** sets disable adaptive position */\n  @Input() adaptivePosition: boolean;\n  /**\n   * Content to be displayed as popover.\n   */\n  /* tslint:disable-next-line: no-any */\n  @Input() popover: string | TemplateRef<any>;\n  /**\n   * Context to be used if popover is a template.\n   */\n  /* tslint:disable-next-line: no-any */\n  @Input() popoverContext: any;\n  /**\n   * Title of a popover.\n   */\n  @Input() popoverTitle: string;\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  @Input() placement: 'top' | 'bottom' | 'left' | 'right' | 'auto' | 'top left' | 'top right' |\n    'right top' | 'right bottom' | 'bottom right' | 'bottom left' | 'left bottom' | 'left top';\n  /**\n   * Close popover on outside click\n   */\n  @Input() outsideClick = false;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  @Input() triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   */\n  @Input() container: string;\n\n  /**\n   * Css class for popover container\n   */\n  @Input() containerClass = '';\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  @Input()\n  get isOpen(): boolean {\n    return this._popover.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Delay before showing the tooltip\n   */\n  @Input() delay: number;\n\n  /**\n   * Emits an event when the popover is shown\n   */\n  /* tslint:disable-next-line: no-any */\n  @Output() onShown: EventEmitter<any>;\n  /**\n   * Emits an event when the popover is hidden\n   */\n  /* tslint:disable-next-line: no-any */\n  @Output() onHidden: EventEmitter<any>;\n\n  protected _popoverCancelShowFn: Function;\n\n  protected _delayTimeoutId: number | any;\n\n  private _popover: ComponentLoader<PopoverContainerComponent>;\n  private _isInited = false;\n  private _ariaDescribedby: string;\n\n  constructor(\n    _config: PopoverConfig,\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2,\n    _viewContainerRef: ViewContainerRef,\n    cis: ComponentLoaderFactory,\n    private _positionService: PositioningService\n  ) {\n    this._popover = cis\n      .createLoader<PopoverContainerComponent>(\n        _elementRef,\n        _viewContainerRef,\n        _renderer\n      )\n      .provide({provide: PopoverConfig, useValue: _config});\n\n    Object.assign(this, _config);\n\n    this.onShown = this._popover.onShown;\n    this.onHidden = this._popover.onHidden;\n\n    // fix: no focus on button on Mac OS #1795\n    if (typeof window !== 'undefined') {\n      _elementRef.nativeElement.addEventListener('click', function () {\n        try {\n          _elementRef.nativeElement.focus();\n        } catch (err) {\n          return;\n        }\n      });\n    }\n  }\n\n  /**\n   * Set attribute aria-describedBy for element directive and\n   * set id for the popover\n   */\n  setAriaDescribedBy(): void {\n    this._ariaDescribedby = this.isOpen ? `ngx-popover-${this.popoverId}` : null;\n    if (this._ariaDescribedby) {\n      this._popover.instance.popoverId = this._ariaDescribedby;\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ariaDescribedby);\n    } else {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n    }\n  }\n\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  show(): void {\n    if (this._popover.isShown || !this.popover || this._delayTimeoutId) {\n      return;\n    }\n\n    this._positionService.setOptions({\n      modifiers: {\n        flip: {\n          enabled: this.adaptivePosition\n        },\n        preventOverflow: {\n          enabled: this.adaptivePosition\n        }\n      }\n    });\n\n    const showPopover = () => {\n      if (this._delayTimeoutId) {\n        this._delayTimeoutId = undefined;\n      }\n\n      this._popover\n        .attach(PopoverContainerComponent)\n        .to(this.container)\n        .position({attachment: this.placement})\n        .show({\n          content: this.popover,\n          context: this.popoverContext,\n          placement: this.placement,\n          title: this.popoverTitle,\n          containerClass: this.containerClass\n        });\n\n      if (!this.adaptivePosition) {\n        this._positionService.calcPosition();\n        this._positionService.deletePositionElement(this._popover._componentRef.location);\n      }\n\n      this.isOpen = true;\n      this.setAriaDescribedBy();\n    };\n\n    const cancelDelayedTooltipShowing = () => {\n      if (this._popoverCancelShowFn) {\n        this._popoverCancelShowFn();\n      }\n    };\n\n    if (this.delay) {\n      const _timer = timer(this.delay).subscribe(() => {\n        showPopover();\n        cancelDelayedTooltipShowing();\n      });\n\n      if (this.triggers) {\n        parseTriggers(this.triggers)\n          .forEach((trigger: Trigger) => {\n            this._popoverCancelShowFn = this._renderer.listen(\n              this._elementRef.nativeElement,\n              trigger.close,\n              () => {\n                _timer.unsubscribe();\n                cancelDelayedTooltipShowing();\n              }\n            );\n          });\n      }\n    } else {\n      showPopover();\n    }\n  }\n\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  hide(): void {\n    if (this._delayTimeoutId) {\n      clearTimeout(this._delayTimeoutId);\n      this._delayTimeoutId = undefined;\n    }\n\n    if (this.isOpen) {\n      this._popover.hide();\n      this.setAriaDescribedBy();\n      this.isOpen = false;\n    }\n  }\n\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  toggle(): void {\n    if (this.isOpen) {\n      return this.hide();\n    }\n\n    this.show();\n  }\n\n  ngOnInit(): void {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n    if (this._isInited) {\n      return;\n    }\n    this._isInited = true;\n\n    this._popover.listen({\n      triggers: this.triggers,\n      outsideClick: this.outsideClick,\n      show: () => this.show(),\n      hide: () => this.hide()\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._popover.dispose();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\nimport { PopoverDirective } from './popover.directive';\nimport { PopoverContainerComponent } from './popover-container.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PopoverDirective, PopoverContainerComponent],\n  exports: [PopoverDirective],\n  entryComponents: [PopoverContainerComponent]\n})\nexport class PopoverModule {\n  static forRoot(): ModuleWithProviders<PopoverModule> {\n    return {\n      ngModule: PopoverModule,\n      providers: [ComponentLoaderFactory, PositioningService]\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}