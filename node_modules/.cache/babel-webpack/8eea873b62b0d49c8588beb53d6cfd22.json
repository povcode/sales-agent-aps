{"ast":null,"code":"import _classCallCheck from \"/Users/prottasofgrosskofic/Documents/GitHub/sales-agent-site/aspro-sales-agent/blk-design-system-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/prottasofgrosskofic/Documents/GitHub/sales-agent-site/aspro-sales-agent/blk-design-system-angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { style, animate, AnimationBuilder } from '@angular/animations';\nimport { EventEmitter, Directive, ElementRef, Renderer2, Output, HostBinding, Input, NgModule } from '@angular/core';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/animations';\nvar COLLAPSE_ANIMATION_TIMING = '400ms cubic-bezier(0.4,0.0,0.2,1)';\n/** @type {?} */\n\nvar expandAnimation = [style({\n  height: 0,\n  visibility: 'hidden'\n}), animate(COLLAPSE_ANIMATION_TIMING, style({\n  height: '*',\n  visibility: 'visible'\n}))];\n/** @type {?} */\n\nvar collapseAnimation = [style({\n  height: '*',\n  visibility: 'visible'\n}), animate(COLLAPSE_ANIMATION_TIMING, style({\n  height: 0,\n  visibility: 'hidden'\n}))];\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nvar CollapseDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} _el\n   * @param {?} _renderer\n   * @param {?} _builder\n   */\n  function CollapseDirective(_el, _renderer, _builder) {\n    _classCallCheck(this, CollapseDirective);\n\n    this._el = _el;\n    this._renderer = _renderer;\n    /**\n     * This event fires as soon as content collapses\n     */\n\n    this.collapsed = new EventEmitter();\n    /**\n     * This event fires when collapsing is started\n     */\n\n    this.collapses = new EventEmitter();\n    /**\n     * This event fires as soon as content becomes visible\n     */\n\n    this.expanded = new EventEmitter();\n    /**\n     * This event fires when expansion is started\n     */\n\n    this.expands = new EventEmitter(); // shown\n\n    this.isExpanded = true;\n    this.collapseNewValue = true; // hidden\n\n    this.isCollapsed = false; // stale state\n\n    this.isCollapse = true; // animation state\n\n    this.isCollapsing = false;\n    /**\n     * turn on/off animation\n     */\n\n    this.isAnimated = false;\n    this._display = 'block';\n    this._stylesLoaded = false;\n    this._COLLAPSE_ACTION_NAME = 'collapse';\n    this._EXPAND_ACTION_NAME = 'expand';\n    this._factoryCollapseAnimation = _builder.build(collapseAnimation);\n    this._factoryExpandAnimation = _builder.build(expandAnimation);\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  _createClass(CollapseDirective, [{\n    key: \"display\",\n    set: function set(value) {\n      if (!this.isAnimated) {\n        this._renderer.setStyle(this._el.nativeElement, 'display', value);\n\n        return;\n      }\n\n      this._display = value;\n\n      if (value === 'none') {\n        this.hide();\n        return;\n      }\n\n      this.show();\n    }\n    /**\n     * A flag indicating visibility of content (shown or hidden)\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"collapse\",\n    get:\n    /**\n     * @return {?}\n     */\n    function get() {\n      return this.isExpanded;\n    }\n    /**\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this.collapseNewValue = value;\n\n      if (!this._player || this._isAnimationDone) {\n        this.isExpanded = value;\n        this.toggle();\n      }\n    }\n  }, {\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      this._stylesLoaded = true;\n\n      if (!this._player || !this._isAnimationDone) {\n        return;\n      }\n\n      this._player.reset();\n\n      this._renderer.setStyle(this._el.nativeElement, 'height', '*');\n    }\n    /**\n     * allows to manually toggle content visibility\n     * @return {?}\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (this.isExpanded) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n    /**\n     * allows to manually hide content\n     * @return {?}\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      var _this = this;\n\n      this.isCollapsing = true;\n      this.isExpanded = false;\n      this.isCollapsed = true;\n      this.isCollapsing = false;\n      this.collapses.emit(this);\n      this._isAnimationDone = false;\n      this.animationRun(this.isAnimated, this._COLLAPSE_ACTION_NAME)(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this._isAnimationDone = true;\n\n        if (_this.collapseNewValue !== _this.isCollapsed && _this.isAnimated) {\n          _this.show();\n\n          return;\n        }\n\n        _this.collapsed.emit(_this);\n\n        _this._renderer.setStyle(_this._el.nativeElement, 'display', 'none');\n      });\n    }\n    /**\n     * allows to manually show collapsed content\n     * @return {?}\n     */\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _this2 = this;\n\n      this._renderer.setStyle(this._el.nativeElement, 'display', this._display);\n\n      this.isCollapsing = true;\n      this.isExpanded = true;\n      this.isCollapsed = false;\n      this.isCollapsing = false;\n      this.expands.emit(this);\n      this._isAnimationDone = false;\n      this.animationRun(this.isAnimated, this._EXPAND_ACTION_NAME)(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this2._isAnimationDone = true;\n\n        if (_this2.collapseNewValue !== _this2.isCollapsed && _this2.isAnimated) {\n          _this2.hide();\n\n          return;\n        }\n\n        _this2.expanded.emit(_this2);\n\n        _this2._renderer.removeStyle(_this2._el.nativeElement, 'overflow');\n      });\n    }\n    /**\n     * @param {?} isAnimated\n     * @param {?} action\n     * @return {?}\n     */\n\n  }, {\n    key: \"animationRun\",\n    value: function animationRun(isAnimated, action) {\n      var _this3 = this;\n\n      if (!isAnimated || !this._stylesLoaded) {\n        return (\n          /**\n          * @param {?} callback\n          * @return {?}\n          */\n          function (callback) {\n            return callback();\n          }\n        );\n      }\n\n      this._renderer.setStyle(this._el.nativeElement, 'overflow', 'hidden');\n\n      this._renderer.addClass(this._el.nativeElement, 'collapse');\n      /** @type {?} */\n\n\n      var factoryAnimation = action === this._EXPAND_ACTION_NAME ? this._factoryExpandAnimation : this._factoryCollapseAnimation;\n\n      if (this._player) {\n        this._player.destroy();\n      }\n\n      this._player = factoryAnimation.create(this._el.nativeElement);\n\n      this._player.play();\n\n      return (\n        /**\n        * @param {?} callback\n        * @return {?}\n        */\n        function (callback) {\n          return _this3._player.onDone(callback);\n        }\n      );\n    }\n  }]);\n\n  return CollapseDirective;\n}();\n\nCollapseDirective.ɵfac = function CollapseDirective_Factory(t) {\n  return new (t || CollapseDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AnimationBuilder));\n};\n\nCollapseDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CollapseDirective,\n  selectors: [[\"\", \"collapse\", \"\"]],\n  hostVars: 10,\n  hostBindings: function CollapseDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"aria-hidden\", ctx.isCollapsed);\n      ɵngcc0.ɵɵclassProp(\"collapse\", ctx.isCollapse)(\"in\", ctx.isExpanded)(\"show\", ctx.isExpanded)(\"collapsing\", ctx.isCollapsing);\n    }\n  },\n  inputs: {\n    isAnimated: \"isAnimated\",\n    display: \"display\",\n    collapse: \"collapse\"\n  },\n  outputs: {\n    collapsed: \"collapsed\",\n    collapses: \"collapses\",\n    expanded: \"expanded\",\n    expands: \"expands\"\n  },\n  exportAs: [\"bs-collapse\"]\n});\n/** @nocollapse */\n\nCollapseDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: AnimationBuilder\n  }];\n};\n\nCollapseDirective.propDecorators = {\n  collapsed: [{\n    type: Output\n  }],\n  collapses: [{\n    type: Output\n  }],\n  expanded: [{\n    type: Output\n  }],\n  expands: [{\n    type: Output\n  }],\n  isExpanded: [{\n    type: HostBinding,\n    args: ['class.in']\n  }, {\n    type: HostBinding,\n    args: ['class.show']\n  }, {\n    type: HostBinding,\n    args: ['attr.aria-expanded']\n  }],\n  isCollapsed: [{\n    type: HostBinding,\n    args: ['attr.aria-hidden']\n  }],\n  isCollapse: [{\n    type: HostBinding,\n    args: ['class.collapse']\n  }],\n  isCollapsing: [{\n    type: HostBinding,\n    args: ['class.collapsing']\n  }],\n  display: [{\n    type: Input\n  }],\n  isAnimated: [{\n    type: Input\n  }],\n  collapse: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CollapseDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[collapse]',\n      exportAs: 'bs-collapse',\n      host: {\n        '[class.collapse]': 'true'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc1.AnimationBuilder\n    }];\n  }, {\n    collapsed: [{\n      type: Output\n    }],\n    collapses: [{\n      type: Output\n    }],\n    expanded: [{\n      type: Output\n    }],\n    expands: [{\n      type: Output\n    }],\n    isExpanded: [{\n      type: HostBinding,\n      args: ['class.in']\n    }, {\n      type: HostBinding,\n      args: ['class.show']\n    }, {\n      type: HostBinding,\n      args: ['attr.aria-expanded']\n    }],\n    isCollapsed: [{\n      type: HostBinding,\n      args: ['attr.aria-hidden']\n    }],\n    isCollapse: [{\n      type: HostBinding,\n      args: ['class.collapse']\n    }],\n    isCollapsing: [{\n      type: HostBinding,\n      args: ['class.collapsing']\n    }],\n    isAnimated: [{\n      type: Input\n    }],\n    display: [{\n      type: Input\n    }],\n    collapse: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /**\n   * This event fires as soon as content collapses\n   * @type {?}\n   */\n  CollapseDirective.prototype.collapsed;\n  /**\n   * This event fires when collapsing is started\n   * @type {?}\n   */\n\n  CollapseDirective.prototype.collapses;\n  /**\n   * This event fires as soon as content becomes visible\n   * @type {?}\n   */\n\n  CollapseDirective.prototype.expanded;\n  /**\n   * This event fires when expansion is started\n   * @type {?}\n   */\n\n  CollapseDirective.prototype.expands;\n  /** @type {?} */\n\n  CollapseDirective.prototype.isExpanded;\n  /** @type {?} */\n\n  CollapseDirective.prototype.collapseNewValue;\n  /** @type {?} */\n\n  CollapseDirective.prototype.isCollapsed;\n  /** @type {?} */\n\n  CollapseDirective.prototype.isCollapse;\n  /** @type {?} */\n\n  CollapseDirective.prototype.isCollapsing;\n  /**\n   * turn on/off animation\n   * @type {?}\n   */\n\n  CollapseDirective.prototype.isAnimated;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  CollapseDirective.prototype._display;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  CollapseDirective.prototype._factoryCollapseAnimation;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  CollapseDirective.prototype._factoryExpandAnimation;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  CollapseDirective.prototype._isAnimationDone;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  CollapseDirective.prototype._player;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  CollapseDirective.prototype._stylesLoaded;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  CollapseDirective.prototype._COLLAPSE_ACTION_NAME;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  CollapseDirective.prototype._EXPAND_ACTION_NAME;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  CollapseDirective.prototype._el;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  CollapseDirective.prototype._renderer;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar CollapseModule = /*#__PURE__*/function () {\n  function CollapseModule() {\n    _classCallCheck(this, CollapseModule);\n  }\n\n  _createClass(CollapseModule, null, [{\n    key: \"forRoot\",\n    value:\n    /**\n     * @return {?}\n     */\n    function forRoot() {\n      return {\n        ngModule: CollapseModule,\n        providers: []\n      };\n    }\n  }]);\n\n  return CollapseModule;\n}();\n\nCollapseModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: CollapseModule\n});\nCollapseModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function CollapseModule_Factory(t) {\n    return new (t || CollapseModule)();\n  }\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CollapseModule, {\n    declarations: [CollapseDirective],\n    exports: [CollapseDirective]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CollapseModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [CollapseDirective],\n      exports: [CollapseDirective]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { CollapseDirective, CollapseModule };","map":{"version":3,"sources":["ngx-bootstrap/collapse/collapse-animations.ts","ngx-bootstrap/collapse/collapse.directive.ts","ngx-bootstrap/collapse/collapse.module.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  animate,\n  style,\n  AnimationMetadata\n} from '@angular/animations';\n\nexport const COLLAPSE_ANIMATION_TIMING = '400ms cubic-bezier(0.4,0.0,0.2,1)';\n\nexport const expandAnimation: AnimationMetadata[] = [\n  style({ height: 0, visibility: 'hidden' }),\n  animate(\n    COLLAPSE_ANIMATION_TIMING,\n    style({ height: '*', visibility: 'visible' })\n  )\n];\n\nexport const collapseAnimation: AnimationMetadata[] = [\n  style({ height: '*', visibility: 'visible' }),\n  animate(\n    COLLAPSE_ANIMATION_TIMING,\n    style({ height: 0, visibility: 'hidden' })\n  )\n];\n","import {\n  AnimationBuilder,\n  AnimationFactory,\n  AnimationPlayer\n} from '@angular/animations';\n\nimport {\n  AfterViewChecked,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Output,\n  Renderer2\n} from '@angular/core';\n\nimport {\n  collapseAnimation,\n  expandAnimation\n} from './collapse-animations';\n\n@Directive({\n  selector: '[collapse]',\n  exportAs: 'bs-collapse',\n  host: {\n    '[class.collapse]': 'true'\n  }\n})\nexport class CollapseDirective implements AfterViewChecked {\n  /** This event fires as soon as content collapses */\n  @Output() collapsed: EventEmitter<CollapseDirective> = new EventEmitter();\n  /** This event fires when collapsing is started */\n  @Output() collapses: EventEmitter<CollapseDirective> = new EventEmitter();\n  /** This event fires as soon as content becomes visible */\n  @Output() expanded: EventEmitter<CollapseDirective> = new EventEmitter();\n  /** This event fires when expansion is started */\n  @Output() expands: EventEmitter<CollapseDirective> = new EventEmitter();\n  // shown\n  @HostBinding('class.in')\n  @HostBinding('class.show')\n  @HostBinding('attr.aria-expanded')\n  isExpanded = true;\n  collapseNewValue = true;\n  // hidden\n  @HostBinding('attr.aria-hidden') isCollapsed = false;\n  // stale state\n  @HostBinding('class.collapse') isCollapse = true;\n  // animation state\n  @HostBinding('class.collapsing') isCollapsing = false;\n\n  @Input()\n  set display(value: string) {\n    if (!this.isAnimated) {\n      this._renderer.setStyle(this._el.nativeElement, 'display', value);\n\n      return;\n    }\n\n    this._display = value;\n\n    if (value === 'none') {\n      this.hide();\n\n      return;\n    }\n\n    this.show();\n  }\n  /** turn on/off animation */\n  @Input() isAnimated = false;\n  /** A flag indicating visibility of content (shown or hidden) */\n  @Input()\n  set collapse(value: boolean) {\n    this.collapseNewValue = value;\n    if (!this._player || this._isAnimationDone) {\n      this.isExpanded = value;\n      this.toggle();\n    }\n  }\n\n  get collapse(): boolean {\n    return this.isExpanded;\n  }\n\n  private _display = 'block';\n  private _factoryCollapseAnimation: AnimationFactory;\n  private _factoryExpandAnimation: AnimationFactory;\n  private _isAnimationDone: boolean;\n  private _player: AnimationPlayer;\n  private _stylesLoaded = false;\n\n  private _COLLAPSE_ACTION_NAME = 'collapse';\n  private _EXPAND_ACTION_NAME = 'expand';\n\n  constructor(\n    private _el: ElementRef,\n    private _renderer: Renderer2,\n    _builder: AnimationBuilder\n  ) {\n    this._factoryCollapseAnimation = _builder.build(collapseAnimation);\n    this._factoryExpandAnimation = _builder.build(expandAnimation);\n  }\n\n  ngAfterViewChecked(): void {\n    this._stylesLoaded = true;\n\n    if (!this._player || !this._isAnimationDone) {\n      return;\n    }\n\n    this._player.reset();\n    this._renderer.setStyle(this._el.nativeElement, 'height', '*');\n  }\n\n  /** allows to manually toggle content visibility */\n  toggle(): void {\n    if (this.isExpanded) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /** allows to manually hide content */\n  hide(): void {\n    this.isCollapsing = true;\n    this.isExpanded = false;\n    this.isCollapsed = true;\n    this.isCollapsing = false;\n\n    this.collapses.emit(this);\n\n    this._isAnimationDone = false;\n\n    this.animationRun(this.isAnimated, this._COLLAPSE_ACTION_NAME)(() => {\n      this._isAnimationDone = true;\n      if (this.collapseNewValue !== this.isCollapsed && this.isAnimated) {\n        this.show();\n\n        return;\n      }\n      this.collapsed.emit(this);\n      this._renderer.setStyle(this._el.nativeElement, 'display', 'none');\n    });\n  }\n  /** allows to manually show collapsed content */\n  show(): void {\n    this._renderer.setStyle(this._el.nativeElement, 'display', this._display);\n\n    this.isCollapsing = true;\n    this.isExpanded = true;\n    this.isCollapsed = false;\n    this.isCollapsing = false;\n\n    this.expands.emit(this);\n\n    this._isAnimationDone = false;\n    this.animationRun(this.isAnimated, this._EXPAND_ACTION_NAME)(() => {\n      this._isAnimationDone = true;\n      if (this.collapseNewValue !== this.isCollapsed && this.isAnimated) {\n        this.hide();\n\n        return;\n      }\n      this.expanded.emit(this);\n      this._renderer.removeStyle(this._el.nativeElement, 'overflow');\n    });\n  }\n\n  animationRun(isAnimated: boolean, action: string) {\n    if (!isAnimated || !this._stylesLoaded) {\n      return (callback: () => void) => callback();\n    }\n\n    this._renderer.setStyle(this._el.nativeElement, 'overflow', 'hidden');\n    this._renderer.addClass(this._el.nativeElement, 'collapse');\n\n    const factoryAnimation = (action === this._EXPAND_ACTION_NAME)\n      ? this._factoryExpandAnimation\n      : this._factoryCollapseAnimation;\n\n    if (this._player) {\n      this._player.destroy();\n    }\n\n    this._player = factoryAnimation.create(this._el.nativeElement);\n    this._player.play();\n\n    return (callback: () => void) => this._player.onDone(callback);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CollapseDirective } from './collapse.directive';\n\n@NgModule({\n  declarations: [CollapseDirective],\n  exports: [CollapseDirective]\n})\nexport class CollapseModule {\n  static forRoot(): ModuleWithProviders<CollapseModule> {\n    return { ngModule: CollapseModule, providers: [] };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}