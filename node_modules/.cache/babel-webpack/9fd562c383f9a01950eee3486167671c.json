{"ast":null,"code":"import _createClass from \"/Users/prottasofgrosskofic/Documents/GitHub/sales-agent-site/new-repo/sales-agent-aps/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/prottasofgrosskofic/Documents/GitHub/sales-agent-site/new-repo/sales-agent-aps/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { __decorate, __metadata } from 'tslib';\nimport { Injectable, ɵɵdefineInjectable, EventEmitter, Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, Output, NgModule } from '@angular/core';\nimport { OnChange } from 'ngx-bootstrap/utils';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction AlertComponent_ng_template_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function AlertComponent_ng_template_0_ng_template_1_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r2.close();\n    });\n    ɵngcc0.ɵɵelementStart(1, \"span\", 3);\n    ɵngcc0.ɵɵtext(2, \"\\xD7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"span\", 4);\n    ɵngcc0.ɵɵtext(4, \"Close\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction AlertComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, AlertComponent_ng_template_0_ng_template_1_Template, 5, 0, \"ng-template\", 0);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(\"alert alert-\" + ctx_r0.type);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0.classes);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.dismissible);\n  }\n}\n\nvar _c0 = [\"*\"];\n\nvar AlertConfig = /*#__PURE__*/_createClass(function AlertConfig() {\n  _classCallCheck(this, AlertConfig);\n\n  /**\n   * default alert type\n   */\n  this.type = 'warning';\n  /**\n   * is alerts are dismissible by default\n   */\n\n  this.dismissible = false;\n  /**\n   * default time before alert will dismiss\n   */\n\n  this.dismissOnTimeout = undefined;\n});\n\nAlertConfig.ɵfac = function AlertConfig_Factory(t) {\n  return new (t || AlertConfig)();\n};\n/** @nocollapse */\n\n\nAlertConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function AlertConfig_Factory() {\n    return new AlertConfig();\n  },\n  token: AlertConfig,\n  providedIn: \"root\"\n});\n\nif (false) {\n  /**\n   * default alert type\n   * @type {?}\n   */\n  AlertConfig.prototype.type;\n  /**\n   * is alerts are dismissible by default\n   * @type {?}\n   */\n\n  AlertConfig.prototype.dismissible;\n  /**\n   * default time before alert will dismiss\n   * @type {?}\n   */\n\n  AlertConfig.prototype.dismissOnTimeout;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar AlertComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} _config\n   * @param {?} changeDetection\n   */\n  function AlertComponent(_config, changeDetection) {\n    var _this = this;\n\n    _classCallCheck(this, AlertComponent);\n\n    this.changeDetection = changeDetection;\n    /**\n     * Alert type.\n     * Provides one of four bootstrap supported contextual classes:\n     * `success`, `info`, `warning` and `danger`\n     */\n\n    this.type = 'warning';\n    /**\n     * If set, displays an inline \"Close\" button\n     */\n\n    this.dismissible = false;\n    /**\n     * Is alert visible\n     */\n\n    this.isOpen = true;\n    /**\n     * This event fires immediately after close instance method is called,\n     * $event is an instance of Alert component.\n     */\n\n    this.onClose = new EventEmitter();\n    /**\n     * This event fires when alert closed, $event is an instance of Alert component\n     */\n\n    this.onClosed = new EventEmitter();\n    this.classes = '';\n    this.dismissibleChange = new EventEmitter();\n    Object.assign(this, _config);\n    this.dismissibleChange.subscribe(\n    /**\n    * @param {?} dismissible\n    * @return {?}\n    */\n    function (dismissible) {\n      _this.classes = _this.dismissible ? 'alert-dismissible' : '';\n\n      _this.changeDetection.markForCheck();\n    });\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(AlertComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this2 = this;\n\n      if (this.dismissOnTimeout) {\n        // if dismissOnTimeout used as attr without binding, it will be a string\n        setTimeout(\n        /**\n        * @return {?}\n        */\n        function () {\n          return _this2.close();\n        }, parseInt(\n        /** @type {?} */\n        this.dismissOnTimeout, 10));\n      }\n    } // todo: animation ` If the .fade and .in classes are present on the element,\n    // the alert will fade out before it is removed`\n\n    /**\n     * Closes an alert by removing it from the DOM.\n     * @return {?}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (!this.isOpen) {\n        return;\n      }\n\n      this.onClose.emit(this);\n      this.isOpen = false;\n      this.changeDetection.markForCheck();\n      this.onClosed.emit(this);\n    }\n  }]);\n\n  return AlertComponent;\n}();\n\nAlertComponent.ɵfac = function AlertComponent_Factory(t) {\n  return new (t || AlertComponent)(ɵngcc0.ɵɵdirectiveInject(AlertConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nAlertComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: AlertComponent,\n  selectors: [[\"alert\"], [\"bs-alert\"]],\n  inputs: {\n    type: \"type\",\n    dismissible: \"dismissible\",\n    isOpen: \"isOpen\",\n    dismissOnTimeout: \"dismissOnTimeout\"\n  },\n  outputs: {\n    onClose: \"onClose\",\n    onClosed: \"onClosed\"\n  },\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"ngIf\"], [\"role\", \"alert\", 3, \"ngClass\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"sr-only\"]],\n  template: function AlertComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, AlertComponent_ng_template_0_Template, 3, 4, \"ng-template\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isOpen);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nAlertComponent.ctorParameters = function () {\n  return [{\n    type: AlertConfig\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nAlertComponent.propDecorators = {\n  type: [{\n    type: Input\n  }],\n  dismissible: [{\n    type: Input\n  }],\n  dismissOnTimeout: [{\n    type: Input\n  }],\n  isOpen: [{\n    type: Input\n  }],\n  onClose: [{\n    type: Output\n  }],\n  onClosed: [{\n    type: Output\n  }]\n};\n\n__decorate([OnChange(), __metadata(\"design:type\", Object)], AlertComponent.prototype, \"dismissible\", void 0);\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AlertConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AlertComponent, [{\n    type: Component,\n    args: [{\n      selector: 'alert,bs-alert',\n      template: \"<ng-template [ngIf]=\\\"isOpen\\\">\\n  <div [class]=\\\"'alert alert-' + type\\\" role=\\\"alert\\\" [ngClass]=\\\"classes\\\">\\n    <ng-template [ngIf]=\\\"dismissible\\\">\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n        <span class=\\\"sr-only\\\">Close</span>\\n      </button>\\n    </ng-template>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: AlertConfig\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    type: [{\n      type: Input\n    }],\n    dismissible: [{\n      type: Input\n    }],\n    isOpen: [{\n      type: Input\n    }],\n    onClose: [{\n      type: Output\n    }],\n    onClosed: [{\n      type: Output\n    }],\n    dismissOnTimeout: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /**\n   * Alert type.\n   * Provides one of four bootstrap supported contextual classes:\n   * `success`, `info`, `warning` and `danger`\n   * @type {?}\n   */\n  AlertComponent.prototype.type;\n  /**\n   * If set, displays an inline \"Close\" button\n   * @type {?}\n   */\n\n  AlertComponent.prototype.dismissible;\n  /**\n   * Number in milliseconds, after which alert will be closed\n   * @type {?}\n   */\n\n  AlertComponent.prototype.dismissOnTimeout;\n  /**\n   * Is alert visible\n   * @type {?}\n   */\n\n  AlertComponent.prototype.isOpen;\n  /**\n   * This event fires immediately after close instance method is called,\n   * $event is an instance of Alert component.\n   * @type {?}\n   */\n\n  AlertComponent.prototype.onClose;\n  /**\n   * This event fires when alert closed, $event is an instance of Alert component\n   * @type {?}\n   */\n\n  AlertComponent.prototype.onClosed;\n  /** @type {?} */\n\n  AlertComponent.prototype.classes;\n  /** @type {?} */\n\n  AlertComponent.prototype.dismissibleChange;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  AlertComponent.prototype.changeDetection;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar AlertModule = /*#__PURE__*/function () {\n  function AlertModule() {\n    _classCallCheck(this, AlertModule);\n  }\n\n  _createClass(AlertModule, null, [{\n    key: \"forRoot\",\n    value:\n    /**\n     * @return {?}\n     */\n    function forRoot() {\n      return {\n        ngModule: AlertModule,\n        providers: []\n      };\n    }\n  }]);\n\n  return AlertModule;\n}();\n\nAlertModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: AlertModule\n});\nAlertModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function AlertModule_Factory(t) {\n    return new (t || AlertModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AlertModule, {\n    declarations: function declarations() {\n      return [AlertComponent];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [AlertComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AlertModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [AlertComponent],\n      exports: [AlertComponent],\n      entryComponents: [AlertComponent]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { AlertComponent, AlertConfig, AlertModule };","map":{"version":3,"sources":["ngx-bootstrap/alert/alert.config.ts","ngx-bootstrap/alert/alert.component.ts","ngx-bootstrap/alert/alert.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertConfig {\n  /** default alert type */\n  type = 'warning';\n\n  /** is alerts are dismissible by default */\n  dismissible = false;\n\n  /** default time before alert will dismiss */\n  dismissOnTimeout?: number = undefined;\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { AlertConfig } from './alert.config';\nimport { OnChange } from 'ngx-bootstrap/utils';\n\n@Component({\n  selector: 'alert,bs-alert',\n  templateUrl: './alert.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AlertComponent implements OnInit {\n  /** Alert type.\n   * Provides one of four bootstrap supported contextual classes:\n   * `success`, `info`, `warning` and `danger`\n   */\n  @Input() type = 'warning';\n  /** If set, displays an inline \"Close\" button */\n  @OnChange()   @Input()   dismissible = false;\n  /** Number in milliseconds, after which alert will be closed */\n  @Input() dismissOnTimeout: number | string;\n\n  /** Is alert visible */\n  @Input() isOpen = true;\n\n  /** This event fires immediately after close instance method is called,\n   * $event is an instance of Alert component.\n   */\n  @Output() onClose = new EventEmitter<AlertComponent>();\n  /** This event fires when alert closed, $event is an instance of Alert component */\n  @Output() onClosed = new EventEmitter<AlertComponent>();\n\n\n  classes = '';\n  dismissibleChange = new EventEmitter<boolean>();\n\n  constructor(_config: AlertConfig, private changeDetection: ChangeDetectorRef) {\n    Object.assign(this, _config);\n    this.dismissibleChange.subscribe((dismissible: boolean) => {\n      this.classes = this.dismissible ? 'alert-dismissible' : '';\n      this.changeDetection.markForCheck();\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.dismissOnTimeout) {\n      // if dismissOnTimeout used as attr without binding, it will be a string\n      setTimeout(\n        () => this.close(),\n        parseInt(this.dismissOnTimeout as string, 10)\n      );\n    }\n  }\n\n  // todo: animation ` If the .fade and .in classes are present on the element,\n  // the alert will fade out before it is removed`\n  /**\n   * Closes an alert by removing it from the DOM.\n   */\n  close(): void {\n    if (!this.isOpen) {\n      return;\n    }\n\n    this.onClose.emit(this);\n    this.isOpen = false;\n    this.changeDetection.markForCheck();\n    this.onClosed.emit(this);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { AlertComponent } from './alert.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [AlertComponent],\n  exports: [AlertComponent],\n  entryComponents: [AlertComponent]\n})\nexport class AlertModule {\n  static forRoot(): ModuleWithProviders<AlertModule> {\n    return { ngModule: AlertModule, providers: [] };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}