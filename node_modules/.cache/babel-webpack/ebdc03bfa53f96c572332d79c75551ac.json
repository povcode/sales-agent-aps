{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/prottasofgrosskofic/Documents/GitHub/sales-agent-site/aspro-sales-agent/blk-design-system-angular/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _createClass from \"/Users/prottasofgrosskofic/Documents/GitHub/sales-agent-site/aspro-sales-agent/blk-design-system-angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/prottasofgrosskofic/Documents/GitHub/sales-agent-site/aspro-sales-agent/blk-design-system-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { Injectable, ɵɵdefineInjectable, EventEmitter, Component, ChangeDetectionStrategy, ChangeDetectorRef, Renderer2, ElementRef, Directive, ViewContainerRef, Input, Output, TemplateRef, HostBinding, HostListener, NgModule } from '@angular/core';\nimport { filter } from 'rxjs/operators';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { isBs3 } from 'ngx-bootstrap/utils';\nimport { style, animate, AnimationBuilder } from '@angular/animations';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Default dropdown configuration\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/animations';\nimport * as ɵngcc2 from 'ngx-bootstrap/component-loader';\nvar _c0 = [\"*\"];\n\nvar BsDropdownConfig = /*#__PURE__*/_createClass(function BsDropdownConfig() {\n  _classCallCheck(this, BsDropdownConfig);\n\n  /**\n   * default dropdown auto closing behavior\n   */\n  this.autoClose = true;\n  /**\n   * default dropdown auto closing behavior\n   */\n\n  this.insideClick = false;\n  /**\n   * turn on/off animation\n   */\n\n  this.isAnimated = false;\n});\n\nBsDropdownConfig.ɵfac = function BsDropdownConfig_Factory(t) {\n  return new (t || BsDropdownConfig)();\n};\n/** @nocollapse */\n\n\nBsDropdownConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function BsDropdownConfig_Factory() {\n    return new BsDropdownConfig();\n  },\n  token: BsDropdownConfig,\n  providedIn: \"root\"\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(BsDropdownConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * default dropdown auto closing behavior\n   * @type {?}\n   */\n  BsDropdownConfig.prototype.autoClose;\n  /**\n   * default dropdown auto closing behavior\n   * @type {?}\n   */\n\n  BsDropdownConfig.prototype.insideClick;\n  /**\n   * turn on/off animation\n   * @type {?}\n   */\n\n  BsDropdownConfig.prototype.isAnimated;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar BsDropdownState = /*#__PURE__*/_createClass(function BsDropdownState() {\n  var _this = this;\n\n  _classCallCheck(this, BsDropdownState);\n\n  this.direction = 'down';\n  this.isOpenChange = new EventEmitter();\n  this.isDisabledChange = new EventEmitter();\n  this.toggleClick = new EventEmitter();\n  this.dropdownMenu = new Promise(\n  /**\n  * @param {?} resolve\n  * @return {?}\n  */\n  function (resolve) {\n    _this.resolveDropdownMenu = resolve;\n  });\n});\n\nBsDropdownState.ɵfac = function BsDropdownState_Factory(t) {\n  return new (t || BsDropdownState)();\n};\n\nBsDropdownState.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: BsDropdownState,\n  factory: BsDropdownState.ɵfac\n});\n/** @nocollapse */\n\nBsDropdownState.ctorParameters = function () {\n  return [];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(BsDropdownState, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nif (false) {\n  /** @type {?} */\n  BsDropdownState.prototype.direction;\n  /** @type {?} */\n\n  BsDropdownState.prototype.autoClose;\n  /** @type {?} */\n\n  BsDropdownState.prototype.insideClick;\n  /** @type {?} */\n\n  BsDropdownState.prototype.isAnimated;\n  /** @type {?} */\n\n  BsDropdownState.prototype.isOpenChange;\n  /** @type {?} */\n\n  BsDropdownState.prototype.isDisabledChange;\n  /** @type {?} */\n\n  BsDropdownState.prototype.toggleClick;\n  /**\n   * Content to be displayed as popover.\n   * @type {?}\n   */\n\n  BsDropdownState.prototype.dropdownMenu;\n  /** @type {?} */\n\n  BsDropdownState.prototype.resolveDropdownMenu;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar DROPDOWN_ANIMATION_TIMING = '220ms cubic-bezier(0, 0, 0.2, 1)';\n/** @type {?} */\n\nvar dropdownAnimation = [style({\n  height: 0,\n  overflow: 'hidden'\n}), animate(DROPDOWN_ANIMATION_TIMING, style({\n  height: '*',\n  overflow: 'hidden'\n}))];\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nvar BsDropdownContainerComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} _state\n   * @param {?} cd\n   * @param {?} _renderer\n   * @param {?} _element\n   * @param {?} _builder\n   */\n  function BsDropdownContainerComponent(_state, cd, _renderer, _element, _builder) {\n    var _this2 = this;\n\n    _classCallCheck(this, BsDropdownContainerComponent);\n\n    this._state = _state;\n    this.cd = cd;\n    this._renderer = _renderer;\n    this._element = _element;\n    this.isOpen = false;\n    this._factoryDropDownAnimation = _builder.build(dropdownAnimation);\n    this._subscription = _state.isOpenChange.subscribe(\n    /**\n    * @param {?} value\n    * @return {?}\n    */\n    function (value) {\n      _this2.isOpen = value;\n      /** @type {?} */\n\n      var dropdown = _this2._element.nativeElement.querySelector('.dropdown-menu');\n\n      _this2._renderer.addClass(_this2._element.nativeElement.querySelector('div'), 'open');\n\n      if (dropdown && !isBs3()) {\n        _this2._renderer.addClass(dropdown, 'show');\n\n        if (dropdown.classList.contains('dropdown-menu-right')) {\n          _this2._renderer.setStyle(dropdown, 'left', 'auto');\n\n          _this2._renderer.setStyle(dropdown, 'right', '0');\n        }\n\n        if (_this2.direction === 'up') {\n          _this2._renderer.setStyle(dropdown, 'top', 'auto');\n\n          _this2._renderer.setStyle(dropdown, 'transform', 'translateY(-101%)');\n        }\n      }\n\n      if (dropdown && _this2._state.isAnimated) {\n        _this2._factoryDropDownAnimation.create(dropdown).play();\n      }\n\n      _this2.cd.markForCheck();\n\n      _this2.cd.detectChanges();\n    });\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(BsDropdownContainerComponent, [{\n    key: \"direction\",\n    get: function get() {\n      return this._state.direction;\n    }\n    /**\n     * \\@internal\n     * @param {?} el\n     * @return {?}\n     */\n\n  }, {\n    key: \"_contains\",\n    value: function _contains(el) {\n      return this._element.nativeElement.contains(el);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._subscription.unsubscribe();\n    }\n  }]);\n\n  return BsDropdownContainerComponent;\n}();\n\nBsDropdownContainerComponent.ɵfac = function BsDropdownContainerComponent_Factory(t) {\n  return new (t || BsDropdownContainerComponent)(ɵngcc0.ɵɵdirectiveInject(BsDropdownState), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AnimationBuilder));\n};\n\nBsDropdownContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: BsDropdownContainerComponent,\n  selectors: [[\"bs-dropdown-container\"]],\n  hostAttrs: [2, \"display\", \"block\", \"position\", \"absolute\", \"z-index\", \"1040\"],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 8,\n  template: function BsDropdownContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\");\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"dropup\", ctx.direction === \"up\")(\"dropdown\", ctx.direction === \"down\")(\"show\", ctx.isOpen)(\"open\", ctx.isOpen);\n    }\n  },\n  directives: function directives() {\n    return [BsDropdownDirective];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nBsDropdownContainerComponent.ctorParameters = function () {\n  return [{\n    type: BsDropdownState\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }, {\n    type: AnimationBuilder\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(BsDropdownContainerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bs-dropdown-container',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        style: 'display:block;position: absolute;z-index: 1040'\n      },\n      template: \"\\n    <div [class.dropup]=\\\"direction === 'up'\\\"\\n         [class.dropdown]=\\\"direction === 'down'\\\"\\n         [class.show]=\\\"isOpen\\\"\\n         [class.open]=\\\"isOpen\\\"><ng-content></ng-content>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: BsDropdownState\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.AnimationBuilder\n    }];\n  }, null);\n})();\n\nif (false) {\n  /** @type {?} */\n  BsDropdownContainerComponent.prototype.isOpen;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownContainerComponent.prototype._factoryDropDownAnimation;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownContainerComponent.prototype._subscription;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownContainerComponent.prototype._state;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownContainerComponent.prototype.cd;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownContainerComponent.prototype._renderer;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownContainerComponent.prototype._element;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar BsDropdownDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} _elementRef\n   * @param {?} _renderer\n   * @param {?} _viewContainerRef\n   * @param {?} _cis\n   * @param {?} _state\n   * @param {?} _config\n   * @param {?} _builder\n   */\n  function BsDropdownDirective(_elementRef, _renderer, _viewContainerRef, _cis, _state, _config, _builder) {\n    _classCallCheck(this, BsDropdownDirective);\n\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._viewContainerRef = _viewContainerRef;\n    this._cis = _cis;\n    this._state = _state;\n    this._config = _config; // todo: move to component loader\n\n    this._isInlineOpen = false;\n    this._subscriptions = [];\n    this._isInited = false; // set initial dropdown state from config\n\n    this._state.autoClose = this._config.autoClose;\n    this._state.insideClick = this._config.insideClick;\n    this._state.isAnimated = this._config.isAnimated;\n    this._factoryDropDownAnimation = _builder.build(dropdownAnimation); // create dropdown component loader\n\n    this._dropdown = this._cis.createLoader(this._elementRef, this._viewContainerRef, this._renderer).provide({\n      provide: BsDropdownState,\n      useValue: this._state\n    });\n    this.onShown = this._dropdown.onShown;\n    this.onHidden = this._dropdown.onHidden;\n    this.isOpenChange = this._state.isOpenChange;\n  }\n  /**\n   * Indicates that dropdown will be closed on item or document click,\n   * and after pressing ESC\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  _createClass(BsDropdownDirective, [{\n    key: \"autoClose\",\n    get:\n    /**\n     * @return {?}\n     */\n    function get() {\n      return this._state.autoClose;\n    }\n    /**\n     * Indicates that dropdown will be animated\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._state.autoClose = value;\n    }\n  }, {\n    key: \"isAnimated\",\n    get:\n    /**\n     * @return {?}\n     */\n    function get() {\n      return this._state.isAnimated;\n    }\n    /**\n     * This attribute indicates that the dropdown shouldn't close on inside click when autoClose is set to true\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._state.isAnimated = value;\n    }\n  }, {\n    key: \"insideClick\",\n    get:\n    /**\n     * @return {?}\n     */\n    function get() {\n      return this._state.insideClick;\n    }\n    /**\n     * Disables dropdown toggle and hides dropdown menu if opened\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._state.insideClick = value;\n    }\n  }, {\n    key: \"isDisabled\",\n    get:\n    /**\n     * @return {?}\n     */\n    function get() {\n      return this._isDisabled;\n    }\n    /**\n     * Returns whether or not the popover is currently being shown\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._isDisabled = value;\n\n      this._state.isDisabledChange.emit(value);\n\n      if (value) {\n        this.hide();\n      }\n    }\n  }, {\n    key: \"isOpen\",\n    get: function get() {\n      if (this._showInline) {\n        return this._isInlineOpen;\n      }\n\n      return this._dropdown.isShown;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      if (value) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"isBs4\",\n    get: function get() {\n      return !isBs3();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"_showInline\",\n    get: function get() {\n      return !this.container;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this3 = this;\n\n      // fix: seems there are an issue with `routerLinkActive`\n      // which result in duplicated call ngOnInit without call to ngOnDestroy\n      // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n      if (this._isInited) {\n        return;\n      }\n\n      this._isInited = true; // attach DOM listeners\n\n      this._dropdown.listen({\n        // because of dropdown inline mode\n        outsideClick: false,\n        triggers: this.triggers,\n        show:\n        /**\n        * @return {?}\n        */\n        function show() {\n          return _this3.show();\n        }\n      }); // toggle visibility on toggle element click\n\n\n      this._subscriptions.push(this._state.toggleClick.subscribe(\n      /**\n      * @param {?} value\n      * @return {?}\n      */\n      function (value) {\n        return _this3.toggle(value);\n      })); // hide dropdown if set disabled while opened\n\n\n      this._subscriptions.push(this._state.isDisabledChange.pipe(filter(\n      /**\n      * @param {?} value\n      * @return {?}\n      */\n      function (value) {\n        return value;\n      })).subscribe(\n      /**\n      * @param {?} value\n      * @return {?}\n      */\n      function (value) {\n        return _this3.hide();\n      }));\n    }\n    /**\n     * Opens an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     * @return {?}\n     */\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _this4 = this;\n\n      if (this.isOpen || this.isDisabled) {\n        return;\n      }\n\n      if (this._showInline) {\n        if (!this._inlinedMenu) {\n          this._state.dropdownMenu.then(\n          /**\n          * @param {?} dropdownMenu\n          * @return {?}\n          */\n          function (dropdownMenu) {\n            _this4._dropdown.attachInline(dropdownMenu.viewContainer, dropdownMenu.templateRef);\n\n            _this4._inlinedMenu = _this4._dropdown._inlineViewRef;\n\n            _this4.addBs4Polyfills();\n\n            _this4._renderer.addClass(_this4._inlinedMenu.rootNodes[0].parentNode, 'open');\n\n            _this4.playAnimation();\n          }) // swallow errors\n          .catch();\n        }\n\n        this.addBs4Polyfills();\n        this._isInlineOpen = true;\n        this.onShown.emit(true);\n\n        this._state.isOpenChange.emit(true);\n\n        this.playAnimation();\n        return;\n      }\n\n      this._state.dropdownMenu.then(\n      /**\n      * @param {?} dropdownMenu\n      * @return {?}\n      */\n      function (dropdownMenu) {\n        // check direction in which dropdown should be opened\n\n        /** @type {?} */\n        var _dropup = _this4.dropup || typeof _this4.dropup !== 'undefined' && _this4.dropup;\n\n        _this4._state.direction = _dropup ? 'up' : 'down';\n        /** @type {?} */\n\n        var _placement = _this4.placement || (_dropup ? 'top start' : 'bottom start'); // show dropdown\n\n\n        _this4._dropdown.attach(BsDropdownContainerComponent).to(_this4.container).position({\n          attachment: _placement\n        }).show({\n          content: dropdownMenu.templateRef,\n          placement: _placement\n        });\n\n        _this4._state.isOpenChange.emit(true);\n      }) // swallow error\n      .catch();\n    }\n    /**\n     * Closes an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     * @return {?}\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      if (!this.isOpen) {\n        return;\n      }\n\n      if (this._showInline) {\n        this.removeShowClass();\n        this.removeDropupStyles();\n        this._isInlineOpen = false;\n        this.onHidden.emit(true);\n      } else {\n        this._dropdown.hide();\n      }\n\n      this._state.isOpenChange.emit(false);\n    }\n    /**\n     * Toggles an element’s popover. This is considered a “manual” triggering of\n     * the popover. With parameter <code>true</code> allows toggling, with parameter <code>false</code>\n     * only hides opened dropdown. Parameter usage will be removed in ngx-bootstrap v3\n     * @param {?=} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle(value) {\n      if (this.isOpen || !value) {\n        return this.hide();\n      }\n\n      return this.show();\n    }\n    /**\n     * \\@internal\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_contains\",\n    value: function _contains(event) {\n      return this._elementRef.nativeElement.contains(event.target) || this._dropdown.instance && this._dropdown.instance._contains(event.target);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      // clean up subscriptions and destroy dropdown\n      var _iterator = _createForOfIteratorHelper(this._subscriptions),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var sub = _step.value;\n          sub.unsubscribe();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this._dropdown.dispose();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"addBs4Polyfills\",\n    value: function addBs4Polyfills() {\n      if (!isBs3()) {\n        this.addShowClass();\n        this.checkRightAlignment();\n        this.addDropupStyles();\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"playAnimation\",\n    value: function playAnimation() {\n      var _this5 = this;\n\n      if (this._state.isAnimated && this._inlinedMenu) {\n        setTimeout(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this5._factoryDropDownAnimation.create(_this5._inlinedMenu.rootNodes[0]).play();\n        });\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"addShowClass\",\n    value: function addShowClass() {\n      if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n        this._renderer.addClass(this._inlinedMenu.rootNodes[0], 'show');\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeShowClass\",\n    value: function removeShowClass() {\n      if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n        this._renderer.removeClass(this._inlinedMenu.rootNodes[0], 'show');\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"checkRightAlignment\",\n    value: function checkRightAlignment() {\n      if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n        /** @type {?} */\n        var isRightAligned = this._inlinedMenu.rootNodes[0].classList.contains('dropdown-menu-right');\n\n        this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'left', isRightAligned ? 'auto' : '0');\n\n        this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'right', isRightAligned ? '0' : 'auto');\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"addDropupStyles\",\n    value: function addDropupStyles() {\n      if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n        // a little hack to not break support of bootstrap 4 beta\n        this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'top', this.dropup ? 'auto' : '100%');\n\n        this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'transform', this.dropup ? 'translateY(-101%)' : 'translateY(0)');\n\n        this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'bottom', 'auto');\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeDropupStyles\",\n    value: function removeDropupStyles() {\n      if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n        this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'top');\n\n        this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'transform');\n\n        this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'bottom');\n      }\n    }\n  }]);\n\n  return BsDropdownDirective;\n}();\n\nBsDropdownDirective.ɵfac = function BsDropdownDirective_Factory(t) {\n  return new (t || BsDropdownDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ComponentLoaderFactory), ɵngcc0.ɵɵdirectiveInject(BsDropdownState), ɵngcc0.ɵɵdirectiveInject(BsDropdownConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AnimationBuilder));\n};\n\nBsDropdownDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: BsDropdownDirective,\n  selectors: [[\"\", \"bsDropdown\", \"\"], [\"\", \"dropdown\", \"\"]],\n  hostVars: 6,\n  hostBindings: function BsDropdownDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"dropup\", ctx.dropup)(\"open\", ctx.isOpen)(\"show\", ctx.isOpen && ctx.isBs4);\n    }\n  },\n  inputs: {\n    autoClose: \"autoClose\",\n    isAnimated: \"isAnimated\",\n    insideClick: \"insideClick\",\n    isDisabled: \"isDisabled\",\n    isOpen: \"isOpen\",\n    placement: \"placement\",\n    triggers: \"triggers\",\n    container: \"container\",\n    dropup: \"dropup\"\n  },\n  outputs: {\n    onShown: \"onShown\",\n    onHidden: \"onHidden\",\n    isOpenChange: \"isOpenChange\"\n  },\n  exportAs: [\"bs-dropdown\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([BsDropdownState])]\n});\n/** @nocollapse */\n\nBsDropdownDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: ComponentLoaderFactory\n  }, {\n    type: BsDropdownState\n  }, {\n    type: BsDropdownConfig\n  }, {\n    type: AnimationBuilder\n  }];\n};\n\nBsDropdownDirective.propDecorators = {\n  placement: [{\n    type: Input\n  }],\n  triggers: [{\n    type: Input\n  }],\n  container: [{\n    type: Input\n  }],\n  dropup: [{\n    type: Input\n  }],\n  autoClose: [{\n    type: Input\n  }],\n  isAnimated: [{\n    type: Input\n  }],\n  insideClick: [{\n    type: Input\n  }],\n  isDisabled: [{\n    type: Input\n  }],\n  isOpen: [{\n    type: Input\n  }],\n  isOpenChange: [{\n    type: Output\n  }],\n  onShown: [{\n    type: Output\n  }],\n  onHidden: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(BsDropdownDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bsDropdown],[dropdown]',\n      exportAs: 'bs-dropdown',\n      providers: [BsDropdownState],\n      host: {\n        '[class.dropup]': 'dropup',\n        '[class.open]': 'isOpen',\n        '[class.show]': 'isOpen && isBs4'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc2.ComponentLoaderFactory\n    }, {\n      type: BsDropdownState\n    }, {\n      type: BsDropdownConfig\n    }, {\n      type: ɵngcc1.AnimationBuilder\n    }];\n  }, {\n    onShown: [{\n      type: Output\n    }],\n    onHidden: [{\n      type: Output\n    }],\n    isOpenChange: [{\n      type: Output\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    isAnimated: [{\n      type: Input\n    }],\n    insideClick: [{\n      type: Input\n    }],\n    isDisabled: [{\n      type: Input\n    }],\n    isOpen: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    triggers: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    dropup: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   * @type {?}\n   */\n  BsDropdownDirective.prototype.placement;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   * @type {?}\n   */\n\n  BsDropdownDirective.prototype.triggers;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * @type {?}\n   */\n\n  BsDropdownDirective.prototype.container;\n  /**\n   * This attribute indicates that the dropdown should be opened upwards\n   * @type {?}\n   */\n\n  BsDropdownDirective.prototype.dropup;\n  /**\n   * Emits an event when isOpen change\n   * @type {?}\n   */\n\n  BsDropdownDirective.prototype.isOpenChange;\n  /**\n   * Emits an event when the popover is shown\n   * @type {?}\n   */\n\n  BsDropdownDirective.prototype.onShown;\n  /**\n   * Emits an event when the popover is hidden\n   * @type {?}\n   */\n\n  BsDropdownDirective.prototype.onHidden;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownDirective.prototype._dropdown;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownDirective.prototype._isInlineOpen;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownDirective.prototype._inlinedMenu;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownDirective.prototype._isDisabled;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownDirective.prototype._subscriptions;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownDirective.prototype._isInited;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownDirective.prototype._factoryDropDownAnimation;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownDirective.prototype._elementRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownDirective.prototype._renderer;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownDirective.prototype._viewContainerRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownDirective.prototype._cis;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownDirective.prototype._state;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownDirective.prototype._config;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar BsDropdownMenuDirective = /*#__PURE__*/_createClass( // tslint:disable:no-any\n\n/**\n * @param {?} _state\n * @param {?} _viewContainer\n * @param {?} _templateRef\n */\nfunction BsDropdownMenuDirective(_state, _viewContainer, _templateRef) {\n  _classCallCheck(this, BsDropdownMenuDirective);\n\n  _state.resolveDropdownMenu({\n    templateRef: _templateRef,\n    viewContainer: _viewContainer\n  });\n});\n\nBsDropdownMenuDirective.ɵfac = function BsDropdownMenuDirective_Factory(t) {\n  return new (t || BsDropdownMenuDirective)(ɵngcc0.ɵɵdirectiveInject(BsDropdownState), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nBsDropdownMenuDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: BsDropdownMenuDirective,\n  selectors: [[\"\", \"bsDropdownMenu\", \"\"], [\"\", \"dropdownMenu\", \"\"]],\n  exportAs: [\"bs-dropdown-menu\"]\n});\n/** @nocollapse */\n\nBsDropdownMenuDirective.ctorParameters = function () {\n  return [{\n    type: BsDropdownState\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: TemplateRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(BsDropdownMenuDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bsDropdownMenu],[dropdownMenu]',\n      exportAs: 'bs-dropdown-menu'\n    }]\n  }], function () {\n    return [{\n      type: BsDropdownState\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar BsDropdownToggleDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} _changeDetectorRef\n   * @param {?} _dropdown\n   * @param {?} _element\n   * @param {?} _renderer\n   * @param {?} _state\n   */\n  function BsDropdownToggleDirective(_changeDetectorRef, _dropdown, _element, _renderer, _state) {\n    var _this6 = this;\n\n    _classCallCheck(this, BsDropdownToggleDirective);\n\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dropdown = _dropdown;\n    this._element = _element;\n    this._renderer = _renderer;\n    this._state = _state;\n    this.isDisabled = null;\n    this._subscriptions = []; // sync is open value with state\n\n    this._subscriptions.push(this._state.isOpenChange.subscribe(\n    /**\n    * @param {?} value\n    * @return {?}\n    */\n    function (value) {\n      _this6.isOpen = value;\n\n      if (value) {\n        _this6._documentClickListener = _this6._renderer.listen('document', 'click',\n        /**\n        * @param {?} event\n        * @return {?}\n        */\n        function (event) {\n          if (_this6._state.autoClose && event.button !== 2 && !_this6._element.nativeElement.contains(event.target) && !(_this6._state.insideClick && _this6._dropdown._contains(event))) {\n            _this6._state.toggleClick.emit(false);\n\n            _this6._changeDetectorRef.detectChanges();\n          }\n        });\n        _this6._escKeyUpListener = _this6._renderer.listen(_this6._element.nativeElement, 'keyup.esc',\n        /**\n        * @return {?}\n        */\n        function () {\n          if (_this6._state.autoClose) {\n            _this6._state.toggleClick.emit(false);\n\n            _this6._changeDetectorRef.detectChanges();\n          }\n        });\n      } else {\n        _this6._documentClickListener();\n\n        _this6._escKeyUpListener();\n      }\n    })); // populate disabled state\n\n\n    this._subscriptions.push(this._state.isDisabledChange.subscribe(\n    /**\n    * @param {?} value\n    * @return {?}\n    */\n    function (value) {\n      return _this6.isDisabled = value || null;\n    }));\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(BsDropdownToggleDirective, [{\n    key: \"onClick\",\n    value: function onClick() {\n      if (this.isDisabled) {\n        return;\n      }\n\n      this._state.toggleClick.emit(true);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this._documentClickListener) {\n        this._documentClickListener();\n      }\n\n      if (this._escKeyUpListener) {\n        this._escKeyUpListener();\n      }\n\n      var _iterator2 = _createForOfIteratorHelper(this._subscriptions),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var sub = _step2.value;\n          sub.unsubscribe();\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }]);\n\n  return BsDropdownToggleDirective;\n}();\n\nBsDropdownToggleDirective.ɵfac = function BsDropdownToggleDirective_Factory(t) {\n  return new (t || BsDropdownToggleDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(BsDropdownDirective), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(BsDropdownState));\n};\n\nBsDropdownToggleDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: BsDropdownToggleDirective,\n  selectors: [[\"\", \"bsDropdownToggle\", \"\"], [\"\", \"dropdownToggle\", \"\"]],\n  hostVars: 3,\n  hostBindings: function BsDropdownToggleDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function BsDropdownToggleDirective_click_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-haspopup\", true)(\"disabled\", ctx.isDisabled)(\"aria-expanded\", ctx.isOpen);\n    }\n  },\n  exportAs: [\"bs-dropdown-toggle\"]\n});\n/** @nocollapse */\n\nBsDropdownToggleDirective.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: BsDropdownDirective\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: BsDropdownState\n  }];\n};\n\nBsDropdownToggleDirective.propDecorators = {\n  isDisabled: [{\n    type: HostBinding,\n    args: ['attr.disabled']\n  }],\n  isOpen: [{\n    type: HostBinding,\n    args: ['attr.aria-expanded']\n  }],\n  onClick: [{\n    type: HostListener,\n    args: ['click', []]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(BsDropdownToggleDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bsDropdownToggle],[dropdownToggle]',\n      exportAs: 'bs-dropdown-toggle',\n      host: {\n        '[attr.aria-haspopup]': 'true'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: BsDropdownDirective\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: BsDropdownState\n    }];\n  }, {\n    isDisabled: [{\n      type: HostBinding,\n      args: ['attr.disabled']\n    }],\n    isOpen: [{\n      type: HostBinding,\n      args: ['attr.aria-expanded']\n    }],\n\n    /**\n     * @return {?}\n     */\n    onClick: [{\n      type: HostListener,\n      args: ['click', []]\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  BsDropdownToggleDirective.prototype.isDisabled;\n  /** @type {?} */\n\n  BsDropdownToggleDirective.prototype.isOpen;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownToggleDirective.prototype._subscriptions;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownToggleDirective.prototype._documentClickListener;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownToggleDirective.prototype._escKeyUpListener;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownToggleDirective.prototype._changeDetectorRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownToggleDirective.prototype._dropdown;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownToggleDirective.prototype._element;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownToggleDirective.prototype._renderer;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsDropdownToggleDirective.prototype._state;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar BsDropdownModule = /*#__PURE__*/function () {\n  function BsDropdownModule() {\n    _classCallCheck(this, BsDropdownModule);\n  }\n\n  _createClass(BsDropdownModule, null, [{\n    key: \"forRoot\",\n    value: // tslint:disable-next-line:no-any\n\n    /**\n     * @param {?=} config\n     * @return {?}\n     */\n    function forRoot(config) {\n      return {\n        ngModule: BsDropdownModule,\n        providers: [ComponentLoaderFactory, PositioningService, BsDropdownState]\n      };\n    }\n  }]);\n\n  return BsDropdownModule;\n}();\n\nBsDropdownModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: BsDropdownModule\n});\nBsDropdownModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function BsDropdownModule_Factory(t) {\n    return new (t || BsDropdownModule)();\n  }\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BsDropdownModule, {\n    declarations: [BsDropdownMenuDirective, BsDropdownToggleDirective, BsDropdownContainerComponent, BsDropdownDirective],\n    exports: [BsDropdownMenuDirective, BsDropdownToggleDirective, BsDropdownDirective]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(BsDropdownModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [BsDropdownMenuDirective, BsDropdownToggleDirective, BsDropdownContainerComponent, BsDropdownDirective],\n      exports: [BsDropdownMenuDirective, BsDropdownToggleDirective, BsDropdownDirective],\n      entryComponents: [BsDropdownContainerComponent]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { BsDropdownConfig, BsDropdownContainerComponent, BsDropdownDirective, BsDropdownMenuDirective, BsDropdownModule, BsDropdownState, BsDropdownToggleDirective };","map":{"version":3,"sources":["ngx-bootstrap/dropdown/bs-dropdown.config.ts","ngx-bootstrap/dropdown/bs-dropdown.state.ts","ngx-bootstrap/dropdown/dropdown-animations.ts","ngx-bootstrap/dropdown/bs-dropdown-container.component.ts","ngx-bootstrap/dropdown/bs-dropdown.directive.ts","ngx-bootstrap/dropdown/bs-dropdown-menu.directive.ts","ngx-bootstrap/dropdown/bs-dropdown-toggle.directive.ts","ngx-bootstrap/dropdown/bs-dropdown.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n/** Default dropdown configuration */\n@Injectable({\n  providedIn: 'root'\n})\nexport class BsDropdownConfig {\n  /** default dropdown auto closing behavior */\n  autoClose = true;\n  /** default dropdown auto closing behavior */\n  insideClick = false;\n  /** turn on/off animation */\n  isAnimated = false;\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { BsComponentRef } from 'ngx-bootstrap/component-loader';\n\n@Injectable()\nexport class BsDropdownState {\n  direction: 'down' | 'up' = 'down';\n  autoClose: boolean;\n  insideClick: boolean;\n  isAnimated: boolean;\n  isOpenChange = new EventEmitter<boolean>();\n  isDisabledChange = new EventEmitter<boolean>();\n  toggleClick = new EventEmitter<boolean>();\n\n  /**\n   * Content to be displayed as popover.\n   */\n  // tslint:disable:no-any\n  dropdownMenu: Promise<BsComponentRef<any>>;\n  resolveDropdownMenu: (componentRef: BsComponentRef<any>) => void;\n\n  constructor() {\n    this.dropdownMenu = new Promise(resolve => {\n      this.resolveDropdownMenu = resolve;\n    });\n  }\n}\n","import {\n  animate,\n  style,\n  AnimationMetadata\n} from '@angular/animations';\n\nexport const DROPDOWN_ANIMATION_TIMING = '220ms cubic-bezier(0, 0, 0.2, 1)';\n\nexport const dropdownAnimation: AnimationMetadata[] = [\n  style({ height: 0, overflow: 'hidden' }),\n  animate(\n    DROPDOWN_ANIMATION_TIMING,\n    style({ height: '*', overflow: 'hidden' })\n  )\n];\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnDestroy,\n  Renderer2\n} from '@angular/core';\n\nimport { BsDropdownState } from './bs-dropdown.state';\nimport { isBs3 } from 'ngx-bootstrap/utils';\n\nimport { dropdownAnimation } from './dropdown-animations';\nimport { AnimationBuilder, AnimationFactory } from '@angular/animations';\n\n@Component({\n  selector: 'bs-dropdown-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    style: 'display:block;position: absolute;z-index: 1040'\n  },\n  template: `\n    <div [class.dropup]=\"direction === 'up'\"\n         [class.dropdown]=\"direction === 'down'\"\n         [class.show]=\"isOpen\"\n         [class.open]=\"isOpen\"><ng-content></ng-content>\n    </div>\n  `\n})\nexport class BsDropdownContainerComponent implements OnDestroy {\n  isOpen = false;\n\n  private _factoryDropDownAnimation: AnimationFactory;\n\n  get direction(): 'down' | 'up' {\n    return this._state.direction;\n  }\n\n// tslint:disable-next-line:no-any\n  private _subscription: any;\n\n  constructor(\n    private _state: BsDropdownState,\n    private cd: ChangeDetectorRef,\n    private _renderer: Renderer2,\n    private _element: ElementRef,\n    _builder: AnimationBuilder\n  ) {\n    this._factoryDropDownAnimation = _builder.build(dropdownAnimation);\n\n    this._subscription = _state.isOpenChange.subscribe((value: boolean) => {\n      this.isOpen = value;\n\n      const dropdown = this._element.nativeElement.querySelector('.dropdown-menu');\n\n      this._renderer.addClass(this._element.nativeElement.querySelector('div'), 'open');\n\n      if (dropdown && !isBs3()) {\n        this._renderer.addClass(dropdown, 'show');\n\n        if (dropdown.classList.contains('dropdown-menu-right')) {\n          this._renderer.setStyle(dropdown, 'left', 'auto');\n          this._renderer.setStyle(dropdown, 'right', '0');\n        }\n        if (this.direction === 'up') {\n          this._renderer.setStyle(dropdown, 'top', 'auto');\n          this._renderer.setStyle(\n            dropdown,\n            'transform',\n            'translateY(-101%)'\n          );\n        }\n      }\n\n      if (dropdown && this._state.isAnimated) {\n        this._factoryDropDownAnimation.create(dropdown)\n          .play();\n      }\n\n      this.cd.markForCheck();\n      this.cd.detectChanges();\n    });\n  }\n\n  /** @internal */\n  _contains(el: Element): boolean {\n    return this._element.nativeElement.contains(el);\n  }\n\n  ngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\n}\n","// tslint:disable:max-file-line-count\nimport {\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewContainerRef\n} from '@angular/core';\nimport { filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { ComponentLoader, ComponentLoaderFactory, BsComponentRef } from 'ngx-bootstrap/component-loader';\n\nimport { BsDropdownConfig } from './bs-dropdown.config';\nimport { BsDropdownContainerComponent } from './bs-dropdown-container.component';\nimport { BsDropdownState } from './bs-dropdown.state';\nimport { BsDropdownMenuDirective } from './index';\nimport { isBs3 } from 'ngx-bootstrap/utils';\nimport { AnimationBuilder, AnimationFactory } from '@angular/animations';\nimport { dropdownAnimation } from './dropdown-animations';\n\n@Directive({\n  selector: '[bsDropdown],[dropdown]',\n  exportAs: 'bs-dropdown',\n  providers: [BsDropdownState],\n  host: {\n    '[class.dropup]': 'dropup',\n    '[class.open]': 'isOpen',\n    '[class.show]': 'isOpen && isBs4'\n  }\n})\nexport class BsDropdownDirective implements OnInit, OnDestroy {\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  @Input() placement: string;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  @Input() triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   */\n  @Input() container: string;\n\n  /**\n   * This attribute indicates that the dropdown should be opened upwards\n   */\n  @Input() dropup: boolean;\n\n  /**\n   * Indicates that dropdown will be closed on item or document click,\n   * and after pressing ESC\n   */\n  @Input()\n  set autoClose(value: boolean) {\n    this._state.autoClose = value;\n  }\n\n  get autoClose(): boolean {\n    return this._state.autoClose;\n  }\n\n  /**\n   * Indicates that dropdown will be animated\n   */\n  @Input()\n  set isAnimated(value: boolean) {\n    this._state.isAnimated = value;\n  }\n\n  get isAnimated(): boolean {\n    return this._state.isAnimated;\n  }\n\n  /**\n   * This attribute indicates that the dropdown shouldn't close on inside click when autoClose is set to true\n   */\n  @Input()\n  set insideClick(value: boolean) {\n    this._state.insideClick = value;\n  }\n\n  get insideClick(): boolean {\n    return this._state.insideClick;\n  }\n\n  /**\n   * Disables dropdown toggle and hides dropdown menu if opened\n   */\n  @Input()\n  set isDisabled(value: boolean) {\n    this._isDisabled = value;\n    this._state.isDisabledChange.emit(value);\n    if (value) {\n      this.hide();\n    }\n  }\n\n  get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  @Input()\n  get isOpen(): boolean {\n    if (this._showInline) {\n      return this._isInlineOpen;\n    }\n\n    return this._dropdown.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Emits an event when isOpen change\n   */\n  @Output() isOpenChange: EventEmitter<boolean>;\n\n  /**\n   * Emits an event when the popover is shown\n   */\n  @Output() onShown: EventEmitter<boolean>;\n\n  /**\n   * Emits an event when the popover is hidden\n   */\n  @Output() onHidden: EventEmitter<boolean>;\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  private _dropdown: ComponentLoader<BsDropdownContainerComponent>;\n\n  private get _showInline(): boolean {\n    return !this.container;\n  }\n\n  // todo: move to component loader\n  private _isInlineOpen = false;\n\n  private _inlinedMenu: EmbeddedViewRef<BsDropdownMenuDirective>;\n  private _isDisabled: boolean;\n  private _subscriptions: Subscription[] = [];\n  private _isInited = false;\n  private _factoryDropDownAnimation: AnimationFactory;\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2,\n    private _viewContainerRef: ViewContainerRef,\n    private _cis: ComponentLoaderFactory,\n    private _state: BsDropdownState,\n    private _config: BsDropdownConfig,\n    _builder: AnimationBuilder\n  ) {\n    // set initial dropdown state from config\n    this._state.autoClose = this._config.autoClose;\n    this._state.insideClick = this._config.insideClick;\n    this._state.isAnimated = this._config.isAnimated;\n\n    this._factoryDropDownAnimation = _builder.build(dropdownAnimation);\n\n    // create dropdown component loader\n    this._dropdown = this._cis\n      .createLoader<BsDropdownContainerComponent>(\n        this._elementRef,\n        this._viewContainerRef,\n        this._renderer\n      )\n      .provide({provide: BsDropdownState, useValue: this._state});\n\n    this.onShown = this._dropdown.onShown;\n    this.onHidden = this._dropdown.onHidden;\n    this.isOpenChange = this._state.isOpenChange;\n\n  }\n\n  ngOnInit(): void {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n    if (this._isInited) {\n      return;\n    }\n    this._isInited = true;\n\n    // attach DOM listeners\n    this._dropdown.listen({\n      // because of dropdown inline mode\n      outsideClick: false,\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n\n    // toggle visibility on toggle element click\n    this._subscriptions.push(\n      this._state.toggleClick.subscribe((value: boolean) => this.toggle(value))\n    );\n\n    // hide dropdown if set disabled while opened\n    this._subscriptions.push(\n      this._state.isDisabledChange\n        .pipe(\n          filter((value: boolean) => value)\n        )\n        .subscribe((value: boolean) => this.hide())\n    );\n  }\n\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  show(): void {\n    if (this.isOpen || this.isDisabled) {\n      return;\n    }\n\n    if (this._showInline) {\n      if (!this._inlinedMenu) {\n        this._state.dropdownMenu.then(\n          (dropdownMenu: BsComponentRef<BsDropdownMenuDirective>) => {\n            this._dropdown.attachInline(\n              dropdownMenu.viewContainer,\n              dropdownMenu.templateRef\n            );\n            this._inlinedMenu = this._dropdown._inlineViewRef;\n\n            this.addBs4Polyfills();\n            this._renderer.addClass(this._inlinedMenu.rootNodes[0].parentNode, 'open');\n\n            this.playAnimation();\n          }\n        )\n        // swallow errors\n          .catch();\n      }\n      this.addBs4Polyfills();\n\n      this._isInlineOpen = true;\n      this.onShown.emit(true);\n      this._state.isOpenChange.emit(true);\n\n      this.playAnimation();\n\n      return;\n    }\n    this._state.dropdownMenu.then(dropdownMenu => {\n      // check direction in which dropdown should be opened\n      const _dropup =\n        this.dropup ||\n        (typeof this.dropup !== 'undefined' && this.dropup);\n      this._state.direction = _dropup ? 'up' : 'down';\n      const _placement = this.placement || (_dropup ? 'top start' : 'bottom start');\n\n      // show dropdown\n      this._dropdown\n        .attach(BsDropdownContainerComponent)\n        .to(this.container)\n        .position({attachment: _placement})\n        .show({\n          content: dropdownMenu.templateRef,\n          placement: _placement\n        });\n\n      this._state.isOpenChange.emit(true);\n    })\n    // swallow error\n      .catch();\n  }\n\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  hide(): void {\n    if (!this.isOpen) {\n      return;\n    }\n\n    if (this._showInline) {\n      this.removeShowClass();\n      this.removeDropupStyles();\n      this._isInlineOpen = false;\n      this.onHidden.emit(true);\n    } else {\n      this._dropdown.hide();\n    }\n\n    this._state.isOpenChange.emit(false);\n  }\n\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover. With parameter <code>true</code> allows toggling, with parameter <code>false</code>\n   * only hides opened dropdown. Parameter usage will be removed in ngx-bootstrap v3\n   */\n  toggle(value?: boolean): void {\n    if (this.isOpen || !value) {\n      return this.hide();\n    }\n\n    return this.show();\n  }\n\n  /** @internal */\n  _contains(event: any): boolean {\n    return this._elementRef.nativeElement.contains(event.target) ||\n      (this._dropdown.instance && this._dropdown.instance._contains(event.target));\n  }\n\n  ngOnDestroy(): void {\n    // clean up subscriptions and destroy dropdown\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n    this._dropdown.dispose();\n  }\n\n  private addBs4Polyfills(): void {\n    if (!isBs3()) {\n      this.addShowClass();\n      this.checkRightAlignment();\n      this.addDropupStyles();\n    }\n  }\n\n  private playAnimation(): void {\n    if (this._state.isAnimated && this._inlinedMenu) {\n      setTimeout(() => {\n        this._factoryDropDownAnimation.create(this._inlinedMenu.rootNodes[0])\n          .play();\n      });\n    }\n  }\n\n  private addShowClass(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.addClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  private removeShowClass(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.removeClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  private checkRightAlignment(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      const isRightAligned = this._inlinedMenu.rootNodes[0].classList.contains(\n        'dropdown-menu-right'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'left',\n        isRightAligned ? 'auto' : '0'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'right',\n        isRightAligned ? '0' : 'auto'\n      );\n    }\n  }\n\n  private addDropupStyles(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      // a little hack to not break support of bootstrap 4 beta\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'top',\n        this.dropup ? 'auto' : '100%'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'transform',\n        this.dropup ? 'translateY(-101%)' : 'translateY(0)'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'bottom',\n        'auto'\n      );\n    }\n  }\n\n  private removeDropupStyles(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'top');\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'transform');\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'bottom');\n    }\n  }\n}\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n@Directive({\n  selector: '[bsDropdownMenu],[dropdownMenu]',\n  exportAs: 'bs-dropdown-menu'\n})\nexport class BsDropdownMenuDirective {\n  // tslint:disable:no-any\n  constructor(\n    _state: BsDropdownState,\n    _viewContainer: ViewContainerRef,\n    _templateRef: TemplateRef<any>\n  ) {\n    _state.resolveDropdownMenu({\n      templateRef: _templateRef,\n      viewContainer: _viewContainer\n    });\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  OnDestroy,\n  Renderer2\n} from '@angular/core';\n\nimport { Subscription } from 'rxjs';\nimport { BsDropdownState } from './bs-dropdown.state';\nimport { BsDropdownDirective } from './bs-dropdown.directive';\n\n@Directive({\n  selector: '[bsDropdownToggle],[dropdownToggle]',\n  exportAs: 'bs-dropdown-toggle',\n  host: {\n    '[attr.aria-haspopup]': 'true'\n  }\n})\nexport class BsDropdownToggleDirective implements OnDestroy {\n  @HostBinding('attr.disabled') isDisabled: boolean = null;\n  @HostBinding('attr.aria-expanded') isOpen: boolean;\n\n  private _subscriptions: Subscription[] = [];\n  private _documentClickListener: Function;\n  private _escKeyUpListener: Function;\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _dropdown: BsDropdownDirective,\n    private _element: ElementRef,\n    private _renderer: Renderer2,\n    private _state: BsDropdownState\n  ) {\n    // sync is open value with state\n    this._subscriptions.push(\n      this._state.isOpenChange.subscribe(\n        (value: boolean) => {\n          this.isOpen = value;\n\n          if (value) {\n            this._documentClickListener = this._renderer.listen('document', 'click', (event: any) => {\n              if (this._state.autoClose && event.button !== 2 &&\n                !this._element.nativeElement.contains(event.target) &&\n                !(this._state.insideClick && this._dropdown._contains(event))\n              ) {\n                this._state.toggleClick.emit(false);\n                this._changeDetectorRef.detectChanges();\n              }\n            });\n\n            this._escKeyUpListener = this._renderer.listen(this._element.nativeElement, 'keyup.esc', () => {\n              if (this._state.autoClose) {\n                this._state.toggleClick.emit(false);\n                this._changeDetectorRef.detectChanges();\n              }\n            });\n          } else {\n            this._documentClickListener();\n            this._escKeyUpListener();\n          }\n        }\n      )\n    );\n\n    // populate disabled state\n    this._subscriptions.push(\n      this._state.isDisabledChange.subscribe(\n        (value: boolean) => (this.isDisabled = value || null)\n      )\n    );\n  }\n\n  @HostListener('click', [])\n  onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n    this._state.toggleClick.emit(true);\n  }\n\n  ngOnDestroy(): void {\n    if (this._documentClickListener) {\n      this._documentClickListener();\n    }\n\n    if (this._escKeyUpListener) {\n      this._escKeyUpListener();\n    }\n\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\n\nimport { PositioningService } from 'ngx-bootstrap/positioning';\nimport { BsDropdownContainerComponent } from './bs-dropdown-container.component';\nimport { BsDropdownMenuDirective } from './bs-dropdown-menu.directive';\nimport { BsDropdownToggleDirective } from './bs-dropdown-toggle.directive';\n\nimport { BsDropdownDirective } from './bs-dropdown.directive';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n@NgModule({\n  declarations: [\n    BsDropdownMenuDirective,\n    BsDropdownToggleDirective,\n    BsDropdownContainerComponent,\n    BsDropdownDirective\n  ],\n  exports: [\n    BsDropdownMenuDirective,\n    BsDropdownToggleDirective,\n    BsDropdownDirective\n  ],\n  entryComponents: [BsDropdownContainerComponent]\n})\nexport class BsDropdownModule {\n  // tslint:disable-next-line:no-any\n  static forRoot(config?: any): ModuleWithProviders<BsDropdownModule> {\n    return {\n      ngModule: BsDropdownModule,\n      providers: [\n        ComponentLoaderFactory,\n        PositioningService,\n        BsDropdownState\n      ]\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}