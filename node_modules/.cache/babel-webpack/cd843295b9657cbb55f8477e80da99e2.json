{"ast":null,"code":"import _defineProperty from \"/Users/prottasofgrosskofic/Documents/GitHub/sales-agent-site/aspro-sales-agent/blk-design-system-angular/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/prottasofgrosskofic/Documents/GitHub/sales-agent-site/aspro-sales-agent/blk-design-system-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/prottasofgrosskofic/Documents/GitHub/sales-agent-site/aspro-sales-agent/blk-design-system-angular/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} n\n * @param {?} x\n * @return {?}\n */\nfunction mod(n, x) {\n  return (n % x + x) % x;\n}\n/**\n * @param {?} num\n * @return {?}\n */\n\n\nfunction absFloor(num) {\n  return num < 0 ? Math.ceil(num) || 0 : Math.floor(num);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} str\n * @return {?}\n */\n\n\nfunction isString(str) {\n  return typeof str === 'string';\n}\n/**\n * @param {?} value\n * @return {?}\n */\n\n\nfunction isDate(value) {\n  return value instanceof Date || Object.prototype.toString.call(value) === '[object Date]';\n}\n/**\n * @param {?} value\n * @return {?}\n */\n\n\nfunction isBoolean(value) {\n  return value === true || value === false;\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction isDateValid(date) {\n  return date && date.getTime && !isNaN(date.getTime());\n}\n/**\n * @param {?} fn\n * @return {?}\n */\n\n\nfunction isFunction(fn) {\n  return fn instanceof Function || Object.prototype.toString.call(fn) === '[object Function]';\n}\n/**\n * @param {?=} value\n * @return {?}\n */\n\n\nfunction isNumber(value) {\n  return typeof value === 'number' || Object.prototype.toString.call(value) === '[object Number]';\n}\n/**\n * @template T\n * @param {?=} input\n * @return {?}\n */\n\n\nfunction isArray(input) {\n  return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n}\n/**\n * @template T\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\n\n\nfunction hasOwnProp(a\n/*object*/\n, b) {\n  return Object.prototype.hasOwnProperty.call(a, b);\n}\n/**\n * @template T\n * @param {?} input\n * @return {?}\n */\n\n\nfunction isObject(input\n/*object*/\n) {\n  // IE8 will treat undefined and null as object if it wasn't for\n  // input != null\n  return input != null && Object.prototype.toString.call(input) === '[object Object]';\n}\n/**\n * @param {?} obj\n * @return {?}\n */\n\n\nfunction isObjectEmpty(obj) {\n  if (Object.getOwnPropertyNames) {\n    return Object.getOwnPropertyNames(obj).length === 0;\n  }\n  /** @type {?} */\n\n\n  var k;\n\n  for (k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @param {?} input\n * @return {?}\n */\n\n\nfunction isUndefined(input) {\n  return input === void 0;\n}\n/**\n * @template T\n * @param {?} argumentForCoercion\n * @return {?}\n */\n\n\nfunction toInt(argumentForCoercion) {\n  /** @type {?} */\n  var coercedNumber = +argumentForCoercion;\n  /** @type {?} */\n\n  var value = 0;\n\n  if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n    value = absFloor(coercedNumber);\n  }\n\n  return value;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar aliases = {};\n/** @type {?} */\n\nvar _mapUnits = {\n  date: 'day',\n  hour: 'hours',\n  minute: 'minutes',\n  second: 'seconds',\n  millisecond: 'milliseconds'\n};\n/**\n * @param {?} unit\n * @param {?} shorthand\n * @return {?}\n */\n\nfunction addUnitAlias(unit, shorthand) {\n  /** @type {?} */\n  var lowerCase = unit.toLowerCase();\n  /** @type {?} */\n\n  var _unit = unit;\n\n  if (lowerCase in _mapUnits) {\n    _unit = _mapUnits[lowerCase];\n  }\n\n  aliases[lowerCase] = aliases[\"\".concat(lowerCase, \"s\")] = aliases[shorthand] = _unit;\n}\n/**\n * @param {?} units\n * @return {?}\n */\n\n\nfunction normalizeUnits(units) {\n  return isString(units) ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n/**\n * @param {?} inputObject\n * @return {?}\n */\n\n\nfunction normalizeObjectUnits(inputObject) {\n  /** @type {?} */\n  var normalizedInput = {};\n  /** @type {?} */\n\n  var normalizedProp;\n  /** @type {?} */\n\n  var prop;\n\n  for (prop in inputObject) {\n    if (hasOwnProp(inputObject, prop)) {\n      normalizedProp = normalizeUnits(prop);\n\n      if (normalizedProp) {\n        normalizedInput[normalizedProp] = inputObject[prop];\n      }\n    }\n  }\n\n  return (\n    /** @type {?} */\n    normalizedInput\n  );\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// place in new Date([array])\n\n/** @type {?} */\n\n\nvar YEAR = 0;\n/** @type {?} */\n\nvar MONTH = 1;\n/** @type {?} */\n\nvar DATE = 2;\n/** @type {?} */\n\nvar HOUR = 3;\n/** @type {?} */\n\nvar MINUTE = 4;\n/** @type {?} */\n\nvar SECOND = 5;\n/** @type {?} */\n\nvar MILLISECOND = 6;\n/** @type {?} */\n\nvar WEEK = 7;\n/** @type {?} */\n\nvar WEEKDAY = 8;\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} num\n * @param {?} targetLength\n * @param {?=} forceSign\n * @return {?}\n */\n\nfunction zeroFill(num, targetLength, forceSign) {\n  /** @type {?} */\n  var absNumber = \"\".concat(Math.abs(num));\n  /** @type {?} */\n\n  var zerosToFill = targetLength - absNumber.length;\n  /** @type {?} */\n\n  var sign = num >= 0;\n  /** @type {?} */\n\n  var _sign = sign ? forceSign ? '+' : '' : '-'; // todo: this is crazy slow\n\n  /** @type {?} */\n\n\n  var _zeros = Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1);\n\n  return _sign + _zeros + absNumber;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar formatFunctions = {};\n/** @type {?} */\n\nvar formatTokenFunctions = {}; // tslint:disable-next-line\n\n/** @type {?} */\n\nvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g; // token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\n\n/**\n * @param {?} token\n * @param {?} padded\n * @param {?} ordinal\n * @param {?} callback\n * @return {?}\n */\n\nfunction addFormatToken(token, padded, ordinal, callback) {\n  if (token) {\n    formatTokenFunctions[token] = callback;\n  }\n\n  if (padded) {\n    formatTokenFunctions[padded[0]] =\n    /**\n    * @return {?}\n    */\n    function () {\n      return zeroFill(callback.apply(null, arguments), padded[1], padded[2]);\n    };\n  }\n\n  if (ordinal) {\n    formatTokenFunctions[ordinal] =\n    /**\n    * @param {?} date\n    * @param {?} opts\n    * @return {?}\n    */\n    function (date, opts) {\n      return opts.locale.ordinal(callback.apply(null, arguments), token);\n    };\n  }\n}\n/**\n * @param {?} format\n * @return {?}\n */\n\n\nfunction makeFormatFunction(format) {\n  /** @type {?} */\n  var array = format.match(formattingTokens);\n  /** @type {?} */\n\n  var length = array.length;\n  /** @type {?} */\n\n  var formatArr = new Array(length);\n\n  for (var i = 0; i < length; i++) {\n    formatArr[i] = formatTokenFunctions[array[i]] ? formatTokenFunctions[array[i]] : removeFormattingTokens(array[i]);\n  }\n\n  return (\n    /**\n    * @param {?} date\n    * @param {?} locale\n    * @param {?} isUTC\n    * @param {?=} offset\n    * @return {?}\n    */\n    function (date, locale, isUTC) {\n      var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n      /** @type {?} */\n      var output = '';\n\n      for (var j = 0; j < length; j++) {\n        output += isFunction(formatArr[j]) ?\n        /** @type {?} */\n        formatArr[j].call(null, date, {\n          format: format,\n          locale: locale,\n          isUTC: isUTC,\n          offset: offset\n        }) : formatArr[j];\n      }\n\n      return output;\n    }\n  );\n}\n/**\n * @param {?} input\n * @return {?}\n */\n\n\nfunction removeFormattingTokens(input) {\n  if (input.match(/\\[[\\s\\S]/)) {\n    return input.replace(/^\\[|\\]$/g, '');\n  }\n\n  return input.replace(/\\\\/g, '');\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?=} y\n * @param {?=} m\n * @param {?=} d\n * @return {?}\n */\n\n\nfunction createUTCDate(y, m, d) {\n  /** @type {?} */\n  var date = new Date(Date.UTC.apply(null, arguments)); // the Date.UTC function remaps years 0-99 to 1900-1999\n\n  if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n    date.setUTCFullYear(y);\n  }\n\n  return date;\n}\n/**\n * @param {?=} y\n * @param {?=} m\n * @param {?=} d\n * @param {?=} h\n * @param {?=} M\n * @param {?=} s\n * @param {?=} ms\n * @return {?}\n */\n\n\nfunction createDate(y) {\n  var m = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var d = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var h = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var M = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  var s = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  var ms = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n\n  /** @type {?} */\n  var date = new Date(y, m, d, h, M, s, ms); // the date constructor remaps years 0-99 to 1900-1999\n\n  if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n    date.setFullYear(y);\n  }\n\n  return date;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getHours(date) {\n  var isUTC = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return isUTC ? date.getUTCHours() : date.getHours();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getMinutes(date) {\n  var isUTC = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return isUTC ? date.getUTCMinutes() : date.getMinutes();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getSeconds(date) {\n  var isUTC = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return isUTC ? date.getUTCSeconds() : date.getSeconds();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getMilliseconds(date) {\n  var isUTC = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return isUTC ? date.getUTCMilliseconds() : date.getMilliseconds();\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction getTime(date) {\n  return date.getTime();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getDay(date) {\n  var isUTC = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return isUTC ? date.getUTCDay() : date.getDay();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getDate(date) {\n  var isUTC = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return isUTC ? date.getUTCDate() : date.getDate();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getMonth(date) {\n  var isUTC = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return isUTC ? date.getUTCMonth() : date.getMonth();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction _getFullYear(date) {\n  var isUTC = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return isUTC ? date.getUTCFullYear() : date.getFullYear();\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction getUnixTime(date) {\n  return Math.floor(date.valueOf() / 1000);\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction unix(date) {\n  return Math.floor(date.valueOf() / 1000);\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction getFirstDayOfMonth(date) {\n  return createDate(date.getFullYear(), date.getMonth(), 1, date.getHours(), date.getMinutes(), date.getSeconds());\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction daysInMonth(date) {\n  return _daysInMonth(date.getFullYear(), date.getMonth());\n}\n/**\n * @param {?} year\n * @param {?} month\n * @return {?}\n */\n\n\nfunction _daysInMonth(year, month) {\n  return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n}\n/**\n * @param {?} date\n * @param {?} firstDayOfWeek\n * @return {?}\n */\n\n\nfunction isFirstDayOfWeek(date, firstDayOfWeek) {\n  return date.getDay() === firstDayOfWeek;\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @return {?}\n */\n\n\nfunction isSameMonth(date1, date2) {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  return isSameYear(date1, date2) && getMonth(date1) === getMonth(date2);\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @return {?}\n */\n\n\nfunction isSameYear(date1, date2) {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  return _getFullYear(date1) === _getFullYear(date2);\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @return {?}\n */\n\n\nfunction isSameDay(date1, date2) {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  return isSameYear(date1, date2) && isSameMonth(date1, date2) && getDate(date1) === getDate(date2);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar match1 = /\\d/; //       0 - 9\n\n/** @type {?} */\n\nvar match2 = /\\d\\d/; //      00 - 99\n\n/** @type {?} */\n\nvar match3 = /\\d{3}/; //     000 - 999\n\n/** @type {?} */\n\nvar match4 = /\\d{4}/; //    0000 - 9999\n\n/** @type {?} */\n\nvar match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n/** @type {?} */\n\nvar match1to2 = /\\d\\d?/; //       0 - 99\n\n/** @type {?} */\n\nvar match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n/** @type {?} */\n\nvar match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n/** @type {?} */\n\nvar match1to3 = /\\d{1,3}/; //       0 - 999\n\n/** @type {?} */\n\nvar match1to4 = /\\d{1,4}/; //       0 - 9999\n\n/** @type {?} */\n\nvar match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n/** @type {?} */\n\nvar matchUnsigned = /\\d+/; //       0 - inf\n\n/** @type {?} */\n\nvar matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n/** @type {?} */\n\nvar matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n/** @type {?} */\n\nvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n/** @type {?} */\n\nvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\n// tslint:disable-next-line\n\n/** @type {?} */\n\nvar matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n/** @type {?} */\n\nvar regexes = {};\n/**\n * @param {?} token\n * @param {?} regex\n * @param {?=} strictRegex\n * @return {?}\n */\n\nfunction addRegexToken(token, regex, strictRegex) {\n  if (isFunction(regex)) {\n    regexes[token] = regex;\n    return;\n  }\n\n  regexes[token] =\n  /**\n  * @param {?} isStrict\n  * @param {?} locale\n  * @return {?}\n  */\n  function (isStrict, locale) {\n    return isStrict && strictRegex ? strictRegex : regex;\n  };\n}\n/**\n * @param {?} token\n * @param {?} locale\n * @return {?}\n */\n\n\nfunction getParseRegexForToken(token, locale) {\n  /** @type {?} */\n  var _strict = false;\n\n  if (!hasOwnProp(regexes, token)) {\n    return new RegExp(unescapeFormat(token));\n  }\n\n  return regexes[token](_strict, locale);\n} // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n/**\n * @param {?} str\n * @return {?}\n */\n\n\nfunction unescapeFormat(str) {\n  // tslint:disable-next-line\n  return regexEscape(str.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,\n  /**\n  * @param {?} matched\n  * @param {?} p1\n  * @param {?} p2\n  * @param {?} p3\n  * @param {?} p4\n  * @return {?}\n  */\n  function (matched, p1, p2, p3, p4) {\n    return p1 || p2 || p3 || p4;\n  }));\n}\n/**\n * @param {?} str\n * @return {?}\n */\n\n\nfunction regexEscape(str) {\n  return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar tokens = {};\n/**\n * @param {?} token\n * @param {?} callback\n * @return {?}\n */\n\nfunction addParseToken(token, callback) {\n  /** @type {?} */\n  var _token = isString(token) ? [token] : token;\n  /** @type {?} */\n\n\n  var func = callback;\n\n  if (isNumber(callback)) {\n    func =\n    /**\n    * @param {?} input\n    * @param {?} array\n    * @param {?} config\n    * @return {?}\n    */\n    function func(input, array, config) {\n      array[callback] = toInt(input);\n      return config;\n    };\n  }\n\n  if (isArray(_token) && isFunction(func)) {\n    /** @type {?} */\n    var i;\n\n    for (i = 0; i < _token.length; i++) {\n      tokens[_token[i]] = func;\n    }\n  }\n}\n/**\n * @param {?} token\n * @param {?} callback\n * @return {?}\n */\n\n\nfunction addWeekParseToken(token, callback) {\n  addParseToken(token,\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @param {?} _token\n  * @return {?}\n  */\n  function (input, array, config, _token) {\n    config._w = config._w || {};\n    return callback(input, config._w, config, _token);\n  });\n}\n/**\n * @param {?} token\n * @param {?} input\n * @param {?} config\n * @return {?}\n */\n\n\nfunction addTimeToArrayFromToken(token, input, config) {\n  if (input != null && hasOwnProp(tokens, token)) {\n    tokens[token](input, config._a, config, token);\n  }\n\n  return config;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar priorities = {};\n/**\n * @param {?} unit\n * @param {?} priority\n * @return {?}\n */\n\nfunction addUnitPriority(unit, priority) {\n  priorities[unit] = priority;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initDayOfMonth() {\n  // FORMATTING\n  addFormatToken('D', ['DD', 2, false], 'Do',\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getDate(date, opts.isUTC).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIOROITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do',\n  /**\n  * @param {?} isStrict\n  * @param {?} locale\n  * @return {?}\n  */\n  function (isStrict, locale) {\n    return locale._dayOfMonthOrdinalParse || locale._ordinalParse;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n    return config;\n  });\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction defaultParsingFlags() {\n  // We need to deep clone this object.\n  return {\n    empty: false,\n    unusedTokens: [],\n    unusedInput: [],\n    overflow: -2,\n    charsLeftOver: 0,\n    nullInput: false,\n    invalidMonth: null,\n    invalidFormat: false,\n    userInvalidated: false,\n    iso: false,\n    parsedDateParts: [],\n    meridiem: null,\n    rfc2822: false,\n    weekdayMismatch: false\n  };\n}\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction getParsingFlags(config) {\n  if (config._pf == null) {\n    config._pf = defaultParsingFlags();\n  }\n\n  return config._pf;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// FORMATTING\n\n/**\n * @param {?} date\n * @param {?} opts\n * @return {?}\n */\n\n\nfunction getYear(date, opts) {\n  if (opts.locale.getFullYear) {\n    return opts.locale.getFullYear(date, opts.isUTC).toString();\n  }\n\n  return _getFullYear(date, opts.isUTC).toString();\n}\n/**\n * @return {?}\n */\n\n\nfunction initYear() {\n  addFormatToken('Y', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    /** @type {?} */\n    var y = _getFullYear(date, opts.isUTC);\n\n    return y <= 9999 ? y.toString(10) : \"+\".concat(y);\n  });\n  addFormatToken(null, ['YY', 2, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (_getFullYear(date, opts.isUTC) % 100).toString(10);\n  });\n  addFormatToken(null, ['YYYY', 4, false], null, getYear);\n  addFormatToken(null, ['YYYYY', 5, false], null, getYear);\n  addFormatToken(null, ['YYYYYY', 6, true], null, getYear); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    array[YEAR] = input.length === 2 ? parseTwoDigitYear(input) : toInt(input);\n    return config;\n  });\n  addParseToken('YY',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    array[YEAR] = parseTwoDigitYear(input);\n    return config;\n  });\n  addParseToken('Y',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    array[YEAR] = parseInt(input, 10);\n    return config;\n  });\n}\n/**\n * @param {?} input\n * @return {?}\n */\n\n\nfunction parseTwoDigitYear(input) {\n  return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n}\n/**\n * @param {?} year\n * @return {?}\n */\n\n\nfunction daysInYear(year) {\n  return isLeapYear(year) ? 366 : 365;\n}\n/**\n * @param {?} year\n * @return {?}\n */\n\n\nfunction isLeapYear(year) {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// todo: this is duplicate, source in date-getters.ts\n\n/**\n * @param {?} year\n * @param {?} month\n * @return {?}\n */\n\n\nfunction daysInMonth$1(year, month) {\n  if (isNaN(year) || isNaN(month)) {\n    return NaN;\n  }\n  /** @type {?} */\n\n\n  var modMonth = mod(month, 12);\n  /** @type {?} */\n\n  var _year = year + (month - modMonth) / 12;\n\n  return modMonth === 1 ? isLeapYear(_year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n}\n/**\n * @return {?}\n */\n\n\nfunction initMonth() {\n  // FORMATTING\n  addFormatToken('M', ['MM', 2, false], 'Mo',\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (getMonth(date, opts.isUTC) + 1).toString(10);\n  });\n  addFormatToken('MMM', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return opts.locale.monthsShort(date, opts.format, opts.isUTC);\n  });\n  addFormatToken('MMMM', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return opts.locale.months(date, opts.format, opts.isUTC);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM',\n  /**\n  * @param {?} isStrict\n  * @param {?} locale\n  * @return {?}\n  */\n  function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM',\n  /**\n  * @param {?} isStrict\n  * @param {?} locale\n  * @return {?}\n  */\n  function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'],\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    array[MONTH] = toInt(input) - 1;\n    return config;\n  });\n  addParseToken(['MMM', 'MMMM'],\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @param {?} token\n  * @return {?}\n  */\n  function (input, array, config, token) {\n    /** @type {?} */\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = !!input;\n    }\n\n    return config;\n  });\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar defaultTimeUnit = {\n  year: 0,\n  month: 0,\n  day: 0,\n  hour: 0,\n  minute: 0,\n  seconds: 0\n};\n/**\n * @param {?} date\n * @param {?} unit\n * @return {?}\n */\n\nfunction shiftDate(date, unit) {\n  /** @type {?} */\n  var _unit = Object.assign({}, defaultTimeUnit, unit);\n  /** @type {?} */\n\n\n  var year = date.getFullYear() + (_unit.year || 0);\n  /** @type {?} */\n\n  var month = date.getMonth() + (_unit.month || 0);\n  /** @type {?} */\n\n  var day = date.getDate() + (_unit.day || 0);\n\n  if (_unit.month && !_unit.day) {\n    day = Math.min(day, daysInMonth$1(year, month));\n  }\n\n  return createDate(year, month, day, date.getHours() + (_unit.hour || 0), date.getMinutes() + (_unit.minute || 0), date.getSeconds() + (_unit.seconds || 0));\n}\n/**\n * @param {?} date\n * @param {?} unit\n * @return {?}\n */\n\n\nfunction setFullDate(date, unit) {\n  return createDate(getNum(date.getFullYear(), unit.year), getNum(date.getMonth(), unit.month), 1, // day, to avoid issue with wrong months selection at the end of current month (#5371)\n  getNum(date.getHours(), unit.hour), getNum(date.getMinutes(), unit.minute), getNum(date.getSeconds(), unit.seconds), getNum(date.getMilliseconds(), unit.milliseconds));\n}\n/**\n * @param {?} def\n * @param {?=} num\n * @return {?}\n */\n\n\nfunction getNum(def, num) {\n  return isNumber(num) ? num : def;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setFullYear(date, value, isUTC) {\n  /** @type {?} */\n  var _month = getMonth(date, isUTC);\n  /** @type {?} */\n\n\n  var _date = getDate(date, isUTC);\n  /** @type {?} */\n\n\n  var _year = _getFullYear(date, isUTC);\n\n  if (isLeapYear(_year) && _month === 1 && _date === 29) {\n    /** @type {?} */\n    var _daysInMonth2 = daysInMonth$1(value, _month);\n\n    isUTC ? date.setUTCFullYear(value, _month, _daysInMonth2) : date.setFullYear(value, _month, _daysInMonth2);\n  }\n\n  isUTC ? date.setUTCFullYear(value) : date.setFullYear(value);\n  return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setMonth(date, value, isUTC) {\n  /** @type {?} */\n  var dayOfMonth = Math.min(getDate(date), daysInMonth$1(_getFullYear(date), value));\n  isUTC ? date.setUTCMonth(value, dayOfMonth) : date.setMonth(value, dayOfMonth);\n  return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setDay(date, value, isUTC) {\n  isUTC ? date.setUTCDate(value) : date.setDate(value);\n  return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setHours(date, value, isUTC) {\n  isUTC ? date.setUTCHours(value) : date.setHours(value);\n  return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setMinutes(date, value, isUTC) {\n  isUTC ? date.setUTCMinutes(value) : date.setMinutes(value);\n  return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setSeconds(date, value, isUTC) {\n  isUTC ? date.setUTCSeconds(value) : date.setSeconds(value);\n  return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setMilliseconds(date, value, isUTC) {\n  isUTC ? date.setUTCMilliseconds(value) : date.setMilliseconds(value);\n  return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setDate(date, value, isUTC) {\n  isUTC ? date.setUTCDate(value) : date.setDate(value);\n  return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @return {?}\n */\n\n\nfunction setTime(date, value) {\n  date.setTime(value);\n  return date;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// fastest way to clone date\n// https://jsperf.com/clone-date-object2\n\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction cloneDate(date) {\n  return new Date(date.getTime());\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} date\n * @param {?} unit\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction startOf(date, unit, isUTC) {\n  /** @type {?} */\n  var _date = cloneDate(date); // the following switch intentionally omits break keywords\n  // to utilize falling through the cases.\n\n\n  switch (unit) {\n    case 'year':\n      setMonth(_date, 0, isUTC);\n\n    /* falls through */\n\n    case 'quarter':\n    case 'month':\n      setDate(_date, 1, isUTC);\n\n    /* falls through */\n\n    case 'week':\n    case 'isoWeek':\n    case 'day':\n    case 'date':\n      setHours(_date, 0, isUTC);\n\n    /* falls through */\n\n    case 'hours':\n      setMinutes(_date, 0, isUTC);\n\n    /* falls through */\n\n    case 'minutes':\n      setSeconds(_date, 0, isUTC);\n\n    /* falls through */\n\n    case 'seconds':\n      setMilliseconds(_date, 0, isUTC);\n  } // weeks are a special case\n\n\n  if (unit === 'week') {\n    setLocaleDayOfWeek(_date, 0, {\n      isUTC: isUTC\n    });\n  }\n\n  if (unit === 'isoWeek') {\n    setISODayOfWeek(_date, 1);\n  } // quarters are also special\n\n\n  if (unit === 'quarter') {\n    setMonth(_date, Math.floor(getMonth(_date, isUTC) / 3) * 3, isUTC);\n  }\n\n  return _date;\n}\n/**\n * @param {?} date\n * @param {?} unit\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction endOf(date, unit, isUTC) {\n  /** @type {?} */\n  var _unit = unit; // 'date' is an alias for 'day', so it should be considered as such.\n\n  if (_unit === 'date') {\n    _unit = 'day';\n  }\n  /** @type {?} */\n\n\n  var start = startOf(date, _unit, isUTC);\n  /** @type {?} */\n\n  var _step = add(start, 1, _unit === 'isoWeek' ? 'week' : _unit, isUTC);\n  /** @type {?} */\n\n\n  var res = subtract(_step, 1, 'milliseconds', isUTC);\n  return res;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initDayOfYear() {\n  // FORMATTING\n  addFormatToken('DDD', ['DDDD', 3, false], 'DDDo',\n  /**\n  * @param {?} date\n  * @return {?}\n  */\n  function (date) {\n    return getDayOfYear(date).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4);\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'],\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    config._dayOfYear = toInt(input);\n    return config;\n  });\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getDayOfYear(date, isUTC) {\n  /** @type {?} */\n  var date1 = +startOf(date, 'day', isUTC);\n  /** @type {?} */\n\n  var date2 = +startOf(date, 'year', isUTC);\n  /** @type {?} */\n\n  var someDate = date1 - date2;\n  /** @type {?} */\n\n  var oneDay = 1000 * 60 * 60 * 24;\n  return Math.round(someDate / oneDay) + 1;\n}\n/**\n * @param {?} date\n * @param {?} input\n * @return {?}\n */\n\n\nfunction setDayOfYear(date, input) {\n  /** @type {?} */\n  var dayOfYear = getDayOfYear(date);\n  return add(date, input - dayOfYear, 'day');\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} year\n * @param {?} dow\n * @param {?} doy\n * @return {?}\n */\n\n\nfunction firstWeekOffset(year, dow, doy) {\n  // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n\n  /** @type {?} */\n  var fwd = dow - doy + 7; // first-week day local weekday -- which local weekday is fwd\n\n  /** @type {?} */\n\n  var fwdlw = (createUTCDate(year, 0, fwd).getUTCDay() - dow + 7) % 7;\n  return -fwdlw + fwd - 1;\n} // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n/**\n * @param {?} year\n * @param {?} week\n * @param {?} weekday\n * @param {?} dow\n * @param {?} doy\n * @return {?}\n */\n\n\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n  /** @type {?} */\n  var localWeekday = (7 + weekday - dow) % 7;\n  /** @type {?} */\n\n  var weekOffset = firstWeekOffset(year, dow, doy);\n  /** @type {?} */\n\n  var dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset;\n  /** @type {?} */\n\n  var resYear;\n  /** @type {?} */\n\n  var resDayOfYear;\n\n  if (dayOfYear <= 0) {\n    resYear = year - 1;\n    resDayOfYear = daysInYear(resYear) + dayOfYear;\n  } else if (dayOfYear > daysInYear(year)) {\n    resYear = year + 1;\n    resDayOfYear = dayOfYear - daysInYear(year);\n  } else {\n    resYear = year;\n    resDayOfYear = dayOfYear;\n  }\n\n  return {\n    year: resYear,\n    dayOfYear: resDayOfYear\n  };\n}\n/**\n * @param {?} date\n * @param {?} dow\n * @param {?} doy\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction weekOfYear(date, dow, doy, isUTC) {\n  /** @type {?} */\n  var weekOffset = firstWeekOffset(_getFullYear(date, isUTC), dow, doy);\n  /** @type {?} */\n\n  var week = Math.floor((getDayOfYear(date, isUTC) - weekOffset - 1) / 7) + 1;\n  /** @type {?} */\n\n  var resWeek;\n  /** @type {?} */\n\n  var resYear;\n\n  if (week < 1) {\n    resYear = _getFullYear(date, isUTC) - 1;\n    resWeek = week + weeksInYear(resYear, dow, doy);\n  } else if (week > weeksInYear(_getFullYear(date, isUTC), dow, doy)) {\n    resWeek = week - weeksInYear(_getFullYear(date, isUTC), dow, doy);\n    resYear = _getFullYear(date, isUTC) + 1;\n  } else {\n    resYear = _getFullYear(date, isUTC);\n    resWeek = week;\n  }\n\n  return {\n    week: resWeek,\n    year: resYear\n  };\n}\n/**\n * @param {?} year\n * @param {?} dow\n * @param {?} doy\n * @return {?}\n */\n\n\nfunction weeksInYear(year, dow, doy) {\n  /** @type {?} */\n  var weekOffset = firstWeekOffset(year, dow, doy);\n  /** @type {?} */\n\n  var weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n  return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @record\n */\n\n\nfunction LocaleOptionsFormat() {}\n\nif (false) {\n  /** @type {?} */\n  LocaleOptionsFormat.prototype.format;\n  /** @type {?} */\n\n  LocaleOptionsFormat.prototype.standalone;\n  /** @type {?|undefined} */\n\n  LocaleOptionsFormat.prototype.isFormat;\n}\n/** @type {?} */\n\n\nvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n/** @type {?} */\n\nvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n/** @type {?} */\n\nvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n/** @type {?} */\n\nvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n/** @type {?} */\n\nvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n/** @type {?} */\n\nvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n/** @type {?} */\n\nvar defaultLongDateFormat = {\n  LTS: 'h:mm:ss A',\n  LT: 'h:mm A',\n  L: 'MM/DD/YYYY',\n  LL: 'MMMM D, YYYY',\n  LLL: 'MMMM D, YYYY h:mm A',\n  LLLL: 'dddd, MMMM D, YYYY h:mm A'\n};\n/** @type {?} */\n\nvar defaultOrdinal = '%d';\n/** @type {?} */\n\nvar defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n/** @type {?} */\n\nvar defaultMonthsShortRegex = matchWord;\n/** @type {?} */\n\nvar defaultMonthsRegex = matchWord;\n/**\n * @record\n */\n\nfunction LocaleData() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  LocaleData.prototype.abbr;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.parentLocale;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.months;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.monthsShort;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.monthsParseExact;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.weekdays;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.weekdaysShort;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.weekdaysMin;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.weekdaysParseExact;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.longDateFormat;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.calendar;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.relativeTime;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.dayOfMonthOrdinalParse;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.ordinal;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.week;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.invalidDate;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.monthsRegex;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.monthsParse;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.monthsShortRegex;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.monthsStrictRegex;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.monthsShortStrictRegex;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.longMonthsParse;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.shortMonthsParse;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.meridiemParse;\n  /**\n   * @param {?} hour\n   * @param {?} meridiem\n   * @return {?}\n   */\n\n  LocaleData.prototype.meridiemHour = function (hour, meridiem) {};\n  /**\n   * @param {?} str\n   * @param {?=} format\n   * @return {?}\n   */\n\n\n  LocaleData.prototype.preparse = function (str, format) {};\n  /**\n   * @param {?} str\n   * @return {?}\n   */\n\n\n  LocaleData.prototype.postformat = function (str) {};\n  /**\n   * @param {?} hour\n   * @param {?=} minute\n   * @param {?=} isLower\n   * @return {?}\n   */\n\n\n  LocaleData.prototype.meridiem = function (hour, minute, isLower) {};\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n\n\n  LocaleData.prototype.isPM = function (input) {};\n  /**\n   * @param {?} date\n   * @param {?} isUTC\n   * @return {?}\n   */\n\n\n  LocaleData.prototype.getFullYear = function (date, isUTC) {};\n}\n\nvar Locale = /*#__PURE__*/function () {\n  /**\n   * @param {?} config\n   */\n  function Locale(config) {\n    _classCallCheck(this, Locale);\n\n    if (!!config) {\n      this.set(config);\n    }\n  }\n  /**\n   * @param {?} config\n   * @return {?}\n   */\n\n\n  _createClass(Locale, [{\n    key: \"set\",\n    value: function set(config) {\n      /** @type {?} */\n      var confKey;\n\n      for (confKey in config) {\n        if (!config.hasOwnProperty(confKey)) {\n          continue;\n        }\n        /** @type {?} */\n\n\n        var prop = config[\n        /** @type {?} */\n        confKey];\n        /** @type {?} */\n\n        var key =\n        /** @type {?} */\n        isFunction(prop) ? confKey : \"_\".concat(confKey);\n        this[key] =\n        /** @type {?} */\n        prop;\n      }\n\n      this._config = config;\n    }\n    /**\n     * @param {?} key\n     * @param {?} date\n     * @param {?} now\n     * @return {?}\n     */\n\n  }, {\n    key: \"calendar\",\n    value: function calendar(key, date, now) {\n      /** @type {?} */\n      var output = this._calendar[key] || this._calendar.sameElse;\n      return isFunction(output) ? output.call(null, date, now) : output;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n\n  }, {\n    key: \"longDateFormat\",\n    value: function longDateFormat(key) {\n      /** @type {?} */\n      var format = this._longDateFormat[key];\n      /** @type {?} */\n\n      var formatUpper = this._longDateFormat[key.toUpperCase()];\n\n      if (format || !formatUpper) {\n        return format;\n      }\n\n      this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g,\n      /**\n      * @param {?} val\n      * @return {?}\n      */\n      function (val) {\n        return val.slice(1);\n      });\n      return this._longDateFormat[key];\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"invalidDate\",\n    get: function get() {\n      return this._invalidDate;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    ,\n    set: function set(val) {\n      this._invalidDate = val;\n    }\n    /**\n     * @param {?} num\n     * @param {?=} token\n     * @return {?}\n     */\n\n  }, {\n    key: \"ordinal\",\n    value: function ordinal(num, token) {\n      return this._ordinal.replace('%d', num.toString(10));\n    }\n    /**\n     * @param {?} str\n     * @param {?=} format\n     * @return {?}\n     */\n\n  }, {\n    key: \"preparse\",\n    value: function preparse(str, format) {\n      return str;\n    }\n    /**\n     * @param {?} date\n     * @param {?=} isUTC\n     * @return {?}\n     */\n\n  }, {\n    key: \"getFullYear\",\n    value: function getFullYear(date) {\n      var isUTC = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return _getFullYear(date, isUTC);\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n\n  }, {\n    key: \"postformat\",\n    value: function postformat(str) {\n      return str;\n    }\n    /**\n     * @param {?} num\n     * @param {?} withoutSuffix\n     * @param {?} str\n     * @param {?} isFuture\n     * @return {?}\n     */\n\n  }, {\n    key: \"relativeTime\",\n    value: function relativeTime(num, withoutSuffix, str, isFuture) {\n      /** @type {?} */\n      var output = this._relativeTime[str];\n      return isFunction(output) ? output(num, withoutSuffix, str, isFuture) : output.replace(/%d/i, num.toString(10));\n    }\n    /**\n     * @param {?} diff\n     * @param {?} output\n     * @return {?}\n     */\n\n  }, {\n    key: \"pastFuture\",\n    value: function pastFuture(diff, output) {\n      /** @type {?} */\n      var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n      return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n    /**\n     * @param {?=} date\n     * @param {?=} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n\n  }, {\n    key: \"months\",\n    value: function months(date, format) {\n      var isUTC = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (!date) {\n        return isArray(this._months) ? this._months : this._months.standalone;\n      }\n\n      if (isArray(this._months)) {\n        return this._months[getMonth(date, isUTC)];\n      }\n      /** @type {?} */\n\n\n      var key = (this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone';\n      return this._months[key][getMonth(date, isUTC)];\n    }\n    /**\n     * @param {?=} date\n     * @param {?=} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n\n  }, {\n    key: \"monthsShort\",\n    value: function monthsShort(date, format) {\n      var isUTC = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (!date) {\n        return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort.standalone;\n      }\n\n      if (isArray(this._monthsShort)) {\n        return this._monthsShort[getMonth(date, isUTC)];\n      }\n      /** @type {?} */\n\n\n      var key = MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone';\n      return this._monthsShort[key][getMonth(date, isUTC)];\n    }\n    /**\n     * @param {?} monthName\n     * @param {?=} format\n     * @param {?=} strict\n     * @return {?}\n     */\n\n  }, {\n    key: \"monthsParse\",\n    value: function monthsParse(monthName, format, strict) {\n      /** @type {?} */\n      var date;\n      /** @type {?} */\n\n      var regex;\n\n      if (this._monthsParseExact) {\n        return this.handleMonthStrictParse(monthName, format, strict);\n      }\n\n      if (!this._monthsParse) {\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n      } // TODO: add sorting\n      // Sorting makes sure if one month (or abbr) is a prefix of another\n      // see sorting in computeMonthsParse\n\n      /** @type {?} */\n\n\n      var i;\n\n      for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        date = new Date(Date.UTC(2000, i));\n\n        if (strict && !this._longMonthsParse[i]) {\n          /** @type {?} */\n          var _months = this.months(date, '', true).replace('.', '');\n          /** @type {?} */\n\n\n          var _shortMonths = this.monthsShort(date, '', true).replace('.', '');\n\n          this._longMonthsParse[i] = new RegExp(\"^\".concat(_months, \"$\"), 'i');\n          this._shortMonthsParse[i] = new RegExp(\"^\".concat(_shortMonths, \"$\"), 'i');\n        }\n\n        if (!strict && !this._monthsParse[i]) {\n          regex = \"^\".concat(this.months(date, '', true), \"|^\").concat(this.monthsShort(date, '', true));\n          this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        } // test the regex\n\n\n        if (strict && format === 'MMMM' &&\n        /** @type {?} */\n        this._longMonthsParse[i].test(monthName)) {\n          return i;\n        }\n\n        if (strict && format === 'MMM' &&\n        /** @type {?} */\n        this._shortMonthsParse[i].test(monthName)) {\n          return i;\n        }\n\n        if (!strict && this._monthsParse[i].test(monthName)) {\n          return i;\n        }\n      }\n    }\n    /**\n     * @param {?} isStrict\n     * @return {?}\n     */\n\n  }, {\n    key: \"monthsRegex\",\n    value: function monthsRegex(isStrict) {\n      if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n          this.computeMonthsParse();\n        }\n\n        if (isStrict) {\n          return this._monthsStrictRegex;\n        }\n\n        return this._monthsRegex;\n      }\n\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n    /**\n     * @param {?} isStrict\n     * @return {?}\n     */\n\n  }, {\n    key: \"monthsShortRegex\",\n    value: function monthsShortRegex(isStrict) {\n      if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n          this.computeMonthsParse();\n        }\n\n        if (isStrict) {\n          return this._monthsShortStrictRegex;\n        }\n\n        return this._monthsShortRegex;\n      }\n\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n    /**\n     * Week\n     * @param {?} date\n     * @param {?=} isUTC\n     * @return {?}\n     */\n\n  }, {\n    key: \"week\",\n    value: function week(date, isUTC) {\n      return weekOfYear(date, this._week.dow, this._week.doy, isUTC).week;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"firstDayOfWeek\",\n    value: function firstDayOfWeek() {\n      return this._week.dow;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"firstDayOfYear\",\n    value: function firstDayOfYear() {\n      return this._week.doy;\n    }\n    /**\n     * @param {?=} date\n     * @param {?=} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n\n  }, {\n    key: \"weekdays\",\n    value: function weekdays(date, format, isUTC) {\n      if (!date) {\n        return isArray(this._weekdays) ? this._weekdays : this._weekdays.standalone;\n      }\n\n      if (isArray(this._weekdays)) {\n        return this._weekdays[getDay(date, isUTC)];\n      }\n      /** @type {?} */\n\n\n      var _key = this._weekdays.isFormat.test(format) ? 'format' : 'standalone';\n\n      return this._weekdays[_key][getDay(date, isUTC)];\n    }\n    /**\n     * @param {?=} date\n     * @param {?=} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n\n  }, {\n    key: \"weekdaysMin\",\n    value: function weekdaysMin(date, format, isUTC) {\n      return date ? this._weekdaysMin[getDay(date, isUTC)] : this._weekdaysMin;\n    }\n    /**\n     * @param {?=} date\n     * @param {?=} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n\n  }, {\n    key: \"weekdaysShort\",\n    value: function weekdaysShort(date, format, isUTC) {\n      return date ? this._weekdaysShort[getDay(date, isUTC)] : this._weekdaysShort;\n    } // proto.weekdaysParse  =        localeWeekdaysParse;\n\n    /**\n     * @param {?=} weekdayName\n     * @param {?=} format\n     * @param {?=} strict\n     * @return {?}\n     */\n\n  }, {\n    key: \"weekdaysParse\",\n    value: function weekdaysParse(weekdayName, format, strict) {\n      /** @type {?} */\n      var i;\n      /** @type {?} */\n\n      var regex;\n\n      if (this._weekdaysParseExact) {\n        return this.handleWeekStrictParse(weekdayName, format, strict);\n      }\n\n      if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._minWeekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._fullWeekdaysParse = [];\n      }\n\n      for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n        // fix: here is the issue\n\n        /** @type {?} */\n        var date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n\n        if (strict && !this._fullWeekdaysParse[i]) {\n          this._fullWeekdaysParse[i] = new RegExp(\"^\".concat(this.weekdays(date, '', true).replace('.', '\\.?'), \"$\"), 'i');\n          this._shortWeekdaysParse[i] = new RegExp(\"^\".concat(this.weekdaysShort(date, '', true).replace('.', '\\.?'), \"$\"), 'i');\n          this._minWeekdaysParse[i] = new RegExp(\"^\".concat(this.weekdaysMin(date, '', true).replace('.', '\\.?'), \"$\"), 'i');\n        }\n\n        if (!this._weekdaysParse[i]) {\n          regex = \"^\".concat(this.weekdays(date, '', true), \"|^\").concat(this.weekdaysShort(date, '', true), \"|^\").concat(this.weekdaysMin(date, '', true));\n          this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n\n        if (!isArray(this._fullWeekdaysParse) || !isArray(this._shortWeekdaysParse) || !isArray(this._minWeekdaysParse) || !isArray(this._weekdaysParse)) {\n          return;\n        } // test the regex\n\n\n        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n          return i;\n        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n          return i;\n        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n          return i;\n        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n          return i;\n        }\n      }\n    } // proto.weekdaysRegex       =        weekdaysRegex;\n\n    /**\n     * @param {?} isStrict\n     * @return {?}\n     */\n\n  }, {\n    key: \"weekdaysRegex\",\n    value: function weekdaysRegex(isStrict) {\n      if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n          this.computeWeekdaysParse();\n        }\n\n        if (isStrict) {\n          return this._weekdaysStrictRegex;\n        } else {\n          return this._weekdaysRegex;\n        }\n      } else {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n          this._weekdaysRegex = matchWord;\n        }\n\n        return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n      }\n    } // proto.weekdaysShortRegex  =        weekdaysShortRegex;\n    // proto.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    /**\n     * @param {?=} isStrict\n     * @return {?}\n     */\n\n  }, {\n    key: \"weekdaysShortRegex\",\n    value: function weekdaysShortRegex(isStrict) {\n      if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n          this.computeWeekdaysParse();\n        }\n\n        if (isStrict) {\n          return this._weekdaysShortStrictRegex;\n        } else {\n          return this._weekdaysShortRegex;\n        }\n      } else {\n        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n          this._weekdaysShortRegex = matchWord;\n        }\n\n        return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n      }\n    }\n    /**\n     * @param {?=} isStrict\n     * @return {?}\n     */\n\n  }, {\n    key: \"weekdaysMinRegex\",\n    value: function weekdaysMinRegex(isStrict) {\n      if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n          this.computeWeekdaysParse();\n        }\n\n        if (isStrict) {\n          return this._weekdaysMinStrictRegex;\n        } else {\n          return this._weekdaysMinRegex;\n        }\n      } else {\n        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n          this._weekdaysMinRegex = matchWord;\n        }\n\n        return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n      }\n    }\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n\n  }, {\n    key: \"isPM\",\n    value: function isPM(input) {\n      // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n      // Using charAt should be more compatible.\n      return input.toLowerCase().charAt(0) === 'p';\n    }\n    /**\n     * @param {?} hours\n     * @param {?} minutes\n     * @param {?} isLower\n     * @return {?}\n     */\n\n  }, {\n    key: \"meridiem\",\n    value: function meridiem(hours, minutes, isLower) {\n      if (hours > 11) {\n        return isLower ? 'pm' : 'PM';\n      }\n\n      return isLower ? 'am' : 'AM';\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n\n  }, {\n    key: \"formatLongDate\",\n    value: function formatLongDate(key) {\n      this._longDateFormat = this._longDateFormat ? this._longDateFormat : defaultLongDateFormat;\n      /** @type {?} */\n\n      var format = this._longDateFormat[key];\n      /** @type {?} */\n\n      var formatUpper = this._longDateFormat[key.toUpperCase()];\n\n      if (format || !formatUpper) {\n        return format;\n      }\n\n      this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g,\n      /**\n      * @param {?} val\n      * @return {?}\n      */\n      function (val) {\n        return val.slice(1);\n      });\n      return this._longDateFormat[key];\n    }\n    /**\n     * @private\n     * @param {?} monthName\n     * @param {?} format\n     * @param {?=} strict\n     * @return {?}\n     */\n\n  }, {\n    key: \"handleMonthStrictParse\",\n    value: function handleMonthStrictParse(monthName, format, strict) {\n      /** @type {?} */\n      var llc = monthName.toLocaleLowerCase();\n      /** @type {?} */\n\n      var i;\n      /** @type {?} */\n\n      var ii;\n      /** @type {?} */\n\n      var mom;\n\n      if (!this._monthsParse) {\n        // this is not used\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n\n        for (i = 0; i < 12; ++i) {\n          mom = new Date(2000, i);\n          this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n          this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n        }\n      }\n\n      if (strict) {\n        if (format === 'MMM') {\n          ii =\n          /** @type {?} */\n          this._shortMonthsParse.indexOf(llc);\n          return ii !== -1 ? ii : null;\n        }\n\n        ii =\n        /** @type {?} */\n        this._longMonthsParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      }\n\n      if (format === 'MMM') {\n        ii =\n        /** @type {?} */\n        this._shortMonthsParse.indexOf(llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii =\n        /** @type {?} */\n        this._longMonthsParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      }\n\n      ii =\n      /** @type {?} */\n      this._longMonthsParse.indexOf(llc);\n\n      if (ii !== -1) {\n        return ii;\n      }\n\n      ii =\n      /** @type {?} */\n      this._shortMonthsParse.indexOf(llc);\n      return ii !== -1 ? ii : null;\n    }\n    /**\n     * @private\n     * @param {?} weekdayName\n     * @param {?} format\n     * @param {?} strict\n     * @return {?}\n     */\n\n  }, {\n    key: \"handleWeekStrictParse\",\n    value: function handleWeekStrictParse(weekdayName, format, strict) {\n      /** @type {?} */\n      var ii;\n      /** @type {?} */\n\n      var llc = weekdayName.toLocaleLowerCase();\n\n      if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._minWeekdaysParse = [];\n        /** @type {?} */\n\n        var i;\n\n        for (i = 0; i < 7; ++i) {\n          /** @type {?} */\n          var date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n          this._minWeekdaysParse[i] = this.weekdaysMin(date).toLocaleLowerCase();\n          this._shortWeekdaysParse[i] = this.weekdaysShort(date).toLocaleLowerCase();\n          this._weekdaysParse[i] = this.weekdays(date, '').toLocaleLowerCase();\n        }\n      }\n\n      if (!isArray(this._weekdaysParse) || !isArray(this._shortWeekdaysParse) || !isArray(this._minWeekdaysParse)) {\n        return;\n      }\n\n      if (strict) {\n        if (format === 'dddd') {\n          ii = this._weekdaysParse.indexOf(llc);\n          return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n          ii = this._shortWeekdaysParse.indexOf(llc);\n          return ii !== -1 ? ii : null;\n        } else {\n          ii = this._minWeekdaysParse.indexOf(llc);\n          return ii !== -1 ? ii : null;\n        }\n      } else {\n        if (format === 'dddd') {\n          ii = this._weekdaysParse.indexOf(llc);\n\n          if (ii !== -1) {\n            return ii;\n          }\n\n          ii = this._shortWeekdaysParse.indexOf(llc);\n\n          if (ii !== -1) {\n            return ii;\n          }\n\n          ii = this._minWeekdaysParse.indexOf(llc);\n          return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n          ii = this._shortWeekdaysParse.indexOf(llc);\n\n          if (ii !== -1) {\n            return ii;\n          }\n\n          ii = this._weekdaysParse.indexOf(llc);\n\n          if (ii !== -1) {\n            return ii;\n          }\n\n          ii = this._minWeekdaysParse.indexOf(llc);\n          return ii !== -1 ? ii : null;\n        } else {\n          ii = this._minWeekdaysParse.indexOf(llc);\n\n          if (ii !== -1) {\n            return ii;\n          }\n\n          ii = this._weekdaysParse.indexOf(llc);\n\n          if (ii !== -1) {\n            return ii;\n          }\n\n          ii = this._shortWeekdaysParse.indexOf(llc);\n          return ii !== -1 ? ii : null;\n        }\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"computeMonthsParse\",\n    value: function computeMonthsParse() {\n      /** @type {?} */\n      var shortPieces = [];\n      /** @type {?} */\n\n      var longPieces = [];\n      /** @type {?} */\n\n      var mixedPieces = [];\n      /** @type {?} */\n\n      var date;\n      /** @type {?} */\n\n      var i;\n\n      for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        date = new Date(2000, i);\n        shortPieces.push(this.monthsShort(date, ''));\n        longPieces.push(this.months(date, ''));\n        mixedPieces.push(this.months(date, ''));\n        mixedPieces.push(this.monthsShort(date, ''));\n      } // Sorting makes sure if one month (or abbr) is a prefix of another it\n      // will match the longer piece.\n\n\n      shortPieces.sort(cmpLenRev);\n      longPieces.sort(cmpLenRev);\n      mixedPieces.sort(cmpLenRev);\n\n      for (i = 0; i < 12; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n      }\n\n      for (i = 0; i < 24; i++) {\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n      }\n\n      this._monthsRegex = new RegExp(\"^(\".concat(mixedPieces.join('|'), \")\"), 'i');\n      this._monthsShortRegex = this._monthsRegex;\n      this._monthsStrictRegex = new RegExp(\"^(\".concat(longPieces.join('|'), \")\"), 'i');\n      this._monthsShortStrictRegex = new RegExp(\"^(\".concat(shortPieces.join('|'), \")\"), 'i');\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"computeWeekdaysParse\",\n    value: function computeWeekdaysParse() {\n      /** @type {?} */\n      var minPieces = [];\n      /** @type {?} */\n\n      var shortPieces = [];\n      /** @type {?} */\n\n      var longPieces = [];\n      /** @type {?} */\n\n      var mixedPieces = [];\n      /** @type {?} */\n\n      var i;\n\n      for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n        // let mom = createUTC([2000, 1]).day(i);\n\n        /** @type {?} */\n        var date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n        /** @type {?} */\n\n        var minp = this.weekdaysMin(date);\n        /** @type {?} */\n\n        var shortp = this.weekdaysShort(date);\n        /** @type {?} */\n\n        var longp = this.weekdays(date);\n        minPieces.push(minp);\n        shortPieces.push(shortp);\n        longPieces.push(longp);\n        mixedPieces.push(minp);\n        mixedPieces.push(shortp);\n        mixedPieces.push(longp);\n      } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n      // will match the longer piece.\n\n\n      minPieces.sort(cmpLenRev);\n      shortPieces.sort(cmpLenRev);\n      longPieces.sort(cmpLenRev);\n      mixedPieces.sort(cmpLenRev);\n\n      for (i = 0; i < 7; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n      }\n\n      this._weekdaysRegex = new RegExp(\"^(\".concat(mixedPieces.join('|'), \")\"), 'i');\n      this._weekdaysShortRegex = this._weekdaysRegex;\n      this._weekdaysMinRegex = this._weekdaysRegex;\n      this._weekdaysStrictRegex = new RegExp(\"^(\".concat(longPieces.join('|'), \")\"), 'i');\n      this._weekdaysShortStrictRegex = new RegExp(\"^(\".concat(shortPieces.join('|'), \")\"), 'i');\n      this._weekdaysMinStrictRegex = new RegExp(\"^(\".concat(minPieces.join('|'), \")\"), 'i');\n    }\n  }]);\n\n  return Locale;\n}();\n\nif (false) {\n  /** @type {?} */\n  Locale.prototype.parentLocale;\n  /** @type {?} */\n\n  Locale.prototype._abbr;\n  /** @type {?} */\n\n  Locale.prototype._config;\n  /** @type {?} */\n\n  Locale.prototype.meridiemHour;\n  /** @type {?} */\n\n  Locale.prototype._invalidDate;\n  /** @type {?} */\n\n  Locale.prototype._week;\n  /** @type {?} */\n\n  Locale.prototype._dayOfMonthOrdinalParse;\n  /** @type {?} */\n\n  Locale.prototype._ordinalParse;\n  /** @type {?} */\n\n  Locale.prototype._meridiemParse;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._calendar;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._relativeTime;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._months;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._monthsShort;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._monthsRegex;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._monthsShortRegex;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._monthsStrictRegex;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._monthsShortStrictRegex;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._monthsParse;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._longMonthsParse;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._shortMonthsParse;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._monthsParseExact;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._weekdaysParseExact;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._weekdaysRegex;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._weekdaysShortRegex;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._weekdaysMinRegex;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._weekdaysStrictRegex;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._weekdaysShortStrictRegex;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._weekdaysMinStrictRegex;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._weekdays;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._weekdaysShort;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._weekdaysMin;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._weekdaysParse;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._minWeekdaysParse;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._shortWeekdaysParse;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._fullWeekdaysParse;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._longDateFormat;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._ordinal;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\n\n\nfunction cmpLenRev(a, b) {\n  return b.length - a.length;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar defaultCalendar = {\n  sameDay: '[Today at] LT',\n  nextDay: '[Tomorrow at] LT',\n  nextWeek: 'dddd [at] LT',\n  lastDay: '[Yesterday at] LT',\n  lastWeek: '[Last] dddd [at] LT',\n  sameElse: 'L'\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nvar defaultInvalidDate = 'Invalid date';\n/** @type {?} */\n\nvar defaultLocaleWeek = {\n  dow: 0,\n  // Sunday is the first day of the week.\n  doy: 6 // The week that contains Jan 1st is the first week of the year.\n\n};\n/** @type {?} */\n\nvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n/** @type {?} */\n\nvar defaultRelativeTime = {\n  future: 'in %s',\n  past: '%s ago',\n  s: 'a few seconds',\n  ss: '%d seconds',\n  m: 'a minute',\n  mm: '%d minutes',\n  h: 'an hour',\n  hh: '%d hours',\n  d: 'a day',\n  dd: '%d days',\n  M: 'a month',\n  MM: '%d months',\n  y: 'a year',\n  yy: '%d years'\n};\n/** @type {?} */\n\nvar baseConfig = {\n  calendar: defaultCalendar,\n  longDateFormat: defaultLongDateFormat,\n  invalidDate: defaultInvalidDate,\n  ordinal: defaultOrdinal,\n  dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n  relativeTime: defaultRelativeTime,\n  months: defaultLocaleMonths,\n  monthsShort: defaultLocaleMonthsShort,\n  week: defaultLocaleWeek,\n  weekdays: defaultLocaleWeekdays,\n  weekdaysMin: defaultLocaleWeekdaysMin,\n  weekdaysShort: defaultLocaleWeekdaysShort,\n  meridiemParse: defaultLocaleMeridiemParse\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @template T\n * @param {?} array1\n * @param {?} array2\n * @param {?} dontConvert\n * @return {?}\n */\n\nfunction compareArrays(array1, array2, dontConvert) {\n  /** @type {?} */\n  var len = Math.min(array1.length, array2.length);\n  /** @type {?} */\n\n  var lengthDiff = Math.abs(array1.length - array2.length);\n  /** @type {?} */\n\n  var diffs = 0;\n  /** @type {?} */\n\n  var i;\n\n  for (i = 0; i < len; i++) {\n    if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n      diffs++;\n    }\n  }\n\n  return diffs + lengthDiff;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// FORMATTING\n\n/**\n * @return {?}\n */\n\n\nfunction initWeek() {\n  addFormatToken('w', ['ww', 2, false], 'wo',\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getWeek(date, opts.locale).toString(10);\n  });\n  addFormatToken('W', ['WW', 2, false], 'Wo',\n  /**\n  * @param {?} date\n  * @return {?}\n  */\n  function (date) {\n    return getISOWeek(date).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'],\n  /**\n  * @param {?} input\n  * @param {?} week\n  * @param {?} config\n  * @param {?} token\n  * @return {?}\n  */\n  function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n    return config;\n  }); // export function getSetWeek (input) {\n  //   var week = this.localeData().week(this);\n  //   return input == null ? week : this.add((input - week) * 7, 'd');\n  // }\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} locale\n * @return {?}\n */\n\n\nfunction setWeek(date, input) {\n  var locale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getLocale();\n\n  /** @type {?} */\n  var week = getWeek(date, locale);\n  return add(date, (input - week) * 7, 'day');\n}\n/**\n * @param {?} date\n * @param {?=} locale\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getWeek(date) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getLocale();\n  var isUTC = arguments.length > 2 ? arguments[2] : undefined;\n  return locale.week(date, isUTC);\n} // export function getSetISOWeek (input) {\n//   var week = weekOfYear(this, 1, 4).week;\n//   return input == null ? week : this.add((input - week) * 7, 'd');\n// }\n\n/**\n * @param {?} date\n * @param {?} input\n * @return {?}\n */\n\n\nfunction setISOWeek(date, input) {\n  /** @type {?} */\n  var week = getISOWeek(date);\n  return add(date, (input - week) * 7, 'day');\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getISOWeek(date, isUTC) {\n  return weekOfYear(date, 1, 4, isUTC).week;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// FORMATTING\n\n/**\n * @return {?}\n */\n\n\nfunction initWeekYear() {\n  addFormatToken(null, ['gg', 2, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    // return this.weekYear() % 100;\n    return (getWeekYear(date, opts.locale) % 100).toString();\n  });\n  addFormatToken(null, ['GG', 2, false], null,\n  /**\n  * @param {?} date\n  * @return {?}\n  */\n  function (date) {\n    // return this.isoWeekYear() % 100;\n    return (getISOWeekYear(date) % 100).toString();\n  });\n  addWeekYearFormatToken('gggg', _getWeekYearFormatCb);\n  addWeekYearFormatToken('ggggg', _getWeekYearFormatCb);\n  addWeekYearFormatToken('GGGG', _getISOWeekYearFormatCb);\n  addWeekYearFormatToken('GGGGG', _getISOWeekYearFormatCb); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'],\n  /**\n  * @param {?} input\n  * @param {?} week\n  * @param {?} config\n  * @param {?} token\n  * @return {?}\n  */\n  function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n    return config;\n  });\n  addWeekParseToken(['gg', 'GG'],\n  /**\n  * @param {?} input\n  * @param {?} week\n  * @param {?} config\n  * @param {?} token\n  * @return {?}\n  */\n  function (input, week, config, token) {\n    week[token] = parseTwoDigitYear(input);\n    return config;\n  });\n}\n/**\n * @param {?} token\n * @param {?} getter\n * @return {?}\n */\n\n\nfunction addWeekYearFormatToken(token, getter) {\n  addFormatToken(null, [token, token.length, false], null, getter);\n}\n/**\n * @param {?} date\n * @param {?} opts\n * @return {?}\n */\n\n\nfunction _getWeekYearFormatCb(date, opts) {\n  return getWeekYear(date, opts.locale).toString();\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction _getISOWeekYearFormatCb(date) {\n  return getISOWeekYear(date).toString();\n} // MOMENTS\n\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} locale\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getSetWeekYear(date, input) {\n  var locale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getLocale();\n  var isUTC = arguments.length > 3 ? arguments[3] : undefined;\n  return getSetWeekYearHelper(date, input, // this.week(),\n  getWeek(date, locale, isUTC), // this.weekday(),\n  getLocaleDayOfWeek(date, locale, isUTC), locale.firstDayOfWeek(), locale.firstDayOfYear(), isUTC);\n}\n/**\n * @param {?} date\n * @param {?=} locale\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getWeekYear(date) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getLocale();\n  var isUTC = arguments.length > 2 ? arguments[2] : undefined;\n  return weekOfYear(date, locale.firstDayOfWeek(), locale.firstDayOfYear(), isUTC).year;\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getSetISOWeekYear(date, input, isUTC) {\n  return getSetWeekYearHelper(date, input, getISOWeek(date, isUTC), getISODayOfWeek(date, isUTC), 1, 4);\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getISOWeekYear(date, isUTC) {\n  return weekOfYear(date, 1, 4, isUTC).year;\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getISOWeeksInYear(date, isUTC) {\n  return weeksInYear(_getFullYear(date, isUTC), 1, 4);\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @param {?=} locale\n * @return {?}\n */\n\n\nfunction getWeeksInYear(date, isUTC) {\n  var locale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getLocale();\n  return weeksInYear(_getFullYear(date, isUTC), locale.firstDayOfWeek(), locale.firstDayOfYear());\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?} week\n * @param {?} weekday\n * @param {?} dow\n * @param {?} doy\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getSetWeekYearHelper(date, input, week, weekday, dow, doy, isUTC) {\n  if (!input) {\n    return getWeekYear(date, void 0, isUTC);\n  }\n  /** @type {?} */\n\n\n  var weeksTarget = weeksInYear(input, dow, doy);\n  /** @type {?} */\n\n  var _week = week > weeksTarget ? weeksTarget : week;\n\n  return setWeekAll(date, input, _week, weekday, dow, doy);\n}\n/**\n * @param {?} date\n * @param {?} weekYear\n * @param {?} week\n * @param {?} weekday\n * @param {?} dow\n * @param {?} doy\n * @return {?}\n */\n\n\nfunction setWeekAll(date, weekYear, week, weekday, dow, doy) {\n  /** @type {?} */\n  var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n  /** @type {?} */\n\n  var _date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n  setFullYear(date, _getFullYear(_date, true), true);\n  setMonth(date, getMonth(_date, true), true);\n  setDate(date, getDate(_date, true), true);\n  return date;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// todo: add support for timezones\n\n/**\n * @return {?}\n */\n\n\nfunction initTimezone() {\n  // FORMATTING\n  addFormatToken('z', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return opts.isUTC ? 'UTC' : '';\n  });\n  addFormatToken('zz', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return opts.isUTC ? 'Coordinated Universal Time' : '';\n  });\n} // MOMENTS\n\n/**\n * @param {?} isUTC\n * @return {?}\n */\n\n\nfunction getZoneAbbr(isUTC) {\n  return isUTC ? 'UTC' : '';\n}\n/**\n * @param {?} isUTC\n * @return {?}\n */\n\n\nfunction getZoneName(isUTC) {\n  return isUTC ? 'Coordinated Universal Time' : '';\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initTimestamp() {\n  // FORMATTING\n  addFormatToken('X', null, null,\n  /**\n  * @param {?} date\n  * @return {?}\n  */\n  function (date) {\n    return unix(date).toString(10);\n  });\n  addFormatToken('x', null, null,\n  /**\n  * @param {?} date\n  * @return {?}\n  */\n  function (date) {\n    return date.valueOf().toString(10);\n  }); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    config._d = new Date(parseFloat(input) * 1000);\n    return config;\n  });\n  addParseToken('x',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    config._d = new Date(toInt(input));\n    return config;\n  });\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initSecond() {\n  // FORMATTING\n  addFormatToken('s', ['ss', 2, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getSeconds(date, opts.isUTC).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initQuarter() {\n  // FORMATTING\n  addFormatToken('Q', null, 'Qo',\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getQuarter(date, opts.isUTC).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n    return config;\n  });\n} // MOMENTS\n\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getQuarter(date) {\n  var isUTC = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return Math.ceil((getMonth(date, isUTC) + 1) / 3);\n}\n/**\n * @param {?} date\n * @param {?} quarter\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setQuarter(date, quarter, isUTC) {\n  return setMonth(date, (quarter - 1) * 3 + getMonth(date, isUTC) % 3, isUTC);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} token\n * @param {?} separator\n * @return {?}\n */\n\n\nfunction addOffsetFormatToken(token, separator) {\n  addFormatToken(token, null, null,\n  /**\n  * @param {?} date\n  * @param {?} config\n  * @return {?}\n  */\n  function (date, config) {\n    /** @type {?} */\n    var offset = getUTCOffset(date, {\n      _isUTC: config.isUTC,\n      _offset: config.offset\n    });\n    /** @type {?} */\n\n    var sign = '+';\n\n    if (offset < 0) {\n      offset = -offset;\n      sign = '-';\n    }\n\n    return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n  });\n}\n/**\n * @return {?}\n */\n\n\nfunction initOffset() {\n  addOffsetFormatToken('Z', ':');\n  addOffsetFormatToken('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'],\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n    return config;\n  });\n} // HELPERS\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\n\n/** @type {?} */\n\n\nvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n/**\n * @param {?} matcher\n * @param {?} str\n * @return {?}\n */\n\nfunction offsetFromString(matcher, str) {\n  /** @type {?} */\n  var matches = (str || '').match(matcher);\n\n  if (matches === null) {\n    return null;\n  }\n  /** @type {?} */\n\n\n  var chunk = matches[matches.length - 1];\n  /** @type {?} */\n\n  var parts = chunk.match(chunkOffset) || ['-', '0', '0'];\n  /** @type {?} */\n\n  var minutes = parseInt(parts[1], 10) * 60 + toInt(parts[2]);\n  /** @type {?} */\n\n  var _min = parts[0] === '+' ? minutes : -minutes;\n\n  return minutes === 0 ? 0 : _min;\n} // Return a moment from input, that is local/utc/zone equivalent to model.\n\n/**\n * @param {?} input\n * @param {?} date\n * @param {?=} config\n * @return {?}\n */\n\n\nfunction cloneWithOffset(input, date) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (!config._isUTC) {\n    return input;\n  }\n  /** @type {?} */\n\n\n  var res = cloneDate(date); // todo: input._d - res._d + ((res._offset || 0) - (input._offset || 0))*60000\n\n  /** @type {?} */\n\n  var offsetDiff = (config._offset || 0) * 60000;\n  /** @type {?} */\n\n  var diff = input.valueOf() - res.valueOf() + offsetDiff; // Use low-level api, because this fn is low-level api.\n\n  res.setTime(res.valueOf() + diff); // todo: add timezone handling\n  // hooks.updateOffset(res, false);\n\n  return res;\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction getDateOffset(date) {\n  // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n  // https://github.com/moment/moment/pull/1871\n  return -Math.round(date.getTimezoneOffset() / 15) * 15;\n} // HOOKS\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\n// todo: it's from moment timezones\n// hooks.updateOffset = function () {\n// };\n// MOMENTS\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\n\n/**\n * @param {?} date\n * @param {?=} config\n * @return {?}\n */\n\n\nfunction getUTCOffset(date) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  /** @type {?} */\n  var _offset = config._offset || 0;\n\n  return config._isUTC ? _offset : getDateOffset(date);\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} keepLocalTime\n * @param {?=} keepMinutes\n * @param {?=} config\n * @return {?}\n */\n\n\nfunction setUTCOffset(date, input, keepLocalTime, keepMinutes) {\n  var config = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  /** @type {?} */\n  var offset = config._offset || 0;\n  /** @type {?} */\n\n  var localAdjust;\n  /** @type {?} */\n\n  var _input = input;\n  /** @type {?} */\n\n  var _date = date;\n\n  if (isString(_input)) {\n    _input = offsetFromString(matchShortOffset, _input);\n\n    if (_input === null) {\n      return _date;\n    }\n  } else if (isNumber(_input) && Math.abs(_input) < 16 && !keepMinutes) {\n    _input = _input * 60;\n  }\n\n  if (!config._isUTC && keepLocalTime) {\n    localAdjust = getDateOffset(_date);\n  }\n\n  config._offset = _input;\n  config._isUTC = true;\n\n  if (localAdjust != null) {\n    _date = add(_date, localAdjust, 'minutes');\n  }\n\n  if (offset !== _input) {\n    if (!keepLocalTime || config._changeInProgress) {\n      _date = add(_date, _input - offset, 'minutes', config._isUTC); // addSubtract(this, createDuration(_input - offset, 'm'), 1, false);\n    } else if (!config._changeInProgress) {\n      config._changeInProgress = true; // todo: add timezone handling\n      // hooks.updateOffset(this, true);\n\n      config._changeInProgress = null;\n    }\n  }\n\n  return _date;\n}\n/*\nexport function getSetZone(input, keepLocalTime) {\n  if (input != null) {\n    if (typeof input !== 'string') {\n      input = -input;\n    }\n\n    this.utcOffset(input, keepLocalTime);\n\n    return this;\n  } else {\n    return -this.utcOffset();\n  }\n}\n*/\n\n/**\n * @param {?} date\n * @param {?=} keepLocalTime\n * @return {?}\n */\n\n\nfunction setOffsetToUTC(date, keepLocalTime) {\n  return setUTCOffset(date, 0, keepLocalTime);\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction isDaylightSavingTime(date) {\n  return getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 0)) || getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 5));\n}\n/*export function setOffsetToLocal(date: Date, isUTC?: boolean, keepLocalTime?: boolean) {\n  if (this._isUTC) {\n    this.utcOffset(0, keepLocalTime);\n    this._isUTC = false;\n\n    if (keepLocalTime) {\n      this.subtract(getDateOffset(this), 'm');\n    }\n  }\n  return this;\n}*/\n\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} config\n * @return {?}\n */\n\n\nfunction setOffsetToParsedOffset(date, input) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (config._tzm != null) {\n    return setUTCOffset(date, config._tzm, false, true, config);\n  }\n\n  if (isString(input)) {\n    /** @type {?} */\n    var tZone = offsetFromString(matchOffset, input);\n\n    if (tZone != null) {\n      return setUTCOffset(date, tZone, false, false, config);\n    }\n\n    return setUTCOffset(date, 0, true, false, config);\n  }\n\n  return date;\n}\n/**\n * @param {?} date\n * @param {?=} input\n * @return {?}\n */\n\n\nfunction hasAlignedHourOffset(date, input) {\n  /** @type {?} */\n  var _input = input ? getUTCOffset(input, {\n    _isUTC: false\n  }) : 0;\n\n  return (getUTCOffset(date) - _input) % 60 === 0;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initMinute() {\n  // FORMATTING\n  addFormatToken('m', ['mm', 2, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getMinutes(date, opts.isUTC).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initMillisecond() {\n  addFormatToken('S', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (~~(getMilliseconds(date, opts.isUTC) / 100)).toString(10);\n  });\n  addFormatToken(null, ['SS', 2, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (~~(getMilliseconds(date, opts.isUTC) / 10)).toString(10);\n  });\n  addFormatToken(null, ['SSS', 3, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getMilliseconds(date, opts.isUTC).toString(10);\n  });\n  addFormatToken(null, ['SSSS', 4, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 10).toString(10);\n  });\n  addFormatToken(null, ['SSSSS', 5, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 100).toString(10);\n  });\n  addFormatToken(null, ['SSSSSS', 6, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 1000).toString(10);\n  });\n  addFormatToken(null, ['SSSSSSS', 7, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 10000).toString(10);\n  });\n  addFormatToken(null, ['SSSSSSSS', 8, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 100000).toString(10);\n  });\n  addFormatToken(null, ['SSSSSSSSS', 9, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 1000000).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  /** @type {?} */\n\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n  /**\n   * @param {?} input\n   * @param {?} array\n   * @param {?} config\n   * @return {?}\n   */\n\n\n  function parseMs(input, array, config) {\n    array[MILLISECOND] = toInt(parseFloat(\"0.\".concat(input)) * 1000);\n    return config;\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initHour() {\n  // FORMATTING\n  // FORMATTING\n\n  /**\n   * @param {?} date\n   * @param {?} isUTC\n   * @return {?}\n   */\n  function hFormat(date, isUTC) {\n    return getHours(date, isUTC) % 12 || 12;\n  }\n  /**\n   * @param {?} date\n   * @param {?} isUTC\n   * @return {?}\n   */\n\n\n  function kFormat(date, isUTC) {\n    return getHours(date, isUTC) || 24;\n  }\n\n  addFormatToken('H', ['HH', 2, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getHours(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('h', ['hh', 2, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return hFormat(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('k', ['kk', 2, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return kFormat(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('hmm', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    /** @type {?} */\n    var _h = hFormat(date, opts.isUTC);\n    /** @type {?} */\n\n\n    var _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n\n    return \"\".concat(_h).concat(_mm);\n  });\n  addFormatToken('hmmss', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    /** @type {?} */\n    var _h = hFormat(date, opts.isUTC);\n    /** @type {?} */\n\n\n    var _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n    /** @type {?} */\n\n\n    var _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n\n    return \"\".concat(_h).concat(_mm).concat(_ss);\n  });\n  addFormatToken('Hmm', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    /** @type {?} */\n    var _H = getHours(date, opts.isUTC);\n    /** @type {?} */\n\n\n    var _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n\n    return \"\".concat(_H).concat(_mm);\n  });\n  addFormatToken('Hmmss', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    /** @type {?} */\n    var _H = getHours(date, opts.isUTC);\n    /** @type {?} */\n\n\n    var _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n    /** @type {?} */\n\n\n    var _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n\n    return \"\".concat(_H).concat(_mm).concat(_ss);\n  });\n  /**\n   * @param {?} token\n   * @param {?} lowercase\n   * @return {?}\n   */\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, null, null,\n    /**\n    * @param {?} date\n    * @param {?} opts\n    * @return {?}\n    */\n    function (date, opts) {\n      return opts.locale.meridiem(getHours(date, opts.isUTC), getMinutes(date, opts.isUTC), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  /**\n   * @param {?} isStrict\n   * @param {?} locale\n   * @return {?}\n   */\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'],\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    /** @type {?} */\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n    return config;\n  });\n  addParseToken(['a', 'A'],\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n    return config;\n  });\n  addParseToken(['h', 'hh'],\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n    return config;\n  });\n  addParseToken('hmm',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    /** @type {?} */\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n    return config;\n  });\n  addParseToken('hmmss',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    /** @type {?} */\n    var pos1 = input.length - 4;\n    /** @type {?} */\n\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n    return config;\n  });\n  addParseToken('Hmm',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    /** @type {?} */\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    return config;\n  });\n  addParseToken('Hmmss',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    /** @type {?} */\n    var pos1 = input.length - 4;\n    /** @type {?} */\n\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    return config;\n  });\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar locales = {};\n/** @type {?} */\n\nvar localeFamilies = {};\n/** @type {?} */\n\nvar globalLocale;\n/**\n * @param {?} key\n * @return {?}\n */\n\nfunction normalizeLocale(key) {\n  return key ? key.toLowerCase().replace('_', '-') : key;\n} // pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least,\n// but move to the next array item if it's a more specific variant than the current root\n\n/**\n * @param {?} names\n * @return {?}\n */\n\n\nfunction chooseLocale(names) {\n  /** @type {?} */\n  var next;\n  /** @type {?} */\n\n  var locale;\n  /** @type {?} */\n\n  var i = 0;\n\n  while (i < names.length) {\n    /** @type {?} */\n    var split = normalizeLocale(names[i]).split('-');\n    /** @type {?} */\n\n    var j = split.length;\n    next = normalizeLocale(names[i + 1]);\n    next = next ? next.split('-') : null;\n\n    while (j > 0) {\n      locale = loadLocale(split.slice(0, j).join('-'));\n\n      if (locale) {\n        return locale;\n      }\n\n      if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n        // the next array item is better than a shallower substring of this one\n        break;\n      }\n\n      j--;\n    }\n\n    i++;\n  }\n\n  return null;\n}\n/**\n * @param {?} parentConfig\n * @param {?} childConfig\n * @return {?}\n */\n\n\nfunction mergeConfigs(parentConfig, childConfig) {\n  /** @type {?} */\n  var res = Object.assign({}, parentConfig);\n\n  for (var childProp in childConfig) {\n    if (!hasOwnProp(childConfig, childProp)) {\n      continue;\n    }\n\n    if (isObject(parentConfig[childProp]) && isObject(childConfig[childProp])) {\n      res[\n      /** @type {?} */\n      childProp] = {};\n      Object.assign(res[childProp], parentConfig[childProp]);\n      Object.assign(res[childProp], childConfig[childProp]);\n    } else if (childConfig[childProp] != null) {\n      res[\n      /** @type {?} */\n      childProp] = childConfig[childProp];\n    } else {\n      delete res[\n      /** @type {?} */\n      childProp];\n    }\n  }\n\n  for (var parentProp in parentConfig) {\n    if (hasOwnProp(parentConfig, parentProp) && !hasOwnProp(childConfig, parentProp) && isObject(parentConfig[\n    /** @type {?} */\n    parentProp])) {\n      // make sure changes to properties don't modify parent config\n      res[\n      /** @type {?} */\n      parentProp] = Object.assign({}, res[\n      /** @type {?} */\n      parentProp]);\n    }\n  }\n\n  return res;\n}\n/**\n * @param {?} name\n * @return {?}\n */\n\n\nfunction loadLocale(name) {\n  // no way!\n\n  /* var oldLocale = null;\n   // TODO: Find a better way to register and load all the locales in Node\n   if (!locales[name] && (typeof module !== 'undefined') &&\n     module && module.exports) {\n     try {\n       oldLocale = globalLocale._abbr;\n       var aliasedRequire = require;\n       aliasedRequire('./locale/' + name);\n       getSetGlobalLocale(oldLocale);\n     } catch (e) {}\n   }*/\n  if (!locales[name]) {\n    // tslint:disable-next-line\n    console.error(\"Khronos locale error: please load locale \\\"\".concat(name, \"\\\" before using it\")); // throw new Error(`Khronos locale error: please load locale \"${name}\" before using it`);\n  }\n\n  return locales[name];\n} // This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\n\n/**\n * @param {?=} key\n * @param {?=} values\n * @return {?}\n */\n\n\nfunction getSetGlobalLocale(key, values) {\n  /** @type {?} */\n  var data;\n\n  if (key) {\n    if (isUndefined(values)) {\n      data = getLocale(key);\n    } else if (isString(key)) {\n      data = defineLocale(key, values);\n    }\n\n    if (data) {\n      globalLocale = data;\n    }\n  }\n\n  return globalLocale && globalLocale._abbr;\n}\n/**\n * @param {?} name\n * @param {?=} config\n * @return {?}\n */\n\n\nfunction defineLocale(name, config) {\n  if (config === null) {\n    // useful for testing\n    delete locales[name];\n    globalLocale = getLocale('en');\n    return null;\n  }\n\n  if (!config) {\n    return;\n  }\n  /** @type {?} */\n\n\n  var parentConfig = baseConfig;\n  config.abbr = name;\n\n  if (config.parentLocale != null) {\n    if (locales[config.parentLocale] != null) {\n      parentConfig = locales[config.parentLocale]._config;\n    } else {\n      if (!localeFamilies[config.parentLocale]) {\n        localeFamilies[config.parentLocale] = [];\n      }\n\n      localeFamilies[config.parentLocale].push({\n        name: name,\n        config: config\n      });\n      return null;\n    }\n  }\n\n  locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n  if (localeFamilies[name]) {\n    localeFamilies[name].forEach(\n    /**\n    * @param {?} x\n    * @return {?}\n    */\n    function (x) {\n      defineLocale(x.name, x.config);\n    });\n  } // backwards compat for now: also set the locale\n  // make sure we set the locale AFTER all child locales have been\n  // created, so we won't end up with the child locale set.\n\n\n  getSetGlobalLocale(name);\n  return locales[name];\n}\n/**\n * @param {?} name\n * @param {?=} config\n * @return {?}\n */\n\n\nfunction updateLocale(name, config) {\n  /** @type {?} */\n  var _config = config;\n\n  if (_config != null) {\n    /** @type {?} */\n    var parentConfig = baseConfig; // MERGE\n\n    /** @type {?} */\n\n    var tmpLocale = loadLocale(name);\n\n    if (tmpLocale != null) {\n      parentConfig = tmpLocale._config;\n    }\n\n    _config = mergeConfigs(parentConfig, _config);\n    /** @type {?} */\n\n    var locale = new Locale(_config);\n    locale.parentLocale = locales[name];\n    locales[name] = locale; // backwards compat for now: also set the locale\n\n    getSetGlobalLocale(name);\n  } else {\n    // pass null for config to unupdate, useful for tests\n    if (locales[name] != null) {\n      if (locales[name].parentLocale != null) {\n        locales[name] = locales[name].parentLocale;\n      } else if (locales[name] != null) {\n        delete locales[name];\n      }\n    }\n  }\n\n  return locales[name];\n} // returns locale data\n\n/**\n * @param {?=} key\n * @return {?}\n */\n\n\nfunction getLocale(key) {\n  setDefaultLocale();\n\n  if (!key) {\n    return globalLocale;\n  } // let locale;\n\n  /** @type {?} */\n\n\n  var _key = isArray(key) ? key : [key];\n\n  return chooseLocale(_key);\n}\n/**\n * @return {?}\n */\n\n\nfunction listLocales() {\n  return Object.keys(locales);\n}\n/**\n * @return {?}\n */\n\n\nfunction setDefaultLocale() {\n  if (locales[\"en\"]) {\n    return undefined;\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    ordinal: function ordinal(num) {\n      /** @type {?} */\n      var b = num % 10;\n      /** @type {?} */\n\n      var output = toInt(num % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return num + output;\n    }\n  });\n  initWeek();\n  initWeekYear();\n  initYear();\n  initTimezone();\n  initTimestamp();\n  initSecond();\n  initQuarter();\n  initOffset();\n  initMonth();\n  initMinute();\n  initMillisecond();\n  initHour();\n  initDayOfYear();\n  initDayOfWeek();\n  initDayOfMonth();\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar ordering = ['year', 'quarter', 'month', 'week', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'];\n/** @type {?} */\n\nvar orderingHash = ordering.reduce(\n/**\n* @param {?} mem\n* @param {?} order\n* @return {?}\n*/\nfunction (mem, order) {\n  mem[order] = true;\n  return mem;\n}, {});\n/**\n * @param {?} duration\n * @return {?}\n */\n\nfunction isDurationValid(duration) {\n  /** @type {?} */\n  var durationKeys = Object.keys(duration);\n\n  if (durationKeys.some(\n  /**\n  * @param {?} key\n  * @return {?}\n  */\n  function (key) {\n    return key in orderingHash && duration[key] === null || isNaN(duration[key]);\n  })) {\n    return false;\n  } // for (let key in duration) {\n  //   if (!(indexOf.call(ordering, key) !== -1 && (duration[key] == null || !isNaN(duration[key])))) {\n  //     return false;\n  //   }\n  // }\n\n  /** @type {?} */\n\n\n  var unitHasDecimal = false;\n\n  for (var i = 0; i < ordering.length; ++i) {\n    if (duration[ordering[i]]) {\n      // only allow non-integers for smallest unit\n      if (unitHasDecimal) {\n        return false;\n      }\n\n      if (duration[ordering[i]] !== toInt(duration[ordering[i]])) {\n        unitHasDecimal = true;\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} number\n * @return {?}\n */\n\n\nfunction absCeil(number) {\n  return number < 0 ? Math.floor(number) : Math.ceil(number);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} dur\n * @return {?}\n */\n\n\nfunction bubble(dur) {\n  /** @type {?} */\n  var milliseconds = dur._milliseconds;\n  /** @type {?} */\n\n  var days = dur._days;\n  /** @type {?} */\n\n  var months = dur._months;\n  /** @type {?} */\n\n  var data = dur._data; // if we have a mix of positive and negative values, bubble down first\n  // check: https://github.com/moment/moment/issues/2166\n\n  if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n    milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n    days = 0;\n    months = 0;\n  } // The following code bubbles up values, see the tests for\n  // examples of what that means.\n\n\n  data.milliseconds = milliseconds % 1000;\n  /** @type {?} */\n\n  var seconds = absFloor(milliseconds / 1000);\n  data.seconds = seconds % 60;\n  /** @type {?} */\n\n  var minutes = absFloor(seconds / 60);\n  data.minutes = minutes % 60;\n  /** @type {?} */\n\n  var hours = absFloor(minutes / 60);\n  data.hours = hours % 24;\n  days += absFloor(hours / 24); // convert days to months\n\n  /** @type {?} */\n\n  var monthsFromDays = absFloor(daysToMonths(days));\n  months += monthsFromDays;\n  days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n  /** @type {?} */\n\n  var years = absFloor(months / 12);\n  months %= 12;\n  data.day = days;\n  data.month = months;\n  data.year = years;\n  return dur;\n}\n/**\n * @param {?} day\n * @return {?}\n */\n\n\nfunction daysToMonths(day) {\n  // 400 years have 146097 days (taking into account leap year rules)\n  // 400 years have 12 months === 4800\n  return day * 4800 / 146097;\n}\n/**\n * @param {?} month\n * @return {?}\n */\n\n\nfunction monthsToDays(month) {\n  // the reverse of daysToMonths\n  return month * 146097 / 4800;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar round = Math.round;\n/** @type {?} */\n\nvar thresholds = {\n  ss: 44,\n  // a few seconds to seconds\n  s: 45,\n  // seconds to minute\n  m: 45,\n  // minutes to hour\n  h: 22,\n  // hours to day\n  d: 26,\n  // days to month\n  M: 11 // months to year\n\n}; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n/**\n * @param {?} str\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} isFuture\n * @param {?} locale\n * @return {?}\n */\n\nfunction substituteTimeAgo(str, num, withoutSuffix, isFuture, locale) {\n  return locale.relativeTime(num || 1, !!withoutSuffix, str, isFuture);\n}\n/**\n * @param {?} posNegDuration\n * @param {?} withoutSuffix\n * @param {?} locale\n * @return {?}\n */\n\n\nfunction relativeTime(posNegDuration, withoutSuffix, locale) {\n  /** @type {?} */\n  var duration = createDuration(posNegDuration).abs();\n  /** @type {?} */\n\n  var seconds = round(duration.as('s'));\n  /** @type {?} */\n\n  var minutes = round(duration.as('m'));\n  /** @type {?} */\n\n  var hours = round(duration.as('h'));\n  /** @type {?} */\n\n  var days = round(duration.as('d'));\n  /** @type {?} */\n\n  var months = round(duration.as('M'));\n  /** @type {?} */\n\n  var years = round(duration.as('y'));\n  /** @type {?} */\n\n  var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n  /** @type {?} */\n\n  var b = [a[0], a[1], withoutSuffix, +posNegDuration > 0, locale]; // a[2] = withoutSuffix;\n  // a[3] = +posNegDuration > 0;\n  // a[4] = locale;\n\n  return substituteTimeAgo.apply(null, b);\n} // This function allows you to set the rounding function for relative time strings\n\n/**\n * @param {?} roundingFunction\n * @return {?}\n */\n\n\nfunction getSetRelativeTimeRounding(roundingFunction) {\n  if (roundingFunction === undefined) {\n    return round;\n  }\n\n  if (typeof roundingFunction === 'function') {\n    round = roundingFunction;\n    return true;\n  }\n\n  return false;\n} // This function allows you to set a threshold for relative time strings\n\n/**\n * @param {?} threshold\n * @param {?} limit\n * @return {?}\n */\n\n\nfunction getSetRelativeTimeThreshold(threshold, limit) {\n  if (thresholds[threshold] === undefined) {\n    return false;\n  }\n\n  if (limit === undefined) {\n    return thresholds[threshold];\n  }\n\n  thresholds[threshold] = limit;\n\n  if (threshold === 's') {\n    thresholds.ss = limit - 1;\n  }\n\n  return true;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar Duration = /*#__PURE__*/function () {\n  /**\n   * @param {?} duration\n   * @param {?=} config\n   */\n  function Duration(duration) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Duration);\n\n    this._data = {};\n    this._locale = getLocale();\n    this._locale = config && config._locale || getLocale(); // const normalizedInput = normalizeObjectUnits(duration);\n\n    /** @type {?} */\n\n    var normalizedInput = duration;\n    /** @type {?} */\n\n    var years = normalizedInput.year || 0;\n    /** @type {?} */\n\n    var quarters = normalizedInput.quarter || 0;\n    /** @type {?} */\n\n    var months = normalizedInput.month || 0;\n    /** @type {?} */\n\n    var weeks = normalizedInput.week || 0;\n    /** @type {?} */\n\n    var days = normalizedInput.day || 0;\n    /** @type {?} */\n\n    var hours = normalizedInput.hours || 0;\n    /** @type {?} */\n\n    var minutes = normalizedInput.minutes || 0;\n    /** @type {?} */\n\n    var seconds = normalizedInput.seconds || 0;\n    /** @type {?} */\n\n    var milliseconds = normalizedInput.milliseconds || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1000 + minutes * 60 * 1000 + // 1000 * 60\n    hours * 1000 * 60 * 60; // using 1000 * 60 * 60\n    // instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12; // this._data = {};\n    // this._locale = getLocale();\n    // this._bubble();\n\n    return bubble(this);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(Duration, [{\n    key: \"isValid\",\n    value: function isValid() {\n      return this._isValid;\n    }\n    /**\n     * @param {?=} withSuffix\n     * @return {?}\n     */\n\n  }, {\n    key: \"humanize\",\n    value: function humanize(withSuffix) {\n      // throw new Error(`TODO: implement`);\n      if (!this.isValid()) {\n        return this.localeData().invalidDate;\n      }\n      /** @type {?} */\n\n\n      var locale = this.localeData();\n      /** @type {?} */\n\n      var output = relativeTime(this, !withSuffix, locale);\n\n      if (withSuffix) {\n        output = locale.pastFuture(+this, output);\n      }\n\n      return locale.postformat(output);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"localeData\",\n    value: function localeData() {\n      return this._locale;\n    }\n    /**\n     * @param {?=} localeKey\n     * @return {?}\n     */\n\n  }, {\n    key: \"locale\",\n    value: function locale(localeKey) {\n      if (!localeKey) {\n        return this._locale._abbr;\n      }\n\n      this._locale = getLocale(localeKey) || this._locale;\n      return this;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"abs\",\n    value: function abs() {\n      /** @type {?} */\n      var mathAbs = Math.abs;\n      /** @type {?} */\n\n      var data = this._data;\n      this._milliseconds = mathAbs(this._milliseconds);\n      this._days = mathAbs(this._days);\n      this._months = mathAbs(this._months);\n      data.milliseconds = mathAbs(data.milliseconds);\n      data.seconds = mathAbs(data.seconds);\n      data.minutes = mathAbs(data.minutes);\n      data.hours = mathAbs(data.hours);\n      data.month = mathAbs(data.month);\n      data.year = mathAbs(data.year);\n      return this;\n    }\n    /**\n     * @param {?} _units\n     * @return {?}\n     */\n\n  }, {\n    key: \"as\",\n    value: function as(_units) {\n      if (!this.isValid()) {\n        return NaN;\n      }\n      /** @type {?} */\n\n\n      var days;\n      /** @type {?} */\n\n      var months;\n      /** @type {?} */\n\n      var milliseconds = this._milliseconds;\n      /** @type {?} */\n\n      var units = normalizeUnits(_units);\n\n      if (units === 'month' || units === 'year') {\n        days = this._days + milliseconds / 864e5;\n        months = this._months + daysToMonths(days);\n        return units === 'month' ? months : months / 12;\n      } // handle milliseconds separately because of floating point math errors (issue #1867)\n\n\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hours':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minutes':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'seconds':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'milliseconds':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error(\"Unknown unit \".concat(units));\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      if (!this.isValid()) {\n        return NaN;\n      }\n\n      return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n    }\n  }]);\n\n  return Duration;\n}();\n\nif (false) {\n  /** @type {?} */\n  Duration.prototype._milliseconds;\n  /** @type {?} */\n\n  Duration.prototype._days;\n  /** @type {?} */\n\n  Duration.prototype._months;\n  /** @type {?} */\n\n  Duration.prototype._data;\n  /** @type {?} */\n\n  Duration.prototype._locale;\n  /** @type {?} */\n\n  Duration.prototype._isValid;\n}\n/**\n * @param {?} obj\n * @return {?}\n */\n\n\nfunction isDuration(obj) {\n  return obj instanceof Duration;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction isValid(config) {\n  if (config._isValid == null) {\n    /** @type {?} */\n    var flags = getParsingFlags(config);\n    /** @type {?} */\n\n    var parsedParts = Array.prototype.some.call(flags.parsedDateParts,\n    /**\n    * @param {?} i\n    * @return {?}\n    */\n    function (i) {\n      return i != null;\n    });\n    /** @type {?} */\n\n    var isNowValid = !isNaN(config._d && config._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n    if (config._strict) {\n      isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n    }\n\n    if (Object.isFrozen == null || !Object.isFrozen(config)) {\n      config._isValid = isNowValid;\n    } else {\n      return isNowValid;\n    }\n  }\n\n  return config._isValid;\n}\n/**\n * @param {?} config\n * @param {?=} flags\n * @return {?}\n */\n\n\nfunction createInvalid(config, flags) {\n  config._d = new Date(NaN);\n  Object.assign(getParsingFlags(config), flags || {\n    userInvalidated: true\n  });\n  return config;\n}\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction markInvalid(config) {\n  config._isValid = false;\n  return config;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n// tslint:disable-next-line\n\n/** @type {?} */\n\n\nvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/; // tslint:disable-next-line\n\n/** @type {?} */\n\nvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n/** @type {?} */\n\nvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n/** @type {?} */\n\nvar isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/, true], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/, true], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/, true], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/, true], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/, true], ['YYYYMMDD', /\\d{8}/, true], // YYYYMM is NOT allowed by the standard\n['GGGG[W]WWE', /\\d{4}W\\d{3}/, true], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/, true]]; // iso time formats and regexes\n\n/** @type {?} */\n\nvar isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n/** @type {?} */\n\nvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n/** @type {?} */\n\nvar obsOffsets = {\n  UT: 0,\n  GMT: 0,\n  EDT: -4 * 60,\n  EST: -5 * 60,\n  CDT: -5 * 60,\n  CST: -6 * 60,\n  MDT: -6 * 60,\n  MST: -7 * 60,\n  PDT: -7 * 60,\n  PST: -8 * 60\n}; // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n// tslint:disable-next-line\n\n/** @type {?} */\n\nvar rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/; // date from iso format\n\n/**\n * @param {?} config\n * @return {?}\n */\n\nfunction configFromISO(config) {\n  if (!isString(config._i)) {\n    return config;\n  }\n  /** @type {?} */\n\n\n  var input = config._i;\n  /** @type {?} */\n\n  var match = extendedIsoRegex.exec(input) || basicIsoRegex.exec(input);\n  /** @type {?} */\n\n  var allowTime;\n  /** @type {?} */\n\n  var dateFormat;\n  /** @type {?} */\n\n  var timeFormat;\n  /** @type {?} */\n\n  var tzFormat;\n\n  if (!match) {\n    config._isValid = false;\n    return config;\n  } // getParsingFlags(config).iso = true;\n\n  /** @type {?} */\n\n\n  var i;\n  /** @type {?} */\n\n  var l;\n\n  for (i = 0, l = isoDates.length; i < l; i++) {\n    if (isoDates[i][1].exec(match[1])) {\n      dateFormat = isoDates[i][0];\n      allowTime = isoDates[i][2] !== false;\n      break;\n    }\n  }\n\n  if (dateFormat == null) {\n    config._isValid = false;\n    return config;\n  }\n\n  if (match[3]) {\n    for (i = 0, l = isoTimes.length; i < l; i++) {\n      if (isoTimes[i][1].exec(match[3])) {\n        // match[2] should be 'T' or space\n        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n        break;\n      }\n    }\n\n    if (timeFormat == null) {\n      config._isValid = false;\n      return config;\n    }\n  }\n\n  if (!allowTime && timeFormat != null) {\n    config._isValid = false;\n    return config;\n  }\n\n  if (match[4]) {\n    if (tzRegex.exec(match[4])) {\n      tzFormat = 'Z';\n    } else {\n      config._isValid = false;\n      return config;\n    }\n  }\n\n  config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n  return configFromStringAndFormat(config);\n} // tslint:disable-next-line\n\n/**\n * @param {?} yearStr\n * @param {?} monthStr\n * @param {?} dayStr\n * @param {?} hourStr\n * @param {?} minuteStr\n * @param {?} secondStr\n * @return {?}\n */\n\n\nfunction extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n  /** @type {?} */\n  var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n  if (secondStr) {\n    result.push(parseInt(secondStr, 10));\n  }\n\n  return result;\n}\n/**\n * @param {?} yearStr\n * @return {?}\n */\n\n\nfunction untruncateYear(yearStr) {\n  /** @type {?} */\n  var year = parseInt(yearStr, 10);\n  return year <= 49 ? year + 2000 : year;\n}\n/**\n * @param {?} str\n * @return {?}\n */\n\n\nfunction preprocessRFC2822(str) {\n  // Remove comments and folding whitespace and replace multiple-spaces with a single space\n  return str.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').trim();\n}\n/**\n * @param {?} weekdayStr\n * @param {?} parsedInput\n * @param {?} config\n * @return {?}\n */\n\n\nfunction checkWeekday(weekdayStr, parsedInput, config) {\n  if (weekdayStr) {\n    // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n\n    /** @type {?} */\n    var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr);\n    /** @type {?} */\n\n    var weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n    if (weekdayProvided !== weekdayActual) {\n      getParsingFlags(config).weekdayMismatch = true;\n      config._isValid = false;\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @param {?} obsOffset\n * @param {?} militaryOffset\n * @param {?} numOffset\n * @return {?}\n */\n\n\nfunction calculateOffset(obsOffset, militaryOffset, numOffset) {\n  if (obsOffset) {\n    return obsOffsets[obsOffset];\n  } else if (militaryOffset) {\n    // the only allowed military tz is Z\n    return 0;\n  } else {\n    /** @type {?} */\n    var hm = parseInt(numOffset, 10);\n    /** @type {?} */\n\n    var m = hm % 100;\n    /** @type {?} */\n\n    var h = (hm - m) / 100;\n    return h * 60 + m;\n  }\n} // date and time from ref 2822 format\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction configFromRFC2822(config) {\n  if (!isString(config._i)) {\n    return config;\n  }\n  /** @type {?} */\n\n\n  var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n  if (!match) {\n    return markInvalid(config);\n  }\n  /** @type {?} */\n\n\n  var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n  if (!checkWeekday(match[1], parsedArray, config)) {\n    return config;\n  }\n\n  config._a = parsedArray;\n  config._tzm = calculateOffset(match[8], match[9], match[10]);\n  config._d = createUTCDate.apply(null, config._a);\n\n  config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n  getParsingFlags(config).rfc2822 = true;\n  return config;\n} // date from iso format or fallback\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction configFromString(config) {\n  if (!isString(config._i)) {\n    return config;\n  }\n  /** @type {?} */\n\n\n  var matched = aspNetJsonRegex.exec(config._i);\n\n  if (matched !== null) {\n    config._d = new Date(+matched[1]);\n    return config;\n  } // todo: update logic processing\n  // isISO -> configFromISO\n  // isRFC -> configFromRFC\n\n\n  configFromISO(config);\n\n  if (config._isValid === false) {\n    delete config._isValid;\n  } else {\n    return config;\n  }\n\n  configFromRFC2822(config);\n\n  if (config._isValid === false) {\n    delete config._isValid;\n  } else {\n    return config;\n  } // Final attempt, use Input Fallback\n  // hooks.createFromInputFallback(config);\n\n\n  return createInvalid(config);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} date\n * @param {?} format\n * @param {?=} locale\n * @param {?=} isUTC\n * @param {?=} offset\n * @return {?}\n */\n\n\nfunction formatDate(date, format, locale, isUTC) {\n  var offset = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n\n  /** @type {?} */\n  var _locale = getLocale(locale || 'en');\n\n  if (!_locale) {\n    throw new Error(\"Locale \\\"\".concat(locale, \"\\\" is not defined, please add it with \\\"defineLocale(...)\\\"\"));\n  }\n  /** @type {?} */\n\n\n  var _format = format || (isUTC ? 'YYYY-MM-DDTHH:mm:ss[Z]' : 'YYYY-MM-DDTHH:mm:ssZ');\n  /** @type {?} */\n\n\n  var output = formatMoment(date, _format, _locale, isUTC, offset);\n\n  if (!output) {\n    return output;\n  }\n\n  return _locale.postformat(output);\n} // format date using native date object\n\n/**\n * @param {?} date\n * @param {?} _format\n * @param {?} locale\n * @param {?=} isUTC\n * @param {?=} offset\n * @return {?}\n */\n\n\nfunction formatMoment(date, _format, locale, isUTC) {\n  var offset = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n\n  if (!isDateValid(date)) {\n    return locale.invalidDate;\n  }\n  /** @type {?} */\n\n\n  var format = expandFormat(_format, locale);\n  formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n  return formatFunctions[format](date, locale, isUTC, offset);\n}\n/**\n * @param {?} _format\n * @param {?} locale\n * @return {?}\n */\n\n\nfunction expandFormat(_format, locale) {\n  /** @type {?} */\n  var format = _format;\n  /** @type {?} */\n\n  var i = 5;\n  /** @type {?} */\n\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  /** @type {?} */\n\n  var replaceLongDateFormatTokens =\n  /**\n  * @param {?} input\n  * @return {?}\n  */\n  function replaceLongDateFormatTokens(input) {\n    return locale.formatLongDate(input) || input;\n  };\n\n  localFormattingTokens.lastIndex = 0;\n\n  while (i >= 0 && localFormattingTokens.test(format)) {\n    format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n    localFormattingTokens.lastIndex = 0;\n    i -= 1;\n  }\n\n  return format;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Pick the first defined of two or three arguments.\n\n/**\n * @template T\n * @param {?=} a\n * @param {?=} b\n * @param {?=} c\n * @return {?}\n */\n\n\nfunction defaults(a, b, c) {\n  if (a != null) {\n    return a;\n  }\n\n  if (b != null) {\n    return b;\n  }\n\n  return c;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction currentDateArray(config) {\n  /** @type {?} */\n  var nowValue = new Date();\n\n  if (config._useUTC) {\n    return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n  }\n\n  return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n} // convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction configFromArray(config) {\n  /** @type {?} */\n  var input = [];\n  /** @type {?} */\n\n  var i;\n  /** @type {?} */\n\n  var date;\n  /** @type {?} */\n\n  var currentDate;\n  /** @type {?} */\n\n  var expectedWeekday;\n  /** @type {?} */\n\n  var yearToUse;\n\n  if (config._d) {\n    return config;\n  }\n\n  currentDate = currentDateArray(config); // compute day of the year from weeks and weekdays\n\n  if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n    dayOfYearFromWeekInfo(config);\n  } // if the day of the year is set, figure out what it is\n\n\n  if (config._dayOfYear != null) {\n    yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n    if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n      getParsingFlags(config)._overflowDayOfYear = true;\n    }\n\n    date = new Date(Date.UTC(yearToUse, 0, config._dayOfYear));\n    config._a[MONTH] = date.getUTCMonth();\n    config._a[DATE] = date.getUTCDate();\n  } // Default to current date.\n  // * if no year, month, day of month are given, default to today\n  // * if day of month is given, default month and year\n  // * if month is given, default only year\n  // * if year is given, don't default anything\n\n\n  for (i = 0; i < 3 && config._a[i] == null; ++i) {\n    config._a[i] = input[i] = currentDate[i];\n  } // Zero out whatever was not defaulted, including time\n\n\n  for (; i < 7; i++) {\n    config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n  } // Check for 24:00:00.000\n\n\n  if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n    config._nextDay = true;\n    config._a[HOUR] = 0;\n  }\n\n  config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n  expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n  // with parseZone.\n\n  if (config._tzm != null) {\n    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n  }\n\n  if (config._nextDay) {\n    config._a[HOUR] = 24;\n  } // check for mismatching day of week\n\n\n  if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n    getParsingFlags(config).weekdayMismatch = true;\n  }\n\n  return config;\n}\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction dayOfYearFromWeekInfo(config) {\n  /** @type {?} */\n  var w;\n  /** @type {?} */\n\n  var weekYear;\n  /** @type {?} */\n\n  var week;\n  /** @type {?} */\n\n  var weekday;\n  /** @type {?} */\n\n  var dow;\n  /** @type {?} */\n\n  var doy;\n  /** @type {?} */\n\n  var temp;\n  /** @type {?} */\n\n  var weekdayOverflow;\n  w = config._w;\n\n  if (w.GG != null || w.W != null || w.E != null) {\n    dow = 1;\n    doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n    // how we interpret now (local, utc, fixed offset). So create\n    // a now version of current config (take local/utc/offset flags, and\n    // create now).\n\n    weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(new Date(), 1, 4).year);\n    week = defaults(w.W, 1);\n    weekday = defaults(w.E, 1);\n\n    if (weekday < 1 || weekday > 7) {\n      weekdayOverflow = true;\n    }\n  } else {\n    dow = config._locale._week.dow;\n    doy = config._locale._week.doy;\n    /** @type {?} */\n\n    var curWeek = weekOfYear(new Date(), dow, doy);\n    weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n    week = defaults(w.w, curWeek.week);\n\n    if (w.d != null) {\n      // weekday -- low day numbers are considered next week\n      weekday = w.d;\n\n      if (weekday < 0 || weekday > 6) {\n        weekdayOverflow = true;\n      }\n    } else if (w.e != null) {\n      // local weekday -- counting starts from begining of week\n      weekday = w.e + dow;\n\n      if (w.e < 0 || w.e > 6) {\n        weekdayOverflow = true;\n      }\n    } else {\n      // default to begining of week\n      weekday = dow;\n    }\n  }\n\n  if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n    getParsingFlags(config)._overflowWeeks = true;\n  } else if (weekdayOverflow != null) {\n    getParsingFlags(config)._overflowWeekday = true;\n  } else {\n    temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n    config._a[YEAR] = temp.year;\n    config._dayOfYear = temp.dayOfYear;\n  }\n\n  return config;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction checkOverflow(config) {\n  /** @type {?} */\n  var overflow;\n  /** @type {?} */\n\n  var a = config._a;\n\n  if (a && getParsingFlags(config).overflow === -2) {\n    // todo: fix this sh*t\n    overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth$1(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n    if (getParsingFlags(config)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n      overflow = DATE;\n    }\n\n    if (getParsingFlags(config)._overflowWeeks && overflow === -1) {\n      overflow = WEEK;\n    }\n\n    if (getParsingFlags(config)._overflowWeekday && overflow === -1) {\n      overflow = WEEKDAY;\n    }\n\n    getParsingFlags(config).overflow = overflow;\n  }\n\n  return config;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// constant that refers to the ISO standard\n// hooks.ISO_8601 = function () {};\n\n/** @type {?} */\n\n\nvar ISO_8601 = 'ISO_8601'; // constant that refers to the RFC 2822 form\n// hooks.RFC_2822 = function () {};\n\n/** @type {?} */\n\nvar RFC_2822 = 'RFC_2822'; // date from string and format string\n\n/**\n * @param {?} config\n * @return {?}\n */\n\nfunction configFromStringAndFormat(config) {\n  // TODO: Move this to another part of the creation flow to prevent circular deps\n  if (config._f === ISO_8601) {\n    return configFromISO(config);\n  }\n\n  if (config._f === RFC_2822) {\n    return configFromRFC2822(config);\n  }\n\n  config._a = [];\n  getParsingFlags(config).empty = true;\n\n  if (isArray(config._f) || !config._i && config._i !== 0) {\n    return config;\n  } // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n  /** @type {?} */\n\n\n  var input = config._i.toString();\n  /** @type {?} */\n\n\n  var totalParsedInputLength = 0;\n  /** @type {?} */\n\n  var inputLength = input.length;\n  /** @type {?} */\n\n  var tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n  /** @type {?} */\n\n  var i;\n  /** @type {?} */\n\n  var token;\n  /** @type {?} */\n\n  var parsedInput;\n  /** @type {?} */\n\n  var skipped;\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n    parsedInput = (input.match(getParseRegexForToken(token, config._locale)) || [])[0];\n\n    if (parsedInput) {\n      skipped = input.substr(0, input.indexOf(parsedInput));\n\n      if (skipped.length > 0) {\n        getParsingFlags(config).unusedInput.push(skipped);\n      }\n\n      input = input.slice(input.indexOf(parsedInput) + parsedInput.length);\n      totalParsedInputLength += parsedInput.length;\n    } // don't parse if it's not a known token\n\n\n    if (formatTokenFunctions[token]) {\n      if (parsedInput) {\n        getParsingFlags(config).empty = false;\n      } else {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n\n      addTimeToArrayFromToken(token, parsedInput, config);\n    } else if (config._strict && !parsedInput) {\n      getParsingFlags(config).unusedTokens.push(token);\n    }\n  } // add remaining unparsed input length to the string\n\n\n  getParsingFlags(config).charsLeftOver = inputLength - totalParsedInputLength;\n\n  if (input.length > 0) {\n    getParsingFlags(config).unusedInput.push(input);\n  } // clear _12h flag if hour is <= 12\n\n\n  if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n    getParsingFlags(config).bigHour = void 0;\n  }\n\n  getParsingFlags(config).parsedDateParts = config._a.slice(0);\n  getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n  config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n  configFromArray(config);\n  return checkOverflow(config);\n}\n/**\n * @param {?} locale\n * @param {?} _hour\n * @param {?} meridiem\n * @return {?}\n */\n\n\nfunction meridiemFixWrap(locale, _hour, meridiem) {\n  /** @type {?} */\n  var hour = _hour;\n\n  if (meridiem == null) {\n    // nothing to do\n    return hour;\n  }\n\n  if (locale.meridiemHour != null) {\n    return locale.meridiemHour(hour, meridiem);\n  }\n\n  if (locale.isPM == null) {\n    // this is not supposed to happen\n    return hour;\n  } // Fallback\n\n  /** @type {?} */\n\n\n  var isPm = locale.isPM(meridiem);\n\n  if (isPm && hour < 12) {\n    hour += 12;\n  }\n\n  if (!isPm && hour === 12) {\n    hour = 0;\n  }\n\n  return hour;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// date from string and array of format strings\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction configFromStringAndArray(config) {\n  /** @type {?} */\n  var tempConfig;\n  /** @type {?} */\n\n  var bestMoment;\n  /** @type {?} */\n\n  var scoreToBeat;\n  /** @type {?} */\n\n  var currentScore;\n\n  if (!config._f || config._f.length === 0) {\n    getParsingFlags(config).invalidFormat = true;\n    return createInvalid(config);\n  }\n  /** @type {?} */\n\n\n  var i;\n\n  for (i = 0; i < config._f.length; i++) {\n    currentScore = 0;\n    tempConfig = Object.assign({}, config);\n\n    if (config._useUTC != null) {\n      tempConfig._useUTC = config._useUTC;\n    }\n\n    tempConfig._f = config._f[i];\n    configFromStringAndFormat(tempConfig);\n\n    if (!isValid(tempConfig)) {\n      continue;\n    } // if there is any input that was not parsed add a penalty for that format\n\n\n    currentScore += getParsingFlags(tempConfig).charsLeftOver; // or tokens\n\n    currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n    getParsingFlags(tempConfig).score = currentScore;\n\n    if (scoreToBeat == null || currentScore < scoreToBeat) {\n      scoreToBeat = currentScore;\n      bestMoment = tempConfig;\n    }\n  }\n\n  return Object.assign(config, bestMoment || tempConfig);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction configFromObject(config) {\n  if (config._d) {\n    return config;\n  }\n  /** @type {?} */\n\n\n  var input = config._i;\n\n  if (isObject(input)) {\n    /** @type {?} */\n    var i = normalizeObjectUnits(\n    /** @type {?} */\n    input);\n    config._a = [i.year, i.month, i.day, i.hours, i.minutes, i.seconds, i.milliseconds] // todo: obsolete -> remove it\n    .map(\n    /**\n    * @param {?} obj\n    * @return {?}\n    */\n    function (obj) {\n      return isString(obj) ? parseInt(obj, 10) : obj;\n    });\n  }\n\n  return configFromArray(config);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction createFromConfig(config) {\n  /** @type {?} */\n  var res = checkOverflow(prepareConfig(config)); // todo: remove, in moment.js it's never called cuz of moment constructor\n\n  res._d = new Date(res._d != null ? res._d.getTime() : NaN);\n\n  if (!isValid(Object.assign({}, res, {\n    _isValid: null\n  }))) {\n    res._d = new Date(NaN);\n  } // todo: update offset\n\n  /*if (res._nextDay) {\n    // Adding is smart enough around DST\n    res._d = add(res._d, 1, 'day');\n    res._nextDay = undefined;\n  }*/\n\n\n  return res;\n}\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction prepareConfig(config) {\n  /** @type {?} */\n  var input = config._i;\n  /** @type {?} */\n\n  var format = config._f;\n  config._locale = config._locale || getLocale(config._l);\n\n  if (input === null || format === undefined && input === '') {\n    return createInvalid(config, {\n      nullInput: true\n    });\n  }\n\n  if (isString(input)) {\n    config._i = input = config._locale.preparse(input, format);\n  }\n\n  if (isDate(input)) {\n    config._d = cloneDate(input);\n    return config;\n  } // todo: add check for recursion\n\n\n  if (isArray(format)) {\n    configFromStringAndArray(config);\n  } else if (format) {\n    configFromStringAndFormat(config);\n  } else {\n    configFromInput(config);\n  }\n\n  if (!isValid(config)) {\n    config._d = null;\n  }\n\n  return config;\n}\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction configFromInput(config) {\n  /** @type {?} */\n  var input = config._i;\n\n  if (isUndefined(input)) {\n    config._d = new Date();\n  } else if (isDate(input)) {\n    config._d = cloneDate(input);\n  } else if (isString(input)) {\n    configFromString(config);\n  } else if (isArray(input) && input.length) {\n    /** @type {?} */\n    var _arr = input.slice(0);\n\n    config._a = _arr.map(\n    /**\n    * @param {?} obj\n    * @return {?}\n    */\n    function (obj) {\n      return isString(obj) ? parseInt(obj, 10) : obj;\n    });\n    configFromArray(config);\n  } else if (isObject(input)) {\n    configFromObject(config);\n  } else if (isNumber(input)) {\n    // from milliseconds\n    config._d = new Date(input);\n  } else {\n    //   hooks.createFromInputFallback(config);\n    return createInvalid(config);\n  }\n\n  return config;\n}\n/**\n * @param {?} input\n * @param {?=} format\n * @param {?=} localeKey\n * @param {?=} strict\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction createLocalOrUTC(input, format, localeKey, strict, isUTC) {\n  /** @type {?} */\n  var config = {};\n  /** @type {?} */\n\n  var _input = input; // params switch -> skip; test it well\n  // if (localeKey === true || localeKey === false) {\n  //     strict = localeKey;\n  //     localeKey = undefined;\n  // }\n  // todo: fail fast and return not valid date\n\n  if (isObject(_input) && isObjectEmpty(_input) || isArray(_input) && _input.length === 0) {\n    _input = undefined;\n  } // object construction must be done this way.\n  // https://github.com/moment/moment/issues/1423\n  // config._isAMomentObject = true;\n\n\n  config._useUTC = config._isUTC = isUTC;\n  config._l = localeKey;\n  config._i = _input;\n  config._f = format;\n  config._strict = strict;\n  return createFromConfig(config);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} input\n * @param {?=} format\n * @param {?=} localeKey\n * @param {?=} strict\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction parseDate(input, format, localeKey, strict, isUTC) {\n  if (isDate(input)) {\n    return input;\n  }\n  /** @type {?} */\n\n\n  var config = createLocalOrUTC(input, format, localeKey, strict, isUTC);\n  return config._d;\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction utcAsLocal(date) {\n  if (!(date instanceof Date)) {\n    return null;\n  }\n\n  return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} num\n * @return {?}\n */\n\n\nfunction absRound(num) {\n  return num < 0 ? Math.round(num * -1) * -1 : Math.round(num);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} date1\n * @param {?} date2\n * @param {?=} units\n * @return {?}\n */\n\n\nfunction isAfter(date1, date2) {\n  var units = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'milliseconds';\n\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  if (units === 'milliseconds') {\n    return date1.valueOf() > date2.valueOf();\n  }\n\n  return date2.valueOf() < startOf(date1, units).valueOf();\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @param {?=} units\n * @return {?}\n */\n\n\nfunction isBefore(date1, date2) {\n  var units = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'milliseconds';\n\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  if (units === 'milliseconds') {\n    return date1.valueOf() < date2.valueOf();\n  }\n\n  return endOf(date1, units).valueOf() < date2.valueOf();\n}\n/**\n * @param {?} date\n * @param {?} daysDisabled\n * @return {?}\n */\n\n\nfunction isDisabledDay(date, daysDisabled) {\n  if (daysDisabled === undefined || !daysDisabled || !daysDisabled.length) {\n    return false;\n  }\n\n  return daysDisabled.some(\n  /**\n  * @param {?} day\n  * @return {?}\n  */\n  function (day) {\n    return day === date.getDay();\n  });\n}\n/**\n * @param {?} date\n * @param {?} from\n * @param {?} to\n * @param {?} units\n * @param {?=} inclusivity\n * @return {?}\n */\n\n\nfunction isBetween(date, from, to, units) {\n  var inclusivity = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '()';\n\n  /** @type {?} */\n  var leftBound = inclusivity[0] === '(' ? isAfter(date, from, units) : !isBefore(date, from, units);\n  /** @type {?} */\n\n  var rightBound = inclusivity[1] === ')' ? isBefore(date, to, units) : !isAfter(date, to, units);\n  return leftBound && rightBound;\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @param {?=} units\n * @return {?}\n */\n\n\nfunction isSame(date1, date2) {\n  var units = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'milliseconds';\n\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  if (units === 'milliseconds') {\n    return date1.valueOf() === date2.valueOf();\n  }\n  /** @type {?} */\n\n\n  var inputMs = date2.valueOf();\n  return startOf(date1, units).valueOf() <= inputMs && inputMs <= endOf(date1, units).valueOf();\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @return {?}\n */\n\n\nfunction isSameDay$1(date1, date2) {\n  return date1.getDay() == date2.getDay();\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @param {?=} units\n * @return {?}\n */\n\n\nfunction isSameOrAfter(date1, date2, units) {\n  return isSame(date1, date2, units) || isAfter(date1, date2, units);\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @param {?=} units\n * @return {?}\n */\n\n\nfunction isSameOrBefore(date1, date2, units) {\n  return isSame(date1, date2, units) || isBefore(date1, date2, units);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\n// tslint:disable-next-line\n\n/** @type {?} */\n\nvar isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n/**\n * @param {?=} input\n * @param {?=} key\n * @param {?=} config\n * @return {?}\n */\n\nfunction createDuration(input, key) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  /** @type {?} */\n  var duration = convertDuration(input, key); // matching against regexp is expensive, do it on demand\n\n  return new Duration(duration, config);\n}\n/**\n * @param {?} input\n * @param {?} key\n * @return {?}\n */\n\n\nfunction convertDuration(input, key) {\n  // checks for null or undefined\n  if (input == null) {\n    return {};\n  }\n\n  if (isDuration(input)) {\n    return {\n      milliseconds: input._milliseconds,\n      day: input._days,\n      month: input._months\n    };\n  }\n\n  if (isNumber(input)) {\n    // duration = {};\n    return key ? _defineProperty({}, key, input) : {\n      milliseconds: input\n    };\n  }\n\n  if (isString(input)) {\n    /** @type {?} */\n    var match = aspNetRegex.exec(input);\n\n    if (match) {\n      /** @type {?} */\n      var sign = match[1] === '-' ? -1 : 1;\n      return {\n        year: 0,\n        day: toInt(match[DATE]) * sign,\n        hours: toInt(match[HOUR]) * sign,\n        minutes: toInt(match[MINUTE]) * sign,\n        seconds: toInt(match[SECOND]) * sign,\n        // the millisecond decimal point is included in the match\n        milliseconds: toInt(absRound(toInt(match[MILLISECOND]) * 1000)) * sign\n      };\n    }\n\n    match = isoRegex.exec(input);\n\n    if (match) {\n      /** @type {?} */\n      var _sign2 = match[1] === '-' ? -1 : match[1] === '+' ? 1 : 1;\n\n      return {\n        year: parseIso(match[2], _sign2),\n        month: parseIso(match[3], _sign2),\n        week: parseIso(match[4], _sign2),\n        day: parseIso(match[5], _sign2),\n        hours: parseIso(match[6], _sign2),\n        minutes: parseIso(match[7], _sign2),\n        seconds: parseIso(match[8], _sign2)\n      };\n    }\n  }\n\n  if (isObject(input) && ('from' in input || 'to' in input)) {\n    /** @type {?} */\n    var diffRes = momentsDifference(parseDate(input.from), parseDate(input.to));\n    return {\n      milliseconds: diffRes.milliseconds,\n      month: diffRes.months\n    };\n  }\n\n  return input;\n} // createDuration.fn = Duration.prototype;\n// createDuration.invalid = invalid;\n\n/**\n * @param {?} inp\n * @param {?} sign\n * @return {?}\n */\n\n\nfunction parseIso(inp, sign) {\n  // We'd normally use ~~inp for this, but unfortunately it also\n  // converts floats to ints.\n  // inp may be undefined, so careful calling replace on it.\n\n  /** @type {?} */\n  var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n  return (isNaN(res) ? 0 : res) * sign;\n}\n/**\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\n\n\nfunction positiveMomentsDifference(base, other) {\n  /** @type {?} */\n  var res = {\n    milliseconds: 0,\n    months: 0\n  };\n  res.months = getMonth(other) - getMonth(base) + (_getFullYear(other) - _getFullYear(base)) * 12;\n  /** @type {?} */\n\n  var _basePlus = add(cloneDate(base), res.months, 'month');\n\n  if (isAfter(_basePlus, other)) {\n    --res.months;\n  }\n\n  res.milliseconds = +other - +add(cloneDate(base), res.months, 'month');\n  return res;\n}\n/**\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\n\n\nfunction momentsDifference(base, other) {\n  if (!(isDateValid(base) && isDateValid(other))) {\n    return {\n      milliseconds: 0,\n      months: 0\n    };\n  }\n  /** @type {?} */\n\n\n  var res;\n  /** @type {?} */\n\n  var _other = cloneWithOffset(other, base, {\n    _offset: base.getTimezoneOffset()\n  });\n\n  if (isBefore(base, _other)) {\n    res = positiveMomentsDifference(base, _other);\n  } else {\n    res = positiveMomentsDifference(_other, base);\n    res.milliseconds = -res.milliseconds;\n    res.months = -res.months;\n  }\n\n  return res;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} date\n * @param {?} val\n * @param {?} period\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction add(date, val, period, isUTC) {\n  /** @type {?} */\n  var dur = createDuration(val, period);\n  return addSubtract(date, dur, 1, isUTC);\n}\n/**\n * @param {?} date\n * @param {?} val\n * @param {?} period\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction subtract(date, val, period, isUTC) {\n  /** @type {?} */\n  var dur = createDuration(val, period);\n  return addSubtract(date, dur, -1, isUTC);\n}\n/**\n * @param {?} date\n * @param {?} duration\n * @param {?} isAdding\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction addSubtract(date, duration, isAdding, isUTC) {\n  /** @type {?} */\n  var milliseconds = duration._milliseconds;\n  /** @type {?} */\n\n  var days = absRound(duration._days);\n  /** @type {?} */\n\n  var months = absRound(duration._months); // todo: add timezones support\n  // const _updateOffset = updateOffset == null ? true : updateOffset;\n\n  if (months) {\n    setMonth(date, getMonth(date, isUTC) + months * isAdding, isUTC);\n  }\n\n  if (days) {\n    setDate(date, getDate(date, isUTC) + days * isAdding, isUTC);\n  }\n\n  if (milliseconds) {\n    setTime(date, getTime(date) + milliseconds * isAdding);\n  }\n\n  return cloneDate(date); // todo: add timezones support\n  // if (_updateOffset) {\n  //   hooks.updateOffset(date, days || months);\n  // }\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initDayOfWeek() {\n  // FORMATTING\n  addFormatToken('d', null, 'do',\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getDay(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('dd', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return opts.locale.weekdaysMin(date, opts.format, opts.isUTC);\n  });\n  addFormatToken('ddd', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return opts.locale.weekdaysShort(date, opts.format, opts.isUTC);\n  });\n  addFormatToken('dddd', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return opts.locale.weekdays(date, opts.format, opts.isUTC);\n  });\n  addFormatToken('e', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getLocaleDayOfWeek(date, opts.locale, opts.isUTC).toString(10); // return getDay(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('E', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getISODayOfWeek(date, opts.isUTC).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd',\n  /**\n  * @param {?} isStrict\n  * @param {?} locale\n  * @return {?}\n  */\n  function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd',\n  /**\n  * @param {?} isStrict\n  * @param {?} locale\n  * @return {?}\n  */\n  function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd',\n  /**\n  * @param {?} isStrict\n  * @param {?} locale\n  * @return {?}\n  */\n  function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'],\n  /**\n  * @param {?} input\n  * @param {?} week\n  * @param {?} config\n  * @param {?} token\n  * @return {?}\n  */\n  function (input, week, config, token) {\n    /** @type {?} */\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = !!input;\n    }\n\n    return config;\n  });\n  addWeekParseToken(['d', 'e', 'E'],\n  /**\n  * @param {?} input\n  * @param {?} week\n  * @param {?} config\n  * @param {?} token\n  * @return {?}\n  */\n  function (input, week, config, token) {\n    week[token] = toInt(input);\n    return config;\n  });\n} // HELPERS\n\n/**\n * @param {?} input\n * @param {?} locale\n * @return {?}\n */\n\n\nfunction parseWeekday(input, locale) {\n  if (!isString(input)) {\n    return input;\n  }\n  /** @type {?} */\n\n\n  var _num = parseInt(input, 10);\n\n  if (!isNaN(_num)) {\n    return _num;\n  }\n  /** @type {?} */\n\n\n  var _weekDay = locale.weekdaysParse(input);\n\n  if (isNumber(_weekDay)) {\n    return _weekDay;\n  }\n\n  return null;\n}\n/**\n * @param {?} input\n * @param {?=} locale\n * @return {?}\n */\n\n\nfunction parseIsoWeekday(input) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getLocale();\n\n  if (isString(input)) {\n    return locale.weekdaysParse(input) % 7 || 7;\n  }\n\n  return isNumber(input) && isNaN(input) ? null : input;\n} // MOMENTS\n\n/**\n * @param {?} date\n * @param {?} input\n * @param {?} opts\n * @return {?}\n */\n\n\nfunction getSetDayOfWeek(date, input, opts) {\n  if (!input) {\n    return getDayOfWeek(date, opts.isUTC);\n  }\n\n  return setDayOfWeek(date, input, opts.locale, opts.isUTC);\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} locale\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setDayOfWeek(date, input) {\n  var locale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getLocale();\n  var isUTC = arguments.length > 3 ? arguments[3] : undefined;\n\n  /** @type {?} */\n  var day = getDay(date, isUTC);\n  /** @type {?} */\n\n  var _input = parseWeekday(input, locale);\n\n  return add(date, _input - day, 'day');\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getDayOfWeek(date, isUTC) {\n  return getDay(date, isUTC);\n}\n/**\n * ****************************************\n * @param {?} date\n * @param {?=} locale\n * @param {?=} isUTC\n * @return {?}\n */\n// todo: utc\n// getSetLocaleDayOfWeek\n\n\nfunction getLocaleDayOfWeek(date) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getLocale();\n  var isUTC = arguments.length > 2 ? arguments[2] : undefined;\n  return (getDay(date, isUTC) + 7 - locale.firstDayOfWeek()) % 7;\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} opts\n * @return {?}\n */\n\n\nfunction setLocaleDayOfWeek(date, input) {\n  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  /** @type {?} */\n  var weekday = getLocaleDayOfWeek(date, opts.locale, opts.isUTC);\n  return add(date, input - weekday, 'day');\n} // getSetISODayOfWeek\n\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getISODayOfWeek(date, isUTC) {\n  return getDay(date, isUTC) || 7;\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} opts\n * @return {?}\n */\n\n\nfunction setISODayOfWeek(date, input) {\n  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  // behaves the same as moment#day except\n  // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n  // as a setter, sunday should belong to the previous week.\n  // behaves the same as moment#day except\n  // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n  // as a setter, sunday should belong to the previous week.\n\n  /** @type {?} */\n  var weekday = parseIsoWeekday(input, opts.locale);\n  return setDayOfWeek(date, getDayOfWeek(date) % 7 ? weekday : weekday - 7);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n//! moment.js locale configuration\n//! locale : Arabic [ar]\n//! author : Abdel Said: https://github.com/abdelsaid\n//! author : Ahmed Elkhatib\n//! author : forabi https://github.com/forabi\n\n/** @type {?} */\n\n\nvar symbolMap = {\n  1: '١',\n  2: '٢',\n  3: '٣',\n  4: '٤',\n  5: '٥',\n  6: '٦',\n  7: '٧',\n  8: '٨',\n  9: '٩',\n  0: '٠'\n};\n/** @type {?} */\n\nvar numberMap = {\n  '١': '1',\n  '٢': '2',\n  '٣': '3',\n  '٤': '4',\n  '٥': '5',\n  '٦': '6',\n  '٧': '7',\n  '٨': '8',\n  '٩': '9',\n  '٠': '0'\n};\n/** @type {?} */\n\nvar pluralForm =\n/**\n* @param {?} num\n* @return {?}\n*/\nfunction pluralForm(num) {\n  return num === 0 ? 0 : num === 1 ? 1 : num === 2 ? 2 : num % 100 >= 3 && num % 100 <= 10 ? 3 : num % 100 >= 11 ? 4 : 5;\n};\n/** @type {?} */\n\n\nvar plurals = {\n  s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n  m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n  h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n  d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n  M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n  y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n};\n/** @type {?} */\n\nvar pluralize =\n/**\n* @param {?} u\n* @return {?}\n*/\nfunction pluralize(u) {\n  return (\n    /**\n    * @param {?} num\n    * @param {?} withoutSuffix\n    * @return {?}\n    */\n    function (num, withoutSuffix) {\n      /** @type {?} */\n      var f = pluralForm(num);\n      /** @type {?} */\n\n      var str = plurals[u][pluralForm(num)];\n\n      if (f === 2) {\n        str = str[withoutSuffix ? 0 : 1];\n      }\n\n      return (\n        /** @type {?} */\n        str.replace(/%d/i, num.toString())\n      );\n    }\n  );\n};\n/** @type {?} */\n\n\nvar months = ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'];\n/** @type {?} */\n\nvar arLocale = {\n  abbr: 'ar',\n  months: months,\n  monthsShort: months,\n  weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n  weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n  weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: \"D/\\u200FM/\\u200FYYYY\",\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  meridiemParse: /ص|م/,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM: function isPM(input) {\n    return 'م' === input;\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem: function meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ص';\n    } else {\n      return 'م';\n    }\n  },\n  calendar: {\n    sameDay: '[اليوم عند الساعة] LT',\n    nextDay: '[غدًا عند الساعة] LT',\n    nextWeek: 'dddd [عند الساعة] LT',\n    lastDay: '[أمس عند الساعة] LT',\n    lastWeek: 'dddd [عند الساعة] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'بعد %s',\n    past: 'منذ %s',\n    s: pluralize('s'),\n    ss: pluralize('s'),\n    m: pluralize('m'),\n    mm: pluralize('m'),\n    h: pluralize('h'),\n    hh: pluralize('h'),\n    d: pluralize('d'),\n    dd: pluralize('d'),\n    M: pluralize('M'),\n    MM: pluralize('M'),\n    y: pluralize('y'),\n    yy: pluralize('y')\n  },\n\n  /**\n   * @param {?} str\n   * @return {?}\n   */\n  preparse: function preparse(str) {\n    return str.replace(/[١٢٣٤٥٦٧٨٩٠]/g,\n    /**\n    * @param {?} match\n    * @return {?}\n    */\n    function (match) {\n      return numberMap[match];\n    }).replace(/،/g, ',');\n  },\n\n  /**\n   * @param {?} str\n   * @return {?}\n   */\n  postformat: function postformat(str) {\n    return str.replace(/\\d/g,\n    /**\n    * @param {?} match\n    * @return {?}\n    */\n    function (match) {\n      return symbolMap[match];\n    }).replace(/,/g, '،');\n  },\n  week: {\n    dow: 6,\n    // Saturday is the first day of the week.\n    doy: 12 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Bulgarian [bg]\n//! author : Iskren Ivov Chernev : https://github.com/ichernev\n//! author : Kunal Marwaha : https://github.com/marwahaha\n//! author : Matt Grande : https://github.com/mattgrande\n//! author : Isaac Cambron : https://github.com/icambron\n//! author : Venelin Manchev : https://github.com/vmanchev\n\n/** @type {?} */\n\nvar bgLocale = {\n  abbr: 'bg',\n  months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),\n  monthsShort: 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n  weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),\n  weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n  weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'D.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY H:mm',\n    LLLL: 'dddd, D MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[Днес в] LT',\n    nextDay: '[Утре в] LT',\n    nextWeek: 'dddd [в] LT',\n    lastDay: '[Вчера в] LT',\n    lastWeek:\n    /**\n    * @param {?} d\n    * @return {?}\n    */\n    function lastWeek(d) {\n      switch (d) {\n        case 0:\n        case 3:\n        case 6:\n          return '[В изминалата] dddd [в] LT';\n\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[В изминалия] dddd [в] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'след %s',\n    past: 'преди %s',\n    s: 'няколко секунди',\n    ss: '%d секунди',\n    m: 'минута',\n    mm: '%d минути',\n    h: 'час',\n    hh: '%d часа',\n    d: 'ден',\n    dd: '%d дни',\n    M: 'месец',\n    MM: '%d месеца',\n    y: 'година',\n    yy: '%d години'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n  ordinal:\n  /**\n  * @param {?} _num\n  * @return {?}\n  */\n  function ordinal(_num) {\n    /** @type {?} */\n    var number = Number(_num);\n    /** @type {?} */\n\n    var lastDigit = number % 10;\n    /** @type {?} */\n\n    var last2Digits = number % 100;\n\n    if (number === 0) {\n      return number + '-ев';\n    } else if (last2Digits === 0) {\n      return number + '-ен';\n    } else if (last2Digits > 10 && last2Digits < 20) {\n      return number + '-ти';\n    } else if (lastDigit === 1) {\n      return number + '-ви';\n    } else if (lastDigit === 2) {\n      return number + '-ри';\n    } else if (lastDigit === 7 || lastDigit === 8) {\n      return number + '-ми';\n    } else {\n      return number + '-ти';\n    }\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Catalan [ca]\n//! author : Xavier Arbat : https://github.com/XavisaurusRex\n\n/** @type {?} */\n\nvar monthsShortDot = 'gen._feb._mar._abr._mai._jun._jul._ago._set._oct._nov._des.'.split('_');\n/** @type {?} */\n\nvar _monthsShort = 'ene_feb_mar_abr_mai_jun_jul_ago_set_oct_nov_des'.split('_');\n/** @type {?} */\n\n\nvar monthsParse = [/^gen/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^jun/i, /^jul/i, /^ago/i, /^set/i, /^oct/i, /^nov/i, /^des/i];\n/** @type {?} */\n\nvar monthsRegex = /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre|gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i;\n/** @type {?} */\n\nvar caLocale = {\n  abbr: 'ca',\n  months: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\n\n  /**\n   * @param {?} date\n   * @param {?} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  monthsShort: function monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot;\n    }\n\n    if (/-MMM-/.test(format)) {\n      return _monthsShort[getMonth(date, isUTC)];\n    }\n\n    return monthsShortDot[getMonth(date, isUTC)];\n  },\n  monthsRegex: monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre)/i,\n  monthsShortStrictRegex: /^(gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i,\n  monthsParse: monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\n  weekdaysShort: 'diu._dil._dim._dix._dij._div._dis.'.split('_'),\n  weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    sameDay: function sameDay(date) {\n      return '[avui a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextDay: function nextDay(date) {\n      return '[dema a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek: function nextWeek(date) {\n      return 'dddd [a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastDay: function lastDay(date) {\n      return '[ahir a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek: function lastWeek(date) {\n      return '[el] dddd [' + ('passada la ' + (getHours(date) !== 1) ? 'passades les' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'fa %s',\n    s: 'uns segons',\n    ss: '%d segons',\n    m: 'un minut',\n    mm: '%d minuts',\n    h: 'una hora',\n    hh: '%d hores',\n    d: 'un dia',\n    dd: '%d dies',\n    M: 'un mes',\n    MM: '%d mesos',\n    y: 'un any',\n    yy: '%d anys'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|on|er|rt|é)/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal: function ordinal(_num) {\n    /** @type {?} */\n    var num = Number(_num);\n    /** @type {?} */\n\n    var output = num > 4 ? 'é' : num === 1 || num === 3 ? 'r' : num === 2 ? 'n' : num === 4 ? 't' : 'é';\n    return num + output;\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Czech [cs]\n//! author : petrbela : https://github.com/petrbela\n\n/** @type {?} */\n\nvar months$1 = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_');\n/** @type {?} */\n\nvar monthsShort$1 = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');\n/**\n * @param {?} num\n * @return {?}\n */\n\nfunction plural(num) {\n  return num > 1 && num < 5 && ~~(num / 10) !== 1;\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\n\nfunction translate(num, withoutSuffix, key, isFuture) {\n  /** @type {?} */\n  var result = num + ' ';\n\n  switch (key) {\n    case 's':\n      // a few seconds / in a few seconds / a few seconds ago\n      return withoutSuffix || isFuture ? 'pár sekund' : 'pár sekundami';\n\n    case 'ss':\n      // 9 seconds / in 9 seconds / 9 seconds ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'sekundy' : 'sekund');\n      } else {\n        return result + 'sekundami';\n      }\n\n    // break;\n\n    case 'm':\n      // a minute / in a minute / a minute ago\n      return withoutSuffix ? 'minuta' : isFuture ? 'minutu' : 'minutou';\n\n    case 'mm':\n      // 9 minutes / in 9 minutes / 9 minutes ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'minuty' : 'minut');\n      } else {\n        return result + 'minutami';\n      }\n\n    // break;\n\n    case 'h':\n      // an hour / in an hour / an hour ago\n      return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n\n    case 'hh':\n      // 9 hours / in 9 hours / 9 hours ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'hodiny' : 'hodin');\n      } else {\n        return result + 'hodinami';\n      }\n\n    // break;\n\n    case 'd':\n      // a day / in a day / a day ago\n      return withoutSuffix || isFuture ? 'den' : 'dnem';\n\n    case 'dd':\n      // 9 days / in 9 days / 9 days ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'dny' : 'dní');\n      } else {\n        return result + 'dny';\n      }\n\n    // break;\n\n    case 'M':\n      // a month / in a month / a month ago\n      return withoutSuffix || isFuture ? 'měsíc' : 'měsícem';\n\n    case 'MM':\n      // 9 months / in 9 months / 9 months ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'měsíce' : 'měsíců');\n      } else {\n        return result + 'měsíci';\n      }\n\n    // break;\n\n    case 'y':\n      // a year / in a year / a year ago\n      return withoutSuffix || isFuture ? 'rok' : 'rokem';\n\n    case 'yy':\n      // 9 years / in 9 years / 9 years ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'roky' : 'let');\n      } else {\n        return result + 'lety';\n      }\n\n    // break;\n  }\n}\n/** @type {?} */\n\n\nvar csLocale = {\n  abbr: 'cs',\n  months: months$1,\n  monthsShort: monthsShort$1,\n  monthsParse:\n  /**\n  * @param {?} months\n  * @param {?} monthsShort\n  * @return {?}\n  */\n  function (months, monthsShort) {\n    /** @type {?} */\n    var i;\n    /** @type {?} */\n\n    var _monthsParse = [];\n\n    for (i = 0; i < 12; i++) {\n      // use custom parser to solve problem with July (červenec)\n      _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n    }\n\n    return _monthsParse;\n  }(months$1, monthsShort$1),\n  shortMonthsParse:\n  /**\n  * @param {?} monthsShort\n  * @return {?}\n  */\n  function (monthsShort) {\n    /** @type {?} */\n    var i;\n    /** @type {?} */\n\n    var _shortMonthsParse = [];\n\n    for (i = 0; i < 12; i++) {\n      _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');\n    }\n\n    return _shortMonthsParse;\n  }(monthsShort$1),\n  longMonthsParse:\n  /**\n  * @param {?} months\n  * @return {?}\n  */\n  function (months) {\n    /** @type {?} */\n    var i;\n    /** @type {?} */\n\n    var _longMonthsParse = [];\n\n    for (i = 0; i < 12; i++) {\n      _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');\n    }\n\n    return _longMonthsParse;\n  }(months$1),\n  weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n  weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),\n  weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd D. MMMM YYYY H:mm',\n    l: 'D. M. YYYY'\n  },\n  calendar: {\n    sameDay: '[dnes v] LT',\n    nextDay: '[zítra v] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek: function nextWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v neděli v] LT';\n\n        case 1:\n        case 2:\n          return '[v] dddd [v] LT';\n\n        case 3:\n          return '[ve středu v] LT';\n\n        case 4:\n          return '[ve čtvrtek v] LT';\n\n        case 5:\n          return '[v pátek v] LT';\n\n        case 6:\n          return '[v sobotu v] LT';\n      }\n    },\n    lastDay: '[včera v] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek: function lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[minulou neděli v] LT';\n\n        case 1:\n        case 2:\n          return '[minulé] dddd [v] LT';\n\n        case 3:\n          return '[minulou středu v] LT';\n\n        case 4:\n        case 5:\n          return '[minulý] dddd [v] LT';\n\n        case 6:\n          return '[minulou sobotu v] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: 'před %s',\n    s: translate,\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format\n//! moment.js locale configuration\n//! locale : Danish (Denmark) [da]\n//! author : Per Hansen : https://github.com/perhp\n\n/** @type {?} */\n\nvar daLocale = {\n  abbr: 'da',\n  months: 'Januar_Februar_Marts_April_Maj_Juni_Juli_August_September_Oktober_November_December'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_Maj_Jun_Jul_Aug_Sep_Okt_Nov_Dec'.split('_'),\n  weekdays: 'Søndag_Mandag_Tirsdag_Onsdag_Torsdag_Fredag_Lørdag'.split('_'),\n  weekdaysShort: 'Søn_Man_Tir_Ons_Tor_Fre_Lør'.split('_'),\n  weekdaysMin: 'Sø_Ma_Ti_On_To_Fr_Lø'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY HH:mm',\n    LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'\n  },\n  calendar: {\n    sameDay: '[i dag kl.] LT',\n    nextDay: '[i morgen kl.] LT',\n    nextWeek: 'på dddd [kl.] LT',\n    lastDay: '[i går kl.] LT',\n    lastWeek: '[i] dddd[s kl.] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: '%s siden',\n    s: 'få sekunder',\n    m: 'et minut',\n    mm: '%d minutter',\n    h: 'en time',\n    hh: '%d timer',\n    d: 'en dag',\n    dd: '%d dage',\n    M: 'en måned',\n    MM: '%d måneder',\n    y: 'et år',\n    yy: '%d år'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-key-quotes\n//! moment.js locale configuration\n//! locale : German [de]\n//! author : lluchs : https://github.com/lluchs\n//! author: Menelion Elensúle: https://github.com/Oire\n//! author : Mikolaj Dadela : https://github.com/mik01aj\n\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\nfunction processRelativeTime(num, withoutSuffix, key, isFuture) {\n  /** @type {?} */\n  var format = {\n    'm': ['eine Minute', 'einer Minute'],\n    'h': ['eine Stunde', 'einer Stunde'],\n    'd': ['ein Tag', 'einem Tag'],\n    'dd': [num + ' Tage', num + ' Tagen'],\n    'M': ['ein Monat', 'einem Monat'],\n    'MM': [num + ' Monate', num + ' Monaten'],\n    'y': ['ein Jahr', 'einem Jahr'],\n    'yy': [num + ' Jahre', num + ' Jahren']\n  };\n  return withoutSuffix ? format[key][0] : format[key][1];\n}\n/** @type {?} */\n\n\nvar deLocale = {\n  abbr: 'de',\n  months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n  monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n  weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n  weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY HH:mm',\n    LLLL: 'dddd, D. MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[heute um] LT [Uhr]',\n    sameElse: 'L',\n    nextDay: '[morgen um] LT [Uhr]',\n    nextWeek: 'dddd [um] LT [Uhr]',\n    lastDay: '[gestern um] LT [Uhr]',\n    lastWeek: '[letzten] dddd [um] LT [Uhr]'\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: 'vor %s',\n    s: 'ein paar Sekunden',\n    ss: '%d Sekunden',\n    m: processRelativeTime,\n    mm: '%d Minuten',\n    h: processRelativeTime,\n    hh: '%d Stunden',\n    d: processRelativeTime,\n    dd: processRelativeTime,\n    M: processRelativeTime,\n    MM: processRelativeTime,\n    y: processRelativeTime,\n    yy: processRelativeTime\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : English (United Kingdom) [en-gb]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\n\n/** @type {?} */\n\nvar enGbLocale = {\n  abbr: 'en-gb',\n  months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n  weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n  weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n  weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal: function ordinal(_num) {\n    /** @type {?} */\n    var num = Number(_num);\n    /** @type {?} */\n\n    var b = num % 10;\n    /** @type {?} */\n\n    var output = ~~(num % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n    return num + output;\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Spanish (Dominican Republic) [es-do]\n\n/** @type {?} */\n\nvar monthsShortDot$1 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\n/** @type {?} */\n\nvar monthsShort$2 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n/** @type {?} */\n\nvar monthsParse$1 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\n/** @type {?} */\n\nvar monthsRegex$1 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n/** @type {?} */\n\nvar esDoLocale = {\n  abbr: 'es-do',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n\n  /**\n   * @param {?} date\n   * @param {?} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  monthsShort: function monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$1;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort$2[getMonth(date, isUTC)];\n    } else {\n      return monthsShortDot$1[getMonth(date, isUTC)];\n    }\n  },\n  monthsRegex: monthsRegex$1,\n  monthsShortRegex: monthsRegex$1,\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n  monthsParse: monthsParse$1,\n  longMonthsParse: monthsParse$1,\n  shortMonthsParse: monthsParse$1,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY h:mm A',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'\n  },\n  calendar: {\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    sameDay: function sameDay(date) {\n      return '[hoy a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextDay: function nextDay(date) {\n      return '[mañana a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek: function nextWeek(date) {\n      return 'dddd [a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastDay: function lastDay(date) {\n      return '[ayer a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek: function lastWeek(date) {\n      return '[el] dddd [pasado a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Spanish [es]\n//! author : Julio Napurí : https://github.com/julionc\n\n/** @type {?} */\n\nvar monthsShortDot$2 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\n/** @type {?} */\n\nvar monthsShort$3 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n/** @type {?} */\n\nvar monthsParse$2 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\n/** @type {?} */\n\nvar monthsRegex$2 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n/** @type {?} */\n\nvar esLocale = {\n  abbr: 'es',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n\n  /**\n   * @param {?} date\n   * @param {?} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  monthsShort: function monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$2;\n    }\n\n    if (/-MMM-/.test(format)) {\n      return monthsShort$3[getMonth(date, isUTC)];\n    }\n\n    return monthsShortDot$2[getMonth(date, isUTC)];\n  },\n  monthsRegex: monthsRegex$2,\n  monthsShortRegex: monthsRegex$2,\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n  monthsParse: monthsParse$2,\n  longMonthsParse: monthsParse$2,\n  shortMonthsParse: monthsParse$2,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    sameDay: function sameDay(date) {\n      return '[hoy a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextDay: function nextDay(date) {\n      return '[mañana a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek: function nextWeek(date) {\n      return 'dddd [a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastDay: function lastDay(date) {\n      return '[ayer a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek: function lastWeek(date) {\n      return '[el] dddd [pasado a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Spanish (United States) [es-us]\n//! author : bustta : https://github.com/bustta\n\n/** @type {?} */\n\nvar monthsShortDot$3 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\n/** @type {?} */\n\nvar monthsShort$4 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n/** @type {?} */\n\nvar esUsLocale = {\n  abbr: 'es-us',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n\n  /**\n   * @param {?} date\n   * @param {?} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  monthsShort: function monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$3;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort$4[getMonth(date, isUTC)];\n    } else {\n      return monthsShortDot$3[getMonth(date, isUTC)];\n    }\n  },\n  monthsParseExact: true,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM [de] D [de] YYYY',\n    LLL: 'MMMM [de] D [de] YYYY h:mm A',\n    LLLL: 'dddd, MMMM [de] D [de] YYYY h:mm A'\n  },\n  calendar: {\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    sameDay: function sameDay(date) {\n      return '[hoy a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextDay: function nextDay(date) {\n      return '[mañana a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek: function nextWeek(date) {\n      return 'dddd [a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastDay: function lastDay(date) {\n      return '[ayer a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek: function lastWeek(date) {\n      return '[el] dddd [pasado a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Estonian [et]\n//! author : Chris Gedrim : https://github.com/a90machado\n\n/** @type {?} */\n\nvar processRelativeTime$1 =\n/**\n* @param {?} num\n* @param {?} withoutSuffix\n* @param {?} key\n* @param {?} isFuture\n* @return {?}\n*/\nfunction processRelativeTime$1(num, withoutSuffix, key, isFuture) {\n  /** @type {?} */\n  var format = {\n    s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n    ss: [num + 'sekundi', num + 'sekundit'],\n    m: ['ühe minuti', 'üks minut'],\n    mm: [num + ' minuti', num + ' minutit'],\n    h: ['ühe tunni', 'tund aega', 'üks tund'],\n    hh: [num + ' tunni', num + ' tundi'],\n    d: ['ühe päeva', 'üks päev'],\n    M: ['kuu aja', 'kuu aega', 'üks kuu'],\n    MM: [num + ' kuu', num + ' kuud'],\n    y: ['ühe aasta', 'aasta', 'üks aasta'],\n    yy: [num + ' aasta', num + ' aastat']\n  };\n\n  if (withoutSuffix) {\n    return format[key][2] ? format[key][2] : format[key][1];\n  }\n\n  return isFuture ? format[key][0] : format[key][1];\n};\n/** @type {?} */\n\n\nvar etLocale = {\n  abbr: 'et',\n  months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n  monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n  weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\n  weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),\n  weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[Täna,] LT',\n    nextDay: '[Homme,] LT',\n    nextWeek: '[Järgmine] dddd LT',\n    lastDay: '[Eile,] LT',\n    lastWeek: '[Eelmine] dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s pärast',\n    past: '%s tagasi',\n    s: processRelativeTime$1,\n    ss: processRelativeTime$1,\n    m: processRelativeTime$1,\n    mm: processRelativeTime$1,\n    h: processRelativeTime$1,\n    hh: processRelativeTime$1,\n    d: processRelativeTime$1,\n    dd: '%d päeva',\n    M: processRelativeTime$1,\n    MM: processRelativeTime$1,\n    y: processRelativeTime$1,\n    yy: processRelativeTime$1\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n// https://github.com/moment/moment/blob/develop/locale/fi.js\n\n/** @type {?} */\n\nvar numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' ');\n/** @type {?} */\n\nvar numbersFuture = ['nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden', numbersPast[7], numbersPast[8], numbersPast[9]];\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\nfunction translate$1(num, withoutSuffix, key, isFuture) {\n  /** @type {?} */\n  var result = '';\n\n  switch (key) {\n    case 's':\n      return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n\n    case 'ss':\n      return isFuture ? 'sekunnin' : 'sekuntia';\n\n    case 'm':\n      return isFuture ? 'minuutin' : 'minuutti';\n\n    case 'mm':\n      result = isFuture ? 'minuutin' : 'minuuttia';\n      break;\n\n    case 'h':\n      return isFuture ? 'tunnin' : 'tunti';\n\n    case 'hh':\n      result = isFuture ? 'tunnin' : 'tuntia';\n      break;\n\n    case 'd':\n      return isFuture ? 'päivän' : 'päivä';\n\n    case 'dd':\n      result = isFuture ? 'päivän' : 'päivää';\n      break;\n\n    case 'M':\n      return isFuture ? 'kuukauden' : 'kuukausi';\n\n    case 'MM':\n      result = isFuture ? 'kuukauden' : 'kuukautta';\n      break;\n\n    case 'y':\n      return isFuture ? 'vuoden' : 'vuosi';\n\n    case 'yy':\n      result = isFuture ? 'vuoden' : 'vuotta';\n      break;\n  }\n\n  result = verbalNumber(num, isFuture) + ' ' + result;\n  return result;\n}\n/**\n * @param {?} num\n * @param {?} isFuture\n * @return {?}\n */\n\n\nfunction verbalNumber(num, isFuture) {\n  return num < 10 ? isFuture ? numbersFuture[num] : numbersPast[num] : num;\n}\n/** @type {?} */\n\n\nvar fiLocale = {\n  abbr: 'fi',\n  months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n  monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),\n  weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n  weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),\n  weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),\n  longDateFormat: {\n    LT: 'HH.mm',\n    LTS: 'HH.mm.ss',\n    L: 'DD.MM.YYYY',\n    LL: 'Do MMMM[ta] YYYY',\n    LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',\n    LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n    l: 'D.M.YYYY',\n    ll: 'Do MMM YYYY',\n    lll: 'Do MMM YYYY, [klo] HH.mm',\n    llll: 'ddd, Do MMM YYYY, [klo] HH.mm'\n  },\n  calendar: {\n    sameDay: '[tänään] [klo] LT',\n    nextDay: '[huomenna] [klo] LT',\n    nextWeek: 'dddd [klo] LT',\n    lastDay: '[eilen] [klo] LT',\n    lastWeek: '[viime] dddd[na] [klo] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s päästä',\n    past: '%s sitten',\n    s: translate$1,\n    ss: translate$1,\n    m: translate$1,\n    mm: translate$1,\n    h: translate$1,\n    hh: translate$1,\n    d: translate$1,\n    dd: translate$1,\n    M: translate$1,\n    MM: translate$1,\n    y: translate$1,\n    yy: translate$1\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : French [fr]\n//! author : John Fischer : https://github.com/jfroffice\n\n/** @type {?} */\n\nvar frLocale = {\n  abbr: 'fr',\n  months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n  monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n  weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n  weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Aujourd’hui à] LT',\n    nextDay: '[Demain à] LT',\n    nextWeek: 'dddd [à] LT',\n    lastDay: '[Hier à] LT',\n    lastWeek: 'dddd [dernier à] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'dans %s',\n    past: 'il y a %s',\n    s: 'quelques secondes',\n    ss: '%d secondes',\n    m: 'une minute',\n    mm: '%d minutes',\n    h: 'une heure',\n    hh: '%d heures',\n    d: 'un jour',\n    dd: '%d jours',\n    M: 'un mois',\n    MM: '%d mois',\n    y: 'un an',\n    yy: '%d ans'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n\n  /**\n   * @param {?} _num\n   * @param {?} period\n   * @return {?}\n   */\n  ordinal: function ordinal(_num, period) {\n    /** @type {?} */\n    var num = Number(_num);\n\n    switch (period) {\n      // TODO: Return 'e' when day of month > 1. Move this case inside\n      // block for masculine words below.\n      // See https://github.com/moment/moment/issues/3375\n      case 'D':\n        return num + (num === 1 ? 'er' : '');\n      // Words with masculine grammatical gender: mois, trimestre, jour\n\n      default:\n      case 'M':\n      case 'Q':\n      case 'DDD':\n      case 'd':\n        return num + (num === 1 ? 'er' : 'e');\n      // Words with feminine grammatical gender: semaine\n\n      case 'w':\n      case 'W':\n        return num + (num === 1 ? 're' : 'e');\n    }\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Galician [gl]\n//! author : Darío Beiró : https://github.com/quinobravo\n\n/** @type {?} */\n\nvar monthsShortDot$4 = 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_');\n/** @type {?} */\n\nvar monthsShort$5 = 'xan_feb_mar_abr_mai_xuñ_xul_ago_set_out_nov_dec'.split('_');\n/** @type {?} */\n\nvar monthsParse$3 = [/^xan/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^xuñ/i, /^xul/i, /^ago/i, /^set/i, /^out/i, /^nov/i, /^dec/i];\n/** @type {?} */\n\nvar monthsRegex$3 = /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro|xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuñ\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i;\n/** @type {?} */\n\nvar glLocale = {\n  abbr: 'gl',\n  months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),\n\n  /**\n   * @param {?} date\n   * @param {?} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  monthsShort: function monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$4;\n    }\n\n    if (/-MMM-/.test(format)) {\n      return monthsShort$5[getMonth(date, isUTC)];\n    }\n\n    return monthsShortDot$4[getMonth(date, isUTC)];\n  },\n  monthsRegex: monthsRegex$3,\n  monthsShortRegex: monthsRegex$3,\n  monthsStrictRegex: /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro)/i,\n  monthsShortStrictRegex: /^(xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuñ\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i,\n  monthsParse: monthsParse$3,\n  longMonthsParse: monthsParse$3,\n  shortMonthsParse: monthsParse$3,\n  weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    sameDay: function sameDay(date) {\n      return '[hoxe á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextDay: function nextDay(date) {\n      return '[mañan á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek: function nextWeek(date) {\n      return 'dddd [á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastDay: function lastDay(date) {\n      return '[onte á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek: function lastWeek(date) {\n      return '[o] dddd [pasado á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'fai %s',\n    s: 'uns segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'unha hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un ano',\n    yy: '%d anos'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Hebrew [he]\n//! author : Tomer Cohen : https://github.com/tomer\n//! author : Moshe Simantov : https://github.com/DevelopmentIL\n//! author : Tal Ater : https://github.com/TalAter\n\n/** @type {?} */\n\nvar heLocale = {\n  abbr: 'he',\n  months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),\n  monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\n  weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n  weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n  weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [ב]MMMM YYYY',\n    LLL: 'D [ב]MMMM YYYY HH:mm',\n    LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',\n    l: 'D/M/YYYY',\n    ll: 'D MMM YYYY',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd, D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[היום ב־]LT',\n    nextDay: '[מחר ב־]LT',\n    nextWeek: 'dddd [בשעה] LT',\n    lastDay: '[אתמול ב־]LT',\n    lastWeek: '[ביום] dddd [האחרון בשעה] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'בעוד %s',\n    past: 'לפני %s',\n    s: 'מספר שניות',\n    ss: '%d שניות',\n    m: 'דקה',\n    mm: '%d דקות',\n    h: 'שעה',\n\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    hh: function hh(num) {\n      if (num === 2) {\n        return 'שעתיים';\n      }\n\n      return num + ' שעות';\n    },\n    d: 'יום',\n\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    dd: function dd(num) {\n      if (num === 2) {\n        return 'יומיים';\n      }\n\n      return num + ' ימים';\n    },\n    M: 'חודש',\n\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    MM: function MM(num) {\n      if (num === 2) {\n        return 'חודשיים';\n      }\n\n      return num + ' חודשים';\n    },\n    y: 'שנה',\n\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    yy: function yy(num) {\n      if (num === 2) {\n        return 'שנתיים';\n      } else if (num % 10 === 0 && num !== 10) {\n        return num + ' שנה';\n      }\n\n      return num + ' שנים';\n    }\n  },\n  meridiemParse: /אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM: function isPM(input) {\n    return /^(אחה\"צ|אחרי הצהריים|בערב)$/.test(input);\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem: function meridiem(hour, minute, isLower) {\n    if (hour < 5) {\n      return 'לפנות בוקר';\n    } else if (hour < 10) {\n      return 'בבוקר';\n    } else if (hour < 12) {\n      return isLower ? 'לפנה\"צ' : 'לפני הצהריים';\n    } else if (hour < 18) {\n      return isLower ? 'אחה\"צ' : 'אחרי הצהריים';\n    } else {\n      return 'בערב';\n    }\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n//! moment.js locale configuration\n//! locale : Hindi [hi]\n//! author : Mayank Singhal : https://github.com/mayanksinghal\n\n/** @type {?} */\n\nvar symbolMap$1 = {\n  1: '१',\n  2: '२',\n  3: '३',\n  4: '४',\n  5: '५',\n  6: '६',\n  7: '७',\n  8: '८',\n  9: '९',\n  0: '०'\n};\n/** @type {?} */\n\nvar numberMap$1 = {\n  '१': '1',\n  '२': '2',\n  '३': '3',\n  '४': '4',\n  '५': '5',\n  '६': '6',\n  '७': '7',\n  '८': '8',\n  '९': '9',\n  '०': '0'\n};\n/** @type {?} */\n\nvar hiLocale = {\n  abbr: 'hi',\n  months: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),\n  monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n  weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n  weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm बजे',\n    LTS: 'A h:mm:ss बजे',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY, A h:mm बजे',\n    LLLL: 'dddd, D MMMM YYYY, A h:mm बजे'\n  },\n  calendar: {\n    sameDay: '[आज] LT',\n    nextDay: '[कल] LT',\n    nextWeek: 'dddd, LT',\n    lastDay: '[कल] LT',\n    lastWeek: '[पिछले] dddd, LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s में',\n    past: '%s पहले',\n    s: 'कुछ ही क्षण',\n    ss: '%d सेकंड',\n    m: 'एक मिनट',\n    mm: '%d मिनट',\n    h: 'एक घंटा',\n    hh: '%d घंटे',\n    d: 'एक दिन',\n    dd: '%d दिन',\n    M: 'एक महीने',\n    MM: '%d महीने',\n    y: 'एक वर्ष',\n    yy: '%d वर्ष'\n  },\n\n  /**\n   * @param {?} str\n   * @return {?}\n   */\n  preparse: function preparse(str) {\n    return str.replace(/[१२३४५६७८९०]/g,\n    /**\n    * @param {?} match\n    * @return {?}\n    */\n    function (match) {\n      return numberMap$1[match];\n    });\n  },\n\n  /**\n   * @param {?} str\n   * @return {?}\n   */\n  postformat: function postformat(str) {\n    return str.replace(/\\d/g,\n    /**\n    * @param {?} match\n    * @return {?}\n    */\n    function (match) {\n      return symbolMap$1[match];\n    });\n  },\n  // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n  // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n  meridiemParse: /रात|सुबह|दोपहर|शाम/,\n\n  /**\n   * @param {?} hour\n   * @param {?} meridiem\n   * @return {?}\n   */\n  meridiemHour: function meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n\n    if (meridiem === 'रात') {\n      return hour < 4 ? hour : hour + 12;\n    } else if (meridiem === 'सुबह') {\n      return hour;\n    } else if (meridiem === 'दोपहर') {\n      return hour >= 10 ? hour : hour + 12;\n    } else if (meridiem === 'शाम') {\n      return hour + 12;\n    }\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem: function meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'रात';\n    } else if (hour < 10) {\n      return 'सुबह';\n    } else if (hour < 17) {\n      return 'दोपहर';\n    } else if (hour < 20) {\n      return 'शाम';\n    } else {\n      return 'रात';\n    }\n  },\n  week: {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Hungarian [hu]\n//! author : Adam Brunner : https://github.com/adambrunner\n\n/** @type {?} */\n\nvar weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\nfunction translate$2(num, withoutSuffix, key, isFuture) {\n  switch (key) {\n    case 's':\n      return isFuture || withoutSuffix ? 'néhány másodperc' : 'néhány másodperce';\n\n    case 'ss':\n      return num + (isFuture || withoutSuffix ? ' másodperc' : ' másodperce');\n\n    case 'm':\n      return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n\n    case 'mm':\n      return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n\n    case 'h':\n      return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n\n    case 'hh':\n      return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n\n    case 'd':\n      return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n\n    case 'dd':\n      return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n\n    case 'M':\n      return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n\n    case 'MM':\n      return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n\n    case 'y':\n      return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n\n    case 'yy':\n      return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n  }\n\n  return '';\n}\n/**\n * @param {?} date\n * @param {?} isFuture\n * @return {?}\n */\n\n\nfunction week(date, isFuture) {\n  return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[getDayOfWeek(date)] + '] LT[-kor]';\n}\n/** @type {?} */\n\n\nvar huLocale = {\n  abbr: 'hu',\n  months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),\n  monthsShort: 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),\n  weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n  weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n  weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'YYYY.MM.DD.',\n    LL: 'YYYY. MMMM D.',\n    LLL: 'YYYY. MMMM D. H:mm',\n    LLLL: 'YYYY. MMMM D., dddd H:mm'\n  },\n  meridiemParse: /de|du/i,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM: function isPM(input) {\n    return input.charAt(1).toLowerCase() === 'u';\n  },\n\n  /**\n   * @param {?} hours\n   * @param {?} minutes\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem: function meridiem(hours, minutes, isLower) {\n    if (hours < 12) {\n      return isLower === true ? 'de' : 'DE';\n    } else {\n      return isLower === true ? 'du' : 'DU';\n    }\n  },\n  calendar: {\n    sameDay: '[ma] LT[-kor]',\n    nextDay: '[holnap] LT[-kor]',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek: function nextWeek(date) {\n      return week(date, true);\n    },\n    lastDay: '[tegnap] LT[-kor]',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek: function lastWeek(date) {\n      return week(date, false);\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s múlva',\n    past: '%s',\n    s: translate$2,\n    ss: translate$2,\n    m: translate$2,\n    mm: translate$2,\n    h: translate$2,\n    hh: translate$2,\n    d: translate$2,\n    dd: translate$2,\n    M: translate$2,\n    MM: translate$2,\n    y: translate$2,\n    yy: translate$2\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Croatian [hr]\n//! author : Danijel Grmec : https://github.com/cobaltsis\n\n/** @type {?} */\n\nvar hrLocale = {\n  abbr: 'hr',\n  months: 'Siječanj_Veljača_Ožujak_Travanj_Svibanj_Lipanj_Srpanj_Kolovoz_Rujan_Listopad_Studeni_Prosinac'.split('_'),\n  monthsShort: 'Sij_Velj_Ožu_Tra_Svi_Lip_Srp_Kol_Ruj_Lis_Stu_Pro'.split('_'),\n  weekdays: 'Nedjelja_Ponedjeljak_Utorak_Srijeda_Četvrtak_Petak_Subota'.split('_'),\n  weekdaysShort: 'Ned_Pon_Uto_Sri_Čet_Pet_Sub'.split('_'),\n  weekdaysMin: 'Ne_Po_Ut_Sr_Če_Pe_Su'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Danas u] LT',\n    nextDay: '[Sutra u] LT',\n    nextWeek: 'dddd [u] LT',\n    lastDay: '[Jučer u] LT',\n    lastWeek: '[Zadnji] dddd [u] LT',\n    sameElse: 'L'\n  },\n  invalidDate: 'Neispravan datum',\n  relativeTime: {\n    future: 'za %s',\n    past: '%s prije',\n    s: 'nekoliko sekundi',\n    ss: '%d sekundi',\n    m: 'minuta',\n    mm: '%d minuta',\n    h: 'sat',\n    hh: '%d sati',\n    d: 'dan',\n    dd: '%d dana',\n    M: 'mjesec',\n    MM: '%d mjeseci',\n    y: 'godina',\n    yy: '%d godina'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal: function ordinal(_num) {\n    /** @type {?} */\n    var num = Number(_num);\n    /** @type {?} */\n\n    var b = num % 10;\n    /** @type {?} */\n\n    var output = ~~(num % 100 / 10) === 1 ? '.' : b === 1 ? '.' : b === 2 ? '.' : b === 3 ? '.' : '.';\n    return num + output;\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n//! moment.js locale configuration\n//! locale : Indonesia [id]\n//! author : Romy Kusuma : https://github.com/rkusuma\n//! reference: https://github.com/moment/moment/blob/develop/locale/id.js\n\n/** @type {?} */\n\nvar idLocale = {\n  abbr: 'id',\n  months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),\n  weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n  weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n  weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n  longDateFormat: {\n    LT: 'HH.mm',\n    LTS: 'HH.mm.ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY [pukul] HH.mm',\n    LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'\n  },\n  meridiemParse: /pagi|siang|sore|malam/,\n\n  /**\n   * @param {?} hour\n   * @param {?} meridiem\n   * @return {?}\n   */\n  meridiemHour: function meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n\n    if (meridiem === 'pagi') {\n      return hour;\n    } else if (meridiem === 'siang') {\n      return hour >= 11 ? hour : hour + 12;\n    } else if (meridiem === 'sore' || meridiem === 'malam') {\n      return hour + 12;\n    }\n  },\n\n  /**\n   * @param {?} hours\n   * @param {?} minutes\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem: function meridiem(hours, minutes, isLower) {\n    if (hours < 11) {\n      return 'pagi';\n    } else if (hours < 15) {\n      return 'siang';\n    } else if (hours < 19) {\n      return 'sore';\n    } else {\n      return 'malam';\n    }\n  },\n  calendar: {\n    sameDay: '[Hari ini pukul] LT',\n    nextDay: '[Besok pukul] LT',\n    nextWeek: 'dddd [pukul] LT',\n    lastDay: '[Kemarin pukul] LT',\n    lastWeek: 'dddd [lalu pukul] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'dalam %s',\n    past: '%s yang lalu',\n    s: 'beberapa detik',\n    ss: '%d detik',\n    m: 'semenit',\n    mm: '%d menit',\n    h: 'sejam',\n    hh: '%d jam',\n    d: 'sehari',\n    dd: '%d hari',\n    M: 'sebulan',\n    MM: '%d bulan',\n    y: 'setahun',\n    yy: '%d tahun'\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Italian [it]\n//! author : Lorenzo : https://github.com/aliem\n//! author: Mattia Larentis: https://github.com/nostalgiaz\n\n/** @type {?} */\n\nvar itLocale = {\n  abbr: 'it',\n  months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n  monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n  weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n  weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n  weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Oggi alle] LT',\n    nextDay: '[Domani alle] LT',\n    nextWeek: 'dddd [alle] LT',\n    lastDay: '[Ieri alle] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek: function lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[la scorsa] dddd [alle] LT';\n\n        default:\n          return '[lo scorso] dddd [alle] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    future: function future(num) {\n      return (/^[0-9].+$/.test(num.toString(10)) ? 'tra' : 'in') + ' ' + num;\n    },\n    past: '%s fa',\n    s: 'alcuni secondi',\n    ss: '%d secondi',\n    m: 'un minuto',\n    mm: '%d minuti',\n    h: 'un\\'ora',\n    hh: '%d ore',\n    d: 'un giorno',\n    dd: '%d giorni',\n    M: 'un mese',\n    MM: '%d mesi',\n    y: 'un anno',\n    yy: '%d anni'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Japanese [ja]\n//! author : LI Long : https://github.com/baryon\n\n/** @type {?} */\n\nvar jaLocale = {\n  abbr: 'ja',\n  months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n  weekdaysShort: '日_月_火_水_木_金_土'.split('_'),\n  weekdaysMin: '日_月_火_水_木_金_土'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY/MM/DD',\n    LL: 'YYYY年M月D日',\n    LLL: 'YYYY年M月D日 HH:mm',\n    LLLL: 'YYYY年M月D日 HH:mm dddd',\n    l: 'YYYY/MM/DD',\n    ll: 'YYYY年M月D日',\n    lll: 'YYYY年M月D日 HH:mm',\n    llll: 'YYYY年M月D日 HH:mm dddd'\n  },\n  meridiemParse: /午前|午後/i,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM: function isPM(input) {\n    return input === '午後';\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem: function meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return '午前';\n    } else {\n      return '午後';\n    }\n  },\n  calendar: {\n    sameDay: '[今日] LT',\n    nextDay: '[明日] LT',\n    nextWeek: '[来週]dddd LT',\n    lastDay: '[昨日] LT',\n    lastWeek: '[前週]dddd LT',\n    sameElse: 'L'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}日/,\n\n  /**\n   * @param {?} num\n   * @param {?} period\n   * @return {?}\n   */\n  ordinal: function ordinal(num, period) {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + '日';\n\n      default:\n        return num.toString(10);\n    }\n  },\n  relativeTime: {\n    future: '%s後',\n    past: '%s前',\n    s: '数秒',\n    ss: '%d秒',\n    m: '1分',\n    mm: '%d分',\n    h: '1時間',\n    hh: '%d時間',\n    d: '1日',\n    dd: '%d日',\n    M: '1ヶ月',\n    MM: '%dヶ月',\n    y: '1年',\n    yy: '%d年'\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Georgian [ka]\n//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili\n//! author : Levan Tskipuri : https://github.com/tskipa\n\n/** @type {?} */\n\nvar kaLocale = {\n  abbr: 'ka',\n  months: {\n    format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_'),\n    standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_')\n  },\n  monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n  weekdays: {\n    standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\n    format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),\n    isFormat: /(წინა|შემდეგ)/\n  },\n  weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n  weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY h:mm A',\n    LLLL: 'dddd, D MMMM YYYY h:mm A'\n  },\n  calendar: {\n    sameDay: '[დღეს] LT[-ზე]',\n    nextDay: '[ხვალ] LT[-ზე]',\n    lastDay: '[გუშინ] LT[-ზე]',\n    nextWeek: '[შემდეგ] dddd LT[-ზე]',\n    lastWeek: '[წინა] dddd LT-ზე',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    /**\n     * @param {?} s\n     * @return {?}\n     */\n    future: function future(s) {\n      /** @type {?} */\n      var st = s.toString();\n      return /(წამი|წუთი|საათი|წელი)/.test(st) ? st.replace(/ი$/, 'ში') : st + 'ში';\n    },\n\n    /**\n     * @param {?} s\n     * @return {?}\n     */\n    past: function past(s) {\n      /** @type {?} */\n      var st = s.toString();\n\n      if (/(წამი|წუთი|საათი|დღე|თვე)/.test(st)) {\n        return st.replace(/(ი|ე)$/, 'ის წინ');\n      }\n\n      if (/წელი/.test(st)) {\n        return st.replace(/წელი$/, 'წლის წინ');\n      }\n    },\n    s: 'რამდენიმე წამი',\n    ss: '%d წამი',\n    m: 'წუთი',\n    mm: '%d წუთი',\n    h: 'საათი',\n    hh: '%d საათი',\n    d: 'დღე',\n    dd: '%d დღე',\n    M: 'თვე',\n    MM: '%d თვე',\n    y: 'წელი',\n    yy: '%d წელი'\n  },\n  dayOfMonthOrdinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n\n  /**\n   * @param {?} _num\n   * @param {?} _period\n   * @return {?}\n   */\n  ordinal: function ordinal(_num, _period) {\n    /** @type {?} */\n    var num = Number(_num);\n\n    if (num === 0) {\n      return num.toString();\n    }\n\n    if (num === 1) {\n      return num + '-ლი';\n    }\n\n    if (num < 20 || num <= 100 && num % 20 === 0 || num % 100 === 0) {\n      return 'მე-' + num;\n    }\n\n    return num + '-ე';\n  },\n  week: {\n    dow: 1,\n    doy: 4\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// ! moment.js locale configuration\n// ! locale : Kazakh [kk]\n// ! authors : Nurlan Rakhimzhanov : https://github.com/nurlan\n\n/** @type {?} */\n\nvar suffixes = {\n  0: '-ші',\n  1: '-ші',\n  2: '-ші',\n  3: '-ші',\n  4: '-ші',\n  5: '-ші',\n  6: '-шы',\n  7: '-ші',\n  8: '-ші',\n  9: '-шы',\n  10: '-шы',\n  20: '-шы',\n  30: '-шы',\n  40: '-шы',\n  50: '-ші',\n  60: '-шы',\n  70: '-ші',\n  80: '-ші',\n  90: '-шы',\n  100: '-ші'\n};\n/** @type {?} */\n\nvar kkLocale = {\n  abbr: 'kk',\n  months: 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),\n  monthsShort: 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),\n  weekdays: 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),\n  weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),\n  weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Бүгін сағат] LT',\n    nextDay: '[Ертең сағат] LT',\n    nextWeek: 'dddd [сағат] LT',\n    lastDay: '[Кеше сағат] LT',\n    lastWeek: '[Өткен аптаның] dddd [сағат] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s ішінде',\n    past: '%s бұрын',\n    s: 'бірнеше секунд',\n    ss: '%d секунд',\n    m: 'бір минут',\n    mm: '%d минут',\n    h: 'бір сағат',\n    hh: '%d сағат',\n    d: 'бір күн',\n    dd: '%d күн',\n    M: 'бір ай',\n    MM: '%d ай',\n    y: 'бір жыл',\n    yy: '%d жыл'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(ші|шы)/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal: function ordinal(_num) {\n    /** @type {?} */\n    var a = _num % 10;\n    /** @type {?} */\n\n    var b = _num >= 100 ? 100 : null;\n    return _num + (suffixes[_num] || suffixes[a] || suffixes[b]);\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-shorthand\n//! moment.js locale configuration\n//! locale : Korean [ko]\n//! author : Kyungwook, Park : https://github.com/kyungw00k\n//! author : Jeeeyul Lee <jeeeyul@gmail.com>\n\n/** @type {?} */\n\nvar koLocale = {\n  abbr: 'ko',\n  months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n  monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n  weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n  weekdaysShort: '일_월_화_수_목_금_토'.split('_'),\n  weekdaysMin: '일_월_화_수_목_금_토'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm',\n    LTS: 'A h:mm:ss',\n    L: 'YYYY.MM.DD',\n    LL: 'YYYY년 MMMM D일',\n    LLL: 'YYYY년 MMMM D일 A h:mm',\n    LLLL: 'YYYY년 MMMM D일 dddd A h:mm',\n    l: 'YYYY.MM.DD',\n    ll: 'YYYY년 MMMM D일',\n    lll: 'YYYY년 MMMM D일 A h:mm',\n    llll: 'YYYY년 MMMM D일 dddd A h:mm'\n  },\n  calendar: {\n    sameDay: '오늘 LT',\n    nextDay: '내일 LT',\n    nextWeek: 'dddd LT',\n    lastDay: '어제 LT',\n    lastWeek: '지난주 dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s 후',\n    past: '%s 전',\n    s: '몇 초',\n    ss: '%d초',\n    m: '1분',\n    mm: '%d분',\n    h: '한 시간',\n    hh: '%d시간',\n    d: '하루',\n    dd: '%d일',\n    M: '한 달',\n    MM: '%d달',\n    y: '일 년',\n    yy: '%d년'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(일|월|주)/,\n  ordinal:\n  /**\n  * @param {?} num\n  * @param {?} period\n  * @return {?}\n  */\n  function ordinal(num, period) {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + '일';\n\n      case 'M':\n        return num + '월';\n\n      case 'w':\n      case 'W':\n        return num + '주';\n\n      default:\n        return num.toString(10);\n    }\n  },\n  meridiemParse: /오전|오후/,\n  isPM:\n  /**\n  * @param {?} token\n  * @return {?}\n  */\n  function isPM(token) {\n    return token === '오후';\n  },\n  meridiem:\n  /**\n  * @param {?} hour\n  * @param {?} minute\n  * @param {?} isUpper\n  * @return {?}\n  */\n  function meridiem(hour, minute, isUpper) {\n    return hour < 12 ? '오전' : '오후';\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Lithuanian [lt]\n//! author : Stanislavas Guk : https://github.com/ixoster\n\n/** @type {?} */\n\nvar units = {\n  ss: 'sekundė_sekundžių_sekundes',\n  m: 'minutė_minutės_minutę',\n  mm: 'minutės_minučių_minutes',\n  h: 'valanda_valandos_valandą',\n  hh: 'valandos_valandų_valandas',\n  d: 'diena_dienos_dieną',\n  dd: 'dienos_dienų_dienas',\n  M: 'mėnuo_mėnesio_mėnesį',\n  MM: 'mėnesiai_mėnesių_mėnesius',\n  y: 'metai_metų_metus',\n  yy: 'metai_metų_metus'\n};\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\nfunction translateSeconds(num, withoutSuffix, key, isFuture) {\n  if (withoutSuffix) {\n    return 'kelios sekundės';\n  } else {\n    return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n  }\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\n\nfunction translateSingular(num, withoutSuffix, key, isFuture) {\n  return withoutSuffix ? forms(key)[0] : isFuture ? forms(key)[1] : forms(key)[2];\n}\n/**\n * @param {?} num\n * @return {?}\n */\n\n\nfunction special(num) {\n  return num % 10 === 0 || num > 10 && num < 20;\n}\n/**\n * @param {?} key\n * @return {?}\n */\n\n\nfunction forms(key) {\n  return (\n    /** @type {?} */\n    units[key].split('_')\n  );\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\n\nfunction translate$3(num, withoutSuffix, key, isFuture) {\n  /** @type {?} */\n  var result = num + ' ';\n\n  if (num === 1) {\n    return result + translateSingular(num, withoutSuffix, key[0], isFuture);\n  } else if (withoutSuffix) {\n    return result + (special(num) ? forms(key)[1] : forms(key)[0]);\n  } else {\n    if (isFuture) {\n      return result + forms(key)[1];\n    } else {\n      return result + (special(num) ? forms(key)[1] : forms(key)[2]);\n    }\n  }\n}\n/** @type {?} */\n\n\nvar ltLocale = {\n  abbr: 'lt',\n  months: {\n    format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),\n    standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),\n    isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/\n  },\n  monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n  weekdays: {\n    format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),\n    standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),\n    isFormat: /dddd HH:mm/\n  },\n  weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n  weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'YYYY [m.] MMMM D [d.]',\n    LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n    LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\n    l: 'YYYY-MM-DD',\n    ll: 'YYYY [m.] MMMM D [d.]',\n    lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n    llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'\n  },\n  calendar: {\n    sameDay: '[Šiandien] LT',\n    nextDay: '[Rytoj] LT',\n    nextWeek: 'dddd LT',\n    lastDay: '[Vakar] LT',\n    lastWeek: '[Praėjusį] dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'po %s',\n    past: 'prieš %s',\n    s: translateSeconds,\n    ss: translate$3,\n    m: translateSingular,\n    mm: translate$3,\n    h: translateSingular,\n    hh: translate$3,\n    d: translateSingular,\n    dd: translate$3,\n    M: translateSingular,\n    MM: translate$3,\n    y: translateSingular,\n    yy: translate$3\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\n\n  /**\n   * @param {?} num\n   * @return {?}\n   */\n  ordinal: function ordinal(num) {\n    return num + '-oji';\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Latvian [lv]\n//! author : Matiss Janis Aboltins : https://github.com/matissjanis\n\n/** @type {?} */\n\nvar lvLocale = {\n  abbr: 'lv',\n  months: 'Janvāris_Februāris_Marts_Aprīlis_Maijs_Jūnijs_Jūlijs_Augusts_Septembris_Oktobris_Novembris_Decembris'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_Mai_Jūn_Jūl_Aug_Sep_Okt_Nov_Dec'.split('_'),\n  weekdays: 'Svētdiena_Pirmdiena_Otrdiena_Trešdiena_Ceturtdiena_Piektdiena_Sestdiena'.split('_'),\n  weekdaysShort: 'Svētd_Pirmd_Otrd_Trešd_Ceturtd_Piektd_Sestd'.split('_'),\n  weekdaysMin: 'Sv_Pi_Ot_Tr_Ce_Pk_Se'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'pēc %s',\n    past: 'pirms %s',\n    s: 'dažām sekundēm',\n    ss: '%d sekundēm',\n    m: 'minūtes',\n    mm: '%d minūtēm',\n    h: 'stundas',\n    hh: '%d stundām',\n    d: 'dienas',\n    dd: '%d dienām',\n    M: 'mēneša',\n    MM: '%d mēnešiem',\n    y: 'gada',\n    yy: '%d gadiem'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n\n  /**\n   * @param {?} num\n   * @return {?}\n   */\n  ordinal: function ordinal(num) {\n    return num + '.';\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-shorthand\n//! moment.js locale configuration\n//! locale : Mongolian [mn]\n//! author : Javkhlantugs Nyamdorj : https://github.com/javkhaanj7\n\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\nfunction translate$4(num, withoutSuffix, key, isFuture) {\n  switch (key) {\n    case 's':\n      return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';\n\n    case 'ss':\n      return num + (withoutSuffix ? ' секунд' : ' секундын');\n\n    case 'm':\n    case 'mm':\n      return num + (withoutSuffix ? ' минут' : ' минутын');\n\n    case 'h':\n    case 'hh':\n      return num + (withoutSuffix ? ' цаг' : ' цагийн');\n\n    case 'd':\n    case 'dd':\n      return num + (withoutSuffix ? ' өдөр' : ' өдрийн');\n\n    case 'M':\n    case 'MM':\n      return num + (withoutSuffix ? ' сар' : ' сарын');\n\n    case 'y':\n    case 'yy':\n      return num + (withoutSuffix ? ' жил' : ' жилийн');\n\n    default:\n      return num.toString(10);\n  }\n}\n/** @type {?} */\n\n\nvar mnLocale = {\n  abbr: 'mn',\n  months: 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),\n  monthsShort: '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),\n  weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),\n  weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'YYYY оны MMMMын D',\n    LLL: 'YYYY оны MMMMын D HH:mm',\n    LLLL: 'dddd, YYYY оны MMMMын D HH:mm'\n  },\n  meridiemParse: /ҮӨ|ҮХ/i,\n  isPM:\n  /**\n  * @param {?} input\n  * @return {?}\n  */\n  function isPM(input) {\n    return input === 'ҮХ';\n  },\n  meridiem:\n  /**\n  * @param {?} hour\n  * @param {?} minute\n  * @param {?} isLower\n  * @return {?}\n  */\n  function meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ҮӨ';\n    } else {\n      return 'ҮХ';\n    }\n  },\n  calendar: {\n    sameDay: '[Өнөөдөр] LT',\n    nextDay: '[Маргааш] LT',\n    nextWeek: '[Ирэх] dddd LT',\n    lastDay: '[Өчигдөр] LT',\n    lastWeek: '[Өнгөрсөн] dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s дараа',\n    past: '%s өмнө',\n    s: translate$4,\n    ss: translate$4,\n    m: translate$4,\n    mm: translate$4,\n    h: translate$4,\n    hh: translate$4,\n    d: translate$4,\n    dd: translate$4,\n    M: translate$4,\n    MM: translate$4,\n    y: translate$4,\n    yy: translate$4\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2} өдөр/,\n  ordinal:\n  /**\n  * @param {?} num\n  * @param {?} period\n  * @return {?}\n  */\n  function ordinal(num, period) {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + ' өдөр';\n\n      default:\n        return num.toString(10);\n    }\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Norwegian Bokmål [nb]\n//! authors : Espen Hovlandsdal : https://github.com/rexxars\n//!           Sigurd Gartmann : https://github.com/sigurdga\n\n/** @type {?} */\n\nvar nbLocale = {\n  abbr: 'nb',\n  months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n  monthsShort: 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n  weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),\n  weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY [kl.] HH:mm',\n    LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm'\n  },\n  calendar: {\n    sameDay: '[i dag kl.] LT',\n    nextDay: '[i morgen kl.] LT',\n    nextWeek: 'dddd [kl.] LT',\n    lastDay: '[i går kl.] LT',\n    lastWeek: '[forrige] dddd [kl.] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: '%s siden',\n    s: 'noen sekunder',\n    ss: '%d sekunder',\n    m: 'ett minutt',\n    mm: '%d minutter',\n    h: 'en time',\n    hh: '%d timer',\n    d: 'en dag',\n    dd: '%d dager',\n    M: 'en måned',\n    MM: '%d måneder',\n    y: 'ett år',\n    yy: '%d år'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Dutch (Belgium) [nl-be]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\n\n/** @type {?} */\n\nvar monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\n/** @type {?} */\n\nvar monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n/** @type {?} */\n\nvar monthsParse$4 = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\n/** @type {?} */\n\nvar monthsRegex$4 = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n/** @type {?} */\n\nvar nlBeLocale = {\n  abbr: 'nl-be',\n  months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n\n  /**\n   * @param {?} date\n   * @param {?} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  monthsShort: function monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortWithDots;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShortWithoutDots[getMonth(date, isUTC)];\n    } else {\n      return monthsShortWithDots[getMonth(date, isUTC)];\n    }\n  },\n  monthsRegex: monthsRegex$4,\n  monthsShortRegex: monthsRegex$4,\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n  monthsParse: monthsParse$4,\n  longMonthsParse: monthsParse$4,\n  shortMonthsParse: monthsParse$4,\n  weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n  weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n  weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[vandaag om] LT',\n    nextDay: '[morgen om] LT',\n    nextWeek: 'dddd [om] LT',\n    lastDay: '[gisteren om] LT',\n    lastWeek: '[afgelopen] dddd [om] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'over %s',\n    past: '%s geleden',\n    s: 'een paar seconden',\n    ss: '%d seconden',\n    m: 'één minuut',\n    mm: '%d minuten',\n    h: 'één uur',\n    hh: '%d uur',\n    d: 'één dag',\n    dd: '%d dagen',\n    M: 'één maand',\n    MM: '%d maanden',\n    y: 'één jaar',\n    yy: '%d jaar'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal: function ordinal(_num) {\n    /** @type {?} */\n    var num = Number(_num);\n    return num + (num === 1 || num === 8 || num >= 20 ? 'ste' : 'de');\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Dutch [nl]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\n\n/** @type {?} */\n\nvar monthsShortWithDots$1 = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\n/** @type {?} */\n\nvar monthsShortWithoutDots$1 = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n/** @type {?} */\n\nvar monthsParse$5 = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\n/** @type {?} */\n\nvar monthsRegex$5 = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n/** @type {?} */\n\nvar nlLocale = {\n  abbr: 'nl',\n  months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n\n  /**\n   * @param {?} date\n   * @param {?} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  monthsShort: function monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortWithDots$1;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShortWithoutDots$1[getMonth(date, isUTC)];\n    } else {\n      return monthsShortWithDots$1[getMonth(date, isUTC)];\n    }\n  },\n  monthsRegex: monthsRegex$5,\n  monthsShortRegex: monthsRegex$5,\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n  monthsParse: monthsParse$5,\n  longMonthsParse: monthsParse$5,\n  shortMonthsParse: monthsParse$5,\n  weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n  weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n  weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD-MM-YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[vandaag om] LT',\n    nextDay: '[morgen om] LT',\n    nextWeek: 'dddd [om] LT',\n    lastDay: '[gisteren om] LT',\n    lastWeek: '[afgelopen] dddd [om] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'over %s',\n    past: '%s geleden',\n    s: 'een paar seconden',\n    ss: '%d seconden',\n    m: 'één minuut',\n    mm: '%d minuten',\n    h: 'één uur',\n    hh: '%d uur',\n    d: 'één dag',\n    dd: '%d dagen',\n    M: 'één maand',\n    MM: '%d maanden',\n    y: 'één jaar',\n    yy: '%d jaar'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal: function ordinal(_num) {\n    /** @type {?} */\n    var num = Number(_num);\n    return num + (num === 1 || num === 8 || num >= 20 ? 'ste' : 'de');\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Polish [pl]\n//! author : Rafal Hirsz : https://github.com/evoL\n\n/** @type {?} */\n\nvar monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');\n/** @type {?} */\n\nvar monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\n/**\n * @param {?} num\n * @return {?}\n */\n\nfunction plural$1(num) {\n  return num % 10 < 5 && num % 10 > 1 && ~~(num / 10) % 10 !== 1;\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @return {?}\n */\n\n\nfunction translate$5(num, withoutSuffix, key) {\n  /** @type {?} */\n  var result = num + ' ';\n\n  switch (key) {\n    case 'ss':\n      return result + (plural$1(num) ? 'sekundy' : 'sekund');\n\n    case 'm':\n      return withoutSuffix ? 'minuta' : 'minutę';\n\n    case 'mm':\n      return result + (plural$1(num) ? 'minuty' : 'minut');\n\n    case 'h':\n      return withoutSuffix ? 'godzina' : 'godzinę';\n\n    case 'hh':\n      return result + (plural$1(num) ? 'godziny' : 'godzin');\n\n    case 'MM':\n      return result + (plural$1(num) ? 'miesiące' : 'miesięcy');\n\n    case 'yy':\n      return result + (plural$1(num) ? 'lata' : 'lat');\n  }\n}\n/** @type {?} */\n\n\nvar plLocale = {\n  abbr: 'pl',\n\n  /**\n   * @param {?} date\n   * @param {?} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  months: function months(date, format, isUTC) {\n    if (!date) {\n      return monthsNominative;\n    } else if (format === '') {\n      // Hack: if format empty we know this is used to generate\n      // RegExp by moment. Give then back both valid forms of months\n      // in RegExp ready format.\n      return '(' + monthsSubjective[getMonth(date, isUTC)] + '|' + monthsNominative[getMonth(date, isUTC)] + ')';\n    } else if (/D MMMM/.test(format)) {\n      return monthsSubjective[getMonth(date, isUTC)];\n    } else {\n      return monthsNominative[getMonth(date, isUTC)];\n    }\n  },\n  monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n  weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n  weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n  weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Dziś o] LT',\n    nextDay: '[Jutro o] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek: function nextWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[W niedzielę o] LT';\n\n        case 2:\n          return '[We wtorek o] LT';\n\n        case 3:\n          return '[W środę o] LT';\n\n        case 5:\n          return '[W piątek o] LT';\n\n        case 6:\n          return '[W sobotę o] LT';\n\n        default:\n          return '[W] dddd [o] LT';\n      }\n    },\n    lastDay: '[Wczoraj o] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek: function lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[W zeszłą niedzielę o] LT';\n\n        case 3:\n          return '[W zeszłą środę o] LT';\n\n        case 4:\n          return '[W zeszłą czwartek o] LT';\n\n        case 5:\n          return '[W zeszłą piątek o] LT';\n\n        case 6:\n          return '[W zeszłą sobotę o] LT';\n\n        default:\n          return '[W zeszły] dddd [o] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: '%s temu',\n    s: 'kilka sekund',\n    ss: translate$5,\n    m: translate$5,\n    mm: translate$5,\n    h: translate$5,\n    hh: translate$5,\n    d: '1 dzień',\n    dd: '%d dni',\n    M: 'miesiąc',\n    MM: translate$5,\n    y: 'rok',\n    yy: translate$5\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Portuguese (Brazil) [pt-br]\n//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira\n\n/** @type {?} */\n\nvar ptBrLocale = {\n  abbr: 'pt-br',\n  months: 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),\n  monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n  weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n  weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n  weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'\n  },\n  calendar: {\n    sameDay: '[Hoje às] LT',\n    nextDay: '[Amanhã às] LT',\n    nextWeek: 'dddd [às] LT',\n    lastDay: '[Ontem às] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek: function lastWeek(date) {\n      return getDayOfWeek(date) === 0 || getDayOfWeek(date) === 6 ? '[Último] dddd [às] LT' : // Saturday + Sunday\n      '[Última] dddd [às] LT'; // Monday - Friday\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'em %s',\n    past: '%s atrás',\n    s: 'poucos segundos',\n    ss: '%d segundos',\n    m: 'um minuto',\n    mm: '%d minutos',\n    h: 'uma hora',\n    hh: '%d horas',\n    d: 'um dia',\n    dd: '%d dias',\n    M: 'um mês',\n    MM: '%d meses',\n    y: 'um ano',\n    yy: '%d anos'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº'\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// ! moment.js locale configuration\n// ! locale : Romanian [ro]\n//! author : Vlad Gurdiga : https://github.com/gurdiga\n//! author : Valentin Agachi : https://github.com/avaly\n// ! author : Earle white: https://github.com/5earle\n\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @return {?}\n */\n\nfunction relativeTimeWithPlural(num, withoutSuffix, key) {\n  /** @type {?} */\n  var format = {\n    ss: 'secunde',\n    mm: 'minute',\n    hh: 'ore',\n    dd: 'zile',\n    MM: 'luni',\n    yy: 'ani'\n  };\n  /** @type {?} */\n\n  var separator = ' ';\n\n  if (num % 100 >= 20 || num >= 100 && num % 100 === 0) {\n    separator = ' de ';\n  }\n\n  return num + separator + format[key];\n}\n/** @type {?} */\n\n\nvar roLocale = {\n  abbr: 'ro',\n  months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n  monthsShort: 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n  weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n  weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY H:mm',\n    LLLL: 'dddd, D MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[azi la] LT',\n    nextDay: '[mâine la] LT',\n    nextWeek: 'dddd [la] LT',\n    lastDay: '[ieri la] LT',\n    lastWeek: '[fosta] dddd [la] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'peste %s',\n    past: '%s în urmă',\n    s: 'câteva secunde',\n    ss: relativeTimeWithPlural,\n    m: 'un minut',\n    mm: relativeTimeWithPlural,\n    h: 'o oră',\n    hh: relativeTimeWithPlural,\n    d: 'o zi',\n    dd: relativeTimeWithPlural,\n    M: 'o lună',\n    MM: relativeTimeWithPlural,\n    y: 'un an',\n    yy: relativeTimeWithPlural\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Russian [ru]\n//! author : Viktorminator : https://github.com/Viktorminator\n//! Author : Menelion Elensúle : https://github.com/Oire\n//! author : Коренберг Марк : https://github.com/socketpair\n\n/**\n * @param {?} word\n * @param {?} num\n * @return {?}\n */\n\nfunction plural$2(word, num) {\n  /** @type {?} */\n  var forms = word.split('_');\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @return {?}\n */\n\n\nfunction relativeTimeWithPlural$1(num, withoutSuffix, key) {\n  /** @type {?} */\n  var format = {\n    ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n    mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n    hh: 'час_часа_часов',\n    dd: 'день_дня_дней',\n    MM: 'месяц_месяца_месяцев',\n    yy: 'год_года_лет'\n  };\n\n  if (key === 'm') {\n    return withoutSuffix ? 'минута' : 'минуту';\n  }\n\n  return num + ' ' + plural$2(format[key], +num);\n}\n/** @type {?} */\n\n\nvar monthsParse$6 = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i]; // http://new.gramota.ru/spravka/rules/139-prop : § 103\n// Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\n\n/** @type {?} */\n\nvar ruLocale = {\n  abbr: 'ru',\n  months: {\n    format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),\n    standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')\n  },\n  monthsShort: {\n    // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?\n    format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),\n    standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')\n  },\n  weekdays: {\n    standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n    format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),\n    isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/\n  },\n  weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n  weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n  monthsParse: monthsParse$6,\n  longMonthsParse: monthsParse$6,\n  shortMonthsParse: monthsParse$6,\n  // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n  monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n  // копия предыдущего\n  monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n  // полные названия с падежами\n  monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n  // Выражение, которое соотвествует только сокращённым формам\n  monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY г.',\n    LLL: 'D MMMM YYYY г., H:mm',\n    LLLL: 'dddd, D MMMM YYYY г., H:mm'\n  },\n  calendar: {\n    sameDay: '[Сегодня в] LT',\n    nextDay: '[Завтра в] LT',\n    lastDay: '[Вчера в] LT',\n\n    /**\n     * @param {?} date\n     * @param {?} now\n     * @return {?}\n     */\n    nextWeek: function nextWeek(date, now) {\n      if (getWeek(now) !== getWeek(date)) {\n        switch (getDayOfWeek(date)) {\n          case 0:\n            return '[В следующее] dddd [в] LT';\n\n          case 1:\n          case 2:\n          case 4:\n            return '[В следующий] dddd [в] LT';\n\n          case 3:\n          case 5:\n          case 6:\n            return '[В следующую] dddd [в] LT';\n        }\n      } else {\n        if (getDayOfWeek(date) === 2) {\n          return '[Во] dddd [в] LT';\n        } else {\n          return '[В] dddd [в] LT';\n        }\n      }\n    },\n\n    /**\n     * @param {?} date\n     * @param {?} now\n     * @return {?}\n     */\n    lastWeek: function lastWeek(date, now) {\n      if (getWeek(now) !== getWeek(date)) {\n        switch (getDayOfWeek(date)) {\n          case 0:\n            return '[В прошлое] dddd [в] LT';\n\n          case 1:\n          case 2:\n          case 4:\n            return '[В прошлый] dddd [в] LT';\n\n          case 3:\n          case 5:\n          case 6:\n            return '[В прошлую] dddd [в] LT';\n        }\n      } else {\n        if (getDayOfWeek(date) === 2) {\n          return '[Во] dddd [в] LT';\n        } else {\n          return '[В] dddd [в] LT';\n        }\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'через %s',\n    past: '%s назад',\n    s: 'несколько секунд',\n    ss: relativeTimeWithPlural$1,\n    m: relativeTimeWithPlural$1,\n    mm: relativeTimeWithPlural$1,\n    h: 'час',\n    hh: relativeTimeWithPlural$1,\n    d: 'день',\n    dd: relativeTimeWithPlural$1,\n    M: 'месяц',\n    MM: relativeTimeWithPlural$1,\n    y: 'год',\n    yy: relativeTimeWithPlural$1\n  },\n  meridiemParse: /ночи|утра|дня|вечера/i,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM: function isPM(input) {\n    return /^(дня|вечера)$/.test(input);\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem: function meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'ночи';\n    } else if (hour < 12) {\n      return 'утра';\n    } else if (hour < 17) {\n      return 'дня';\n    } else {\n      return 'вечера';\n    }\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n\n  /**\n   * @param {?} _num\n   * @param {?} period\n   * @return {?}\n   */\n  ordinal: function ordinal(_num, period) {\n    /** @type {?} */\n    var num = Number(_num);\n\n    switch (period) {\n      case 'M':\n      case 'd':\n      case 'DDD':\n        return num + '-й';\n\n      case 'D':\n        return num + '-го';\n\n      case 'w':\n      case 'W':\n        return num + '-я';\n\n      default:\n        return num.toString(10);\n    }\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Slovak [sk]\n//! author : Jozef Pažin : https://github.com/atiris\n\n/** @type {?} */\n\nvar months$2 = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_');\n/** @type {?} */\n\nvar monthsShort$6 = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\n/**\n * @param {?} num\n * @return {?}\n */\n\nfunction plural$3(num) {\n  return num > 1 && num < 5 && ~~(num / 10) !== 1;\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\n\nfunction translate$6(num, withoutSuffix, key, isFuture) {\n  /** @type {?} */\n  var result = num + ' ';\n\n  switch (key) {\n    case 's':\n      // a few seconds / in a few seconds / a few seconds ago\n      return withoutSuffix || isFuture ? 'pár sekúnd' : 'pár sekundami';\n\n    case 'ss':\n      // 9 seconds / in 9 seconds / 9 seconds ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$3(num) ? 'sekundy' : 'sekúnd');\n      } else {\n        return result + 'sekundami';\n      }\n\n    // break;\n\n    case 'm':\n      // a minute / in a minute / a minute ago\n      return withoutSuffix ? 'minúta' : isFuture ? 'minútu' : 'minútou';\n\n    case 'mm':\n      // 9 minutes / in 9 minutes / 9 minutes ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$3(num) ? 'minúty' : 'minút');\n      } else {\n        return result + 'minútami';\n      }\n\n    // break;\n\n    case 'h':\n      // an hour / in an hour / an hour ago\n      return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n\n    case 'hh':\n      // 9 hours / in 9 hours / 9 hours ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$3(num) ? 'hodiny' : 'hodín');\n      } else {\n        return result + 'hodinami';\n      }\n\n    // break;\n\n    case 'd':\n      // a day / in a day / a day ago\n      return withoutSuffix || isFuture ? 'deň' : 'dňom';\n\n    case 'dd':\n      // 9 days / in 9 days / 9 days ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$3(num) ? 'dni' : 'dní');\n      } else {\n        return result + 'dňami';\n      }\n\n    // break;\n\n    case 'M':\n      // a month / in a month / a month ago\n      return withoutSuffix || isFuture ? 'mesiac' : 'mesiacom';\n\n    case 'MM':\n      // 9 months / in 9 months / 9 months ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$3(num) ? 'mesiace' : 'mesiacov');\n      } else {\n        return result + 'mesiacmi';\n      }\n\n    // break;\n\n    case 'y':\n      // a year / in a year / a year ago\n      return withoutSuffix || isFuture ? 'rok' : 'rokom';\n\n    case 'yy':\n      // 9 years / in 9 years / 9 years ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$3(num) ? 'roky' : 'rokov');\n      } else {\n        return result + 'rokmi';\n      }\n\n    // break;\n  }\n}\n/** @type {?} */\n\n\nvar skLocale = {\n  abbr: 'sk',\n  months: months$2,\n  monthsShort: monthsShort$6,\n  weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n  weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),\n  weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd D. MMMM YYYY H:mm',\n    l: 'D. M. YYYY'\n  },\n  calendar: {\n    sameDay: '[dnes o] LT',\n    nextDay: '[zajtra o] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek: function nextWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v nedeľu o] LT';\n\n        case 1:\n        case 2:\n          return '[v] dddd [o] LT';\n\n        case 3:\n          return '[v stredu o] LT';\n\n        case 4:\n          return '[vo štvrtok o] LT';\n\n        case 5:\n          return '[v piatok o] LT';\n\n        case 6:\n          return '[v sobotu o] LT';\n      }\n    },\n    lastDay: '[včera o] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek: function lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[minulú nedeľu o] LT';\n\n        case 1:\n        case 2:\n          return '[minulý] dddd [o] LT';\n\n        case 3:\n          return '[minulú stredu o] LT';\n\n        case 4:\n        case 5:\n          return '[minulý] dddd [o] LT';\n\n        case 6:\n          return '[minulú sobotu o] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'o %s',\n    past: 'pred %s',\n    s: translate$6,\n    ss: translate$6,\n    m: translate$6,\n    mm: translate$6,\n    h: translate$6,\n    hh: translate$6,\n    d: translate$6,\n    dd: translate$6,\n    M: translate$6,\n    MM: translate$6,\n    y: translate$6,\n    yy: translate$6\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Slovenian [sl]\n//! author : mihan : https://github.com/mihan\n\n/**\n * @param {?} number\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\nfunction processRelativeTime$2(number, withoutSuffix, key, isFuture) {\n  /** @type {?} */\n  var result = number + ' ';\n\n  switch (key) {\n    case 's':\n      return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\n\n    case 'ss':\n      if (number === 1) {\n        result += withoutSuffix ? 'sekundo' : 'sekundi';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\n      } else {\n        result += withoutSuffix || isFuture ? 'sekund' : 'sekund';\n      }\n\n      return result;\n\n    case 'm':\n      return withoutSuffix ? 'ena minuta' : 'eno minuto';\n\n    case 'mm':\n      if (number === 1) {\n        result += withoutSuffix ? 'minuta' : 'minuto';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n      } else {\n        result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n      }\n\n      return result;\n\n    case 'h':\n      return withoutSuffix ? 'ena ura' : 'eno uro';\n\n    case 'hh':\n      if (number === 1) {\n        result += withoutSuffix ? 'ura' : 'uro';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'uri' : 'urama';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'ure' : 'urami';\n      } else {\n        result += withoutSuffix || isFuture ? 'ur' : 'urami';\n      }\n\n      return result;\n\n    case 'd':\n      return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n\n    case 'dd':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n      } else {\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n      }\n\n      return result;\n\n    case 'M':\n      return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n\n    case 'MM':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n      } else {\n        result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n      }\n\n      return result;\n\n    case 'y':\n      return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n\n    case 'yy':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'leto' : 'letom';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'leta' : 'leti';\n      } else {\n        result += withoutSuffix || isFuture ? 'let' : 'leti';\n      }\n\n      return result;\n  }\n}\n/** @type {?} */\n\n\nvar slLocale = {\n  abbr: 'sl',\n  months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n  monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n  weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n  weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[danes ob] LT',\n    nextDay: '[jutri ob] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek: function nextWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v] [nedeljo] [ob] LT';\n\n        case 3:\n          return '[v] [sredo] [ob] LT';\n\n        case 6:\n          return '[v] [soboto] [ob] LT';\n\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[v] dddd [ob] LT';\n      }\n    },\n    lastDay: '[včeraj ob] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek: function lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[prejšnjo] [nedeljo] [ob] LT';\n\n        case 3:\n          return '[prejšnjo] [sredo] [ob] LT';\n\n        case 6:\n          return '[prejšnjo] [soboto] [ob] LT';\n\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[prejšnji] dddd [ob] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'čez %s',\n    past: 'pred %s',\n    s: processRelativeTime$2,\n    ss: processRelativeTime$2,\n    m: processRelativeTime$2,\n    mm: processRelativeTime$2,\n    h: processRelativeTime$2,\n    hh: processRelativeTime$2,\n    d: processRelativeTime$2,\n    dd: processRelativeTime$2,\n    M: processRelativeTime$2,\n    MM: processRelativeTime$2,\n    y: processRelativeTime$2,\n    yy: processRelativeTime$2\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Albanian [sq]\n//! author : Agon Cecelia : https://github.com/agoncecelia\n\n/** @type {?} */\n\nvar sqLocale = {\n  abbr: 'sq',\n  months: 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),\n  monthsShort: 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),\n  weekdays: 'E Dielë_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),\n  weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),\n  weekdaysMin: 'Di_He_Ma_Me_En_Pr_Sh'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Sot në] LT',\n    nextDay: '[Nesër në] LT',\n    nextWeek: 'dddd [në] LT',\n    lastDay: '[Dje në] LT',\n    lastWeek: 'dddd [e kaluar në] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'në %s',\n    past: 'para %sve',\n    s: 'disa sekonda',\n    ss: '%d sekonda',\n    m: 'një minut',\n    mm: '%d minuta',\n    h: 'një orë',\n    hh: '%d orë',\n    d: 'një ditë',\n    dd: '%d ditë',\n    M: 'një muaj',\n    MM: '%d muaj',\n    y: 'një vit',\n    yy: '%d vite'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  // need clarification\n  ordinal: '%d.',\n  // need clarification\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Swedish [sv]\n//! author : Jens Alm : https://github.com/ulmus\n\n/** @type {?} */\n\nvar svLocale = {\n  abbr: 'sv',\n  months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n  monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n  weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n  weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n  weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY [kl.] HH:mm',\n    LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Idag] LT',\n    nextDay: '[Imorgon] LT',\n    lastDay: '[Igår] LT',\n    nextWeek: '[På] dddd LT',\n    lastWeek: '[I] dddd[s] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: 'för %s sedan',\n    s: 'några sekunder',\n    ss: '%d sekunder',\n    m: 'en minut',\n    mm: '%d minuter',\n    h: 'en timme',\n    hh: '%d timmar',\n    d: 'en dag',\n    dd: '%d dagar',\n    M: 'en månad',\n    MM: '%d månader',\n    y: 'ett år',\n    yy: '%d år'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(e|a)/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal: function ordinal(_num) {\n    /** @type {?} */\n    var num = Number(_num);\n    /** @type {?} */\n\n    var b = num % 10;\n    /** @type {?} */\n\n    var output = ~~(num % 100 / 10) === 1 ? 'e' : b === 1 ? 'a' : b === 2 ? 'a' : b === 3 ? 'e' : 'e';\n    return num + output;\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// moment.js locale configuration\n// locale : Thai [th]\n// author : Watcharapol Sanitwong : https://github.com/tumit\n\n/** @type {?} */\n\nvar thLocale = {\n  abbr: 'th',\n  months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n  monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n  weekdaysShort: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  // yes, three characters difference\n  weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY เวลา H:mm',\n    LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'\n  },\n  meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM: function isPM(input) {\n    return input === 'หลังเที่ยง';\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem: function meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ก่อนเที่ยง';\n    } else {\n      return 'หลังเที่ยง';\n    }\n  },\n  calendar: {\n    sameDay: '[วันนี้ เวลา] LT',\n    nextDay: '[พรุ่งนี้ เวลา] LT',\n    nextWeek: 'dddd[หน้า เวลา] LT',\n    lastDay: '[เมื่อวานนี้ เวลา] LT',\n    lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'อีก %s',\n    past: '%sที่แล้ว',\n    s: 'ไม่กี่วินาที',\n    ss: '%d วินาที',\n    m: '1 นาที',\n    mm: '%d นาที',\n    h: '1 ชั่วโมง',\n    hh: '%d ชั่วโมง',\n    d: '1 วัน',\n    dd: '%d วัน',\n    M: '1 เดือน',\n    MM: '%d เดือน',\n    y: '1 ปี',\n    yy: '%d ปี'\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// moment.js locale configuration\n// locale : Thai-Buddhist Era [th-be]\n// author : Watcharapol Sanitwong : https://github.com/tumit\n\n/** @type {?} */\n\nvar thBeLocale = {\n  abbr: 'th-be',\n  months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n  monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n  weekdaysShort: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY เวลา H:mm',\n    LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'\n  },\n  meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM: function isPM(input) {\n    return input === 'หลังเที่ยง';\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem: function meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ก่อนเที่ยง';\n    } else {\n      return 'หลังเที่ยง';\n    }\n  },\n  calendar: {\n    sameDay: '[วันนี้ เวลา] LT',\n    nextDay: '[พรุ่งนี้ เวลา] LT',\n    nextWeek: 'dddd[หน้า เวลา] LT',\n    lastDay: '[เมื่อวานนี้ เวลา] LT',\n    lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'อีก %s',\n    past: '%sที่แล้ว',\n    s: 'ไม่กี่วินาที',\n    ss: '%d วินาที',\n    m: '1 นาที',\n    mm: '%d นาที',\n    h: '1 ชั่วโมง',\n    hh: '%d ชั่วโมง',\n    d: '1 วัน',\n    dd: '%d วัน',\n    M: '1 เดือน',\n    MM: '%d เดือน',\n    y: '1 ปี',\n    yy: '%d ปี'\n  },\n\n  /**\n   * @param {?} str\n   * @param {?=} format\n   * @return {?}\n   */\n  preparse: function preparse(str, format) {\n    /** @type {?} */\n    var _format = thBeLocale.longDateFormat[format] ? thBeLocale.longDateFormat[format] : format; // endsWith('YYYY')\n\n\n    if (_format.indexOf('YYYY', _format.length - 'YYYY'.length) !== -1) {\n      /** @type {?} */\n      var ddMM = str.substr(0, str.length - 4);\n      /** @type {?} */\n\n      var yyyy = parseInt(str.substr(str.length - 4), 10) - 543;\n      return ddMM + yyyy;\n    }\n\n    return str;\n  },\n\n  /**\n   * @param {?} date\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  getFullYear: function getFullYear(date) {\n    var isUTC = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return 543 + (isUTC ? date.getUTCFullYear() : date.getFullYear());\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Turkish [tr]\n//! authors : Erhan Gundogan : https://github.com/erhangundogan,\n//!           Burak Yiğit Kaya: https://github.com/BYK\n\n/** @type {?} */\n\nvar suffixes$1 = {\n  1: '\\'inci',\n  5: '\\'inci',\n  8: '\\'inci',\n  70: '\\'inci',\n  80: '\\'inci',\n  2: '\\'nci',\n  7: '\\'nci',\n  20: '\\'nci',\n  50: '\\'nci',\n  3: '\\'üncü',\n  4: '\\'üncü',\n  100: '\\'üncü',\n  6: '\\'ncı',\n  9: '\\'uncu',\n  10: '\\'uncu',\n  30: '\\'uncu',\n  60: '\\'ıncı',\n  90: '\\'ıncı'\n};\n/** @type {?} */\n\nvar trLocale = {\n  abbr: 'tr',\n  months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),\n  monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n  weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),\n  weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),\n  weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[bugün saat] LT',\n    nextDay: '[yarın saat] LT',\n    nextWeek: '[gelecek] dddd [saat] LT',\n    lastDay: '[dün] LT',\n    lastWeek: '[geçen] dddd [saat] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s sonra',\n    past: '%s önce',\n    s: 'birkaç saniye',\n    ss: '%d saniye',\n    m: 'bir dakika',\n    mm: '%d dakika',\n    h: 'bir saat',\n    hh: '%d saat',\n    d: 'bir gün',\n    dd: '%d gün',\n    M: 'bir ay',\n    MM: '%d ay',\n    y: 'bir yıl',\n    yy: '%d yıl'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal: function ordinal(_num) {\n    /** @type {?} */\n    var num = Number(_num);\n\n    if (num === 0) {\n      // special case for zero\n      return num + '\\'ıncı';\n    }\n    /** @type {?} */\n\n\n    var a = num % 10;\n    /** @type {?} */\n\n    var b = num % 100 - a;\n    /** @type {?} */\n\n    var c = num >= 100 ? 100 : null;\n    return num + (suffixes$1[a] || suffixes$1[b] || suffixes$1[c]);\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Ukrainian [uk]\n//! author : zemlanin : https://github.com/zemlanin\n//! Author : Menelion Elensúle : https://github.com/Oire\n\n/**\n * @param {?} word\n * @param {?} num\n * @return {?}\n */\n\nfunction plural$4(word, num) {\n  /** @type {?} */\n  var forms = word.split('_');\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @return {?}\n */\n\n\nfunction relativeTimeWithPlural$2(num, withoutSuffix, key) {\n  /** @type {?} */\n  var format = {\n    ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n    mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n    hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n    dd: 'день_дні_днів',\n    MM: 'місяць_місяці_місяців',\n    yy: 'рік_роки_років'\n  };\n\n  if (key === 'm') {\n    return withoutSuffix ? 'хвилина' : 'хвилину';\n  }\n\n  if (key === 'h') {\n    return withoutSuffix ? 'година' : 'годину';\n  }\n\n  return num + ' ' + plural$4(format[key], +num);\n}\n/**\n * @param {?} date\n * @param {?} format\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction weekdaysCaseReplace(date, format, isUTC) {\n  /** @type {?} */\n  var weekdays = {\n    nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n    accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n    genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n  };\n\n  if (!date) {\n    return weekdays.nominative;\n  }\n  /** @type {?} */\n\n\n  var nounCase = /(\\[[ВвУу]\\]) ?dddd/.test(format) ? 'accusative' : /\\[?(?:минулої|наступної)? ?\\] ?dddd/.test(format) ? 'genitive' : 'nominative';\n  return weekdays[nounCase][getDayOfWeek(date, isUTC)];\n}\n/**\n * @param {?} str\n * @return {?}\n */\n\n\nfunction processHoursFunction(str) {\n  return (\n    /**\n    * @param {?} date\n    * @return {?}\n    */\n    function (date) {\n      return str + 'о' + (getHours(date) === 11 ? 'б' : '') + '] LT';\n    }\n  );\n}\n/** @type {?} */\n\n\nvar ukLocale = {\n  abbr: 'uk',\n  months: {\n    format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),\n    standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')\n  },\n  monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n  weekdays: weekdaysCaseReplace,\n  weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY р.',\n    LLL: 'D MMMM YYYY р., HH:mm',\n    LLLL: 'dddd, D MMMM YYYY р., HH:mm'\n  },\n  calendar: {\n    sameDay: processHoursFunction('[Сьогодні '),\n    nextDay: processHoursFunction('[Завтра '),\n    lastDay: processHoursFunction('[Вчора '),\n    nextWeek: processHoursFunction('[У] dddd ['),\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek: function lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n        case 3:\n        case 5:\n        case 6:\n          return processHoursFunction('[Минулої] dddd [')(date);\n\n        case 1:\n        case 2:\n        case 4:\n          return processHoursFunction('[Минулого] dddd [')(date);\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'за %s',\n    past: '%s тому',\n    s: 'декілька секунд',\n    ss: relativeTimeWithPlural$2,\n    m: relativeTimeWithPlural$2,\n    mm: relativeTimeWithPlural$2,\n    h: 'годину',\n    hh: relativeTimeWithPlural$2,\n    d: 'день',\n    dd: relativeTimeWithPlural$2,\n    M: 'місяць',\n    MM: relativeTimeWithPlural$2,\n    y: 'рік',\n    yy: relativeTimeWithPlural$2\n  },\n  // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n  meridiemParse: /ночі|ранку|дня|вечора/,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM: function isPM(input) {\n    return /^(дня|вечора)$/.test(input);\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem: function meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'ночі';\n    } else if (hour < 12) {\n      return 'ранку';\n    } else if (hour < 17) {\n      return 'дня';\n    } else {\n      return 'вечора';\n    }\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n\n  /**\n   * @param {?} _num\n   * @param {?} period\n   * @return {?}\n   */\n  ordinal: function ordinal(_num, period) {\n    /** @type {?} */\n    var num = Number(_num);\n\n    switch (period) {\n      case 'M':\n      case 'd':\n      case 'DDD':\n      case 'w':\n      case 'W':\n        return num + '-й';\n\n      case 'D':\n        return num + '-го';\n\n      default:\n        return num.toString();\n    }\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Việt Nam [vi]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\n\n/** @type {?} */\n\nvar viLocale = {\n  abbr: 'vi',\n  months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),\n  monthsShort: 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),\n  weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n  weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n  weekdaysParseExact: true,\n  meridiemParse: /sa|ch/i,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM: function isPM(input) {\n    return /^ch$/i.test(input);\n  },\n\n  /**\n   * @param {?} hours\n   * @param {?} minutes\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem: function meridiem(hours, minutes, isLower) {\n    if (hours < 12) {\n      return isLower ? 'sa' : 'SA';\n    } else {\n      return isLower ? 'ch' : 'CH';\n    }\n  },\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM [năm] YYYY',\n    LLL: 'D MMMM [năm] YYYY HH:mm',\n    LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',\n    l: 'DD/M/YYYY',\n    ll: 'D MMM YYYY',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd, D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Hôm nay lúc] LT',\n    nextDay: '[Ngày mai lúc] LT',\n    nextWeek: 'dddd [tuần tới lúc] LT',\n    lastDay: '[Hôm qua lúc] LT',\n    lastWeek: 'dddd [tuần trước lúc] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s tới',\n    past: '%s trước',\n    s: 'vài giây',\n    ss: '%d giây',\n    m: 'một phút',\n    mm: '%d phút',\n    h: 'một giờ',\n    hh: '%d giờ',\n    d: 'một ngày',\n    dd: '%d ngày',\n    M: 'một tháng',\n    MM: '%d tháng',\n    y: 'một năm',\n    yy: '%d năm'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal: function ordinal(_num) {\n    return '' + _num;\n  },\n  week: {\n    dow: 1,\n    // Thứ Hai là ngày đầu tuần.\n    doy: 4 // Tuần chứa ngày 4 tháng 1 là tuần đầu tiên trong năm.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n//! moment.js locale configuration\n//! locale : Chinese (China) [zh-cn]\n//! author : suupic : https://github.com/suupic\n//! author : Zeno Zeng : https://github.com/zenozeng\n\n/** @type {?} */\n\nvar zhCnLocale = {\n  abbr: 'zh-cn',\n  months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n  monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n  weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n  weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY/MM/DD',\n    LL: 'YYYY年M月D日',\n    LLL: 'YYYY年M月D日Ah点mm分',\n    LLLL: 'YYYY年M月D日ddddAh点mm分',\n    l: 'YYYY/M/D',\n    ll: 'YYYY年M月D日',\n    lll: 'YYYY年M月D日 HH:mm',\n    llll: 'YYYY年M月D日dddd HH:mm'\n  },\n  meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n\n  /**\n   * @param {?} hour\n   * @param {?} meridiem\n   * @return {?}\n   */\n  meridiemHour: function meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n\n    if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n      return hour;\n    } else if (meridiem === '下午' || meridiem === '晚上') {\n      return hour + 12;\n    } else {\n      // '中午'\n      return hour >= 11 ? hour : hour + 12;\n    }\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem: function meridiem(hour, minute, isLower) {\n    /** @type {?} */\n    var hm = hour * 100 + minute;\n\n    if (hm < 600) {\n      return '凌晨';\n    } else if (hm < 900) {\n      return '早上';\n    } else if (hm < 1130) {\n      return '上午';\n    } else if (hm < 1230) {\n      return '中午';\n    } else if (hm < 1800) {\n      return '下午';\n    } else {\n      return '晚上';\n    }\n  },\n  calendar: {\n    sameDay: '[今天]LT',\n    nextDay: '[明天]LT',\n    nextWeek: '[下]ddddLT',\n    lastDay: '[昨天]LT',\n    lastWeek: '[上]ddddLT',\n    sameElse: 'L'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\n\n  /**\n   * @param {?} _num\n   * @param {?} period\n   * @return {?}\n   */\n  ordinal: function ordinal(_num, period) {\n    /** @type {?} */\n    var num = Number(_num);\n\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + '日';\n\n      case 'M':\n        return num + '月';\n\n      case 'w':\n      case 'W':\n        return num + '周';\n\n      default:\n        return num.toString();\n    }\n  },\n  relativeTime: {\n    future: '%s内',\n    past: '%s前',\n    s: '几秒',\n    ss: '%d 秒',\n    m: '1 分钟',\n    mm: '%d 分钟',\n    h: '1 小时',\n    hh: '%d 小时',\n    d: '1 天',\n    dd: '%d 天',\n    M: '1 个月',\n    MM: '%d 个月',\n    y: '1 年',\n    yy: '%d 年'\n  },\n  week: {\n    // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { add, arLocale, bgLocale, caLocale, csLocale, daLocale, deLocale, defineLocale, enGbLocale, endOf, esDoLocale, esLocale, esUsLocale, etLocale, fiLocale, formatDate, frLocale, getDay, getFirstDayOfMonth, _getFullYear as getFullYear, getLocale, getMonth, getSetGlobalLocale, glLocale, heLocale, hiLocale, hrLocale, huLocale, idLocale, isAfter, isArray, isBefore, isDate, isDateValid, isDisabledDay, isFirstDayOfWeek, isSame, isSameDay, isSameMonth, isSameYear, itLocale, jaLocale, kaLocale, kkLocale, koLocale, listLocales, ltLocale, lvLocale, mnLocale, nbLocale, nlBeLocale, nlLocale, parseDate, plLocale, ptBrLocale, roLocale, ruLocale, setFullDate, shiftDate, skLocale, slLocale, sqLocale, startOf, subtract, svLocale, thBeLocale, thLocale, trLocale, ukLocale, updateLocale, utcAsLocal, viLocale, zhCnLocale, createDate as ɵa };","map":{"version":3,"sources":["ngx-bootstrap/chronos/utils.ts","ngx-bootstrap/chronos/utils/type-checks.ts","ngx-bootstrap/chronos/units/aliases.ts","ngx-bootstrap/chronos/units/constants.ts","ngx-bootstrap/chronos/utils/zero-fill.ts","ngx-bootstrap/chronos/format/format.ts","ngx-bootstrap/chronos/create/date-from-array.ts","ngx-bootstrap/chronos/utils/date-getters.ts","ngx-bootstrap/chronos/parse/regex.ts","ngx-bootstrap/chronos/parse/token.ts","ngx-bootstrap/chronos/units/priorities.ts","ngx-bootstrap/chronos/units/day-of-month.ts","ngx-bootstrap/chronos/create/parsing-flags.ts","ngx-bootstrap/chronos/units/year.ts","ngx-bootstrap/chronos/units/month.ts","ngx-bootstrap/chronos/utils/date-setters.ts","ngx-bootstrap/chronos/create/clone.ts","ngx-bootstrap/chronos/utils/start-end-of.ts","ngx-bootstrap/chronos/units/day-of-year.ts","ngx-bootstrap/chronos/units/week-calendar-utils.ts","ngx-bootstrap/chronos/locale/locale.class.ts","ngx-bootstrap/chronos/locale/calendar.ts","ngx-bootstrap/chronos/locale/locale.defaults.ts","ngx-bootstrap/chronos/utils/compare-arrays.ts","ngx-bootstrap/chronos/units/week.ts","ngx-bootstrap/chronos/units/week-year.ts","ngx-bootstrap/chronos/units/timezone.ts","ngx-bootstrap/chronos/units/timestamp.ts","ngx-bootstrap/chronos/units/second.ts","ngx-bootstrap/chronos/units/quarter.ts","ngx-bootstrap/chronos/units/offset.ts","ngx-bootstrap/chronos/units/minute.ts","ngx-bootstrap/chronos/units/millisecond.ts","ngx-bootstrap/chronos/units/hour.ts","ngx-bootstrap/chronos/locale/locales.ts","ngx-bootstrap/chronos/duration/valid.ts","ngx-bootstrap/chronos/utils/abs-ceil.ts","ngx-bootstrap/chronos/duration/bubble.ts","ngx-bootstrap/chronos/duration/humanize.ts","ngx-bootstrap/chronos/duration/constructor.ts","ngx-bootstrap/chronos/create/valid.ts","ngx-bootstrap/chronos/create/from-string.ts","ngx-bootstrap/chronos/format.ts","ngx-bootstrap/chronos/utils/defaults.ts","ngx-bootstrap/chronos/create/from-array.ts","ngx-bootstrap/chronos/create/check-overflow.ts","ngx-bootstrap/chronos/create/from-string-and-format.ts","ngx-bootstrap/chronos/create/from-string-and-array.ts","ngx-bootstrap/chronos/create/from-object.ts","ngx-bootstrap/chronos/create/from-anything.ts","ngx-bootstrap/chronos/create/local.ts","ngx-bootstrap/chronos/utils/abs-round.ts","ngx-bootstrap/chronos/utils/date-compare.ts","ngx-bootstrap/chronos/duration/create.ts","ngx-bootstrap/chronos/moment/add-subtract.ts","ngx-bootstrap/chronos/units/day-of-week.ts","ngx-bootstrap/chronos/i18n/ar.ts","ngx-bootstrap/chronos/i18n/bg.ts","ngx-bootstrap/chronos/i18n/ca.ts","ngx-bootstrap/chronos/i18n/cs.ts","ngx-bootstrap/chronos/i18n/da.ts","ngx-bootstrap/chronos/i18n/de.ts","ngx-bootstrap/chronos/i18n/en-gb.ts","ngx-bootstrap/chronos/i18n/es-do.ts","ngx-bootstrap/chronos/i18n/es.ts","ngx-bootstrap/chronos/i18n/es-us.ts","ngx-bootstrap/chronos/i18n/et.ts","ngx-bootstrap/chronos/i18n/fi.ts","ngx-bootstrap/chronos/i18n/fr.ts","ngx-bootstrap/chronos/i18n/gl.ts","ngx-bootstrap/chronos/i18n/he.ts","ngx-bootstrap/chronos/i18n/hi.ts","ngx-bootstrap/chronos/i18n/hu.ts","ngx-bootstrap/chronos/i18n/hr.ts","ngx-bootstrap/chronos/i18n/id.ts","ngx-bootstrap/chronos/i18n/it.ts","ngx-bootstrap/chronos/i18n/ja.ts","ngx-bootstrap/chronos/i18n/ka.ts","ngx-bootstrap/chronos/i18n/kk.ts","ngx-bootstrap/chronos/i18n/ko.ts","ngx-bootstrap/chronos/i18n/lt.ts","ngx-bootstrap/chronos/i18n/lv.ts","ngx-bootstrap/chronos/i18n/mn.ts","ngx-bootstrap/chronos/i18n/nb.ts","ngx-bootstrap/chronos/i18n/nl-be.ts","ngx-bootstrap/chronos/i18n/nl.ts","ngx-bootstrap/chronos/i18n/pl.ts","ngx-bootstrap/chronos/i18n/pt-br.ts","ngx-bootstrap/chronos/i18n/ro.ts","ngx-bootstrap/chronos/i18n/ru.ts","ngx-bootstrap/chronos/i18n/sk.ts","ngx-bootstrap/chronos/i18n/sl.ts","ngx-bootstrap/chronos/i18n/sq.ts","ngx-bootstrap/chronos/i18n/sv.ts","ngx-bootstrap/chronos/i18n/th.ts","ngx-bootstrap/chronos/i18n/th-be.ts","ngx-bootstrap/chronos/i18n/tr.ts","ngx-bootstrap/chronos/i18n/uk.ts","ngx-bootstrap/chronos/i18n/vi.ts","ngx-bootstrap/chronos/i18n/zh-cn.ts"],"names":["daysInMonth","isSameDay","months","monthsShort","monthsShortDot","monthsParse","monthsRegex","processRelativeTime","translate","symbolMap","numberMap","monthsShortWithDots","monthsShortWithoutDots","plural","relativeTimeWithPlural","suffixes"],"mappings":"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","sourcesContent":["\n\nexport function mod(n: number, x: number): number {\n  return (n % x + x) % x;\n}\n\nexport function absFloor(num: number): number {\n  return num < 0 ? Math.ceil(num) || 0 : Math.floor(num);\n}\n","import { absFloor } from '../utils';\n\nexport function isString(str: any): str is string {\n  return typeof str === 'string';\n}\n\nexport function isDate(value: any): value is Date {\n  return value instanceof Date || Object.prototype.toString.call(value) === '[object Date]';\n}\n\nexport function isBoolean(value: any): value is boolean {\n  return value === true || value === false;\n}\n\nexport function isDateValid(date: Date): boolean {\n  return date && date.getTime && !isNaN(date.getTime());\n}\n\nexport function isFunction(fn: any): fn is Function {\n  return (\n    fn instanceof Function ||\n    Object.prototype.toString.call(fn) === '[object Function]'\n  );\n}\n\nexport function isNumber(value?: any): value is number {\n  return typeof value === 'number' || Object.prototype.toString.call(value) === '[object Number]';\n}\n\nexport function isArray<T>(input?: any): input is T[] {\n  return (\n    input instanceof Array ||\n    Object.prototype.toString.call(input) === '[object Array]'\n  );\n}\n\nexport function hasOwnProp<T>(a: T /*object*/, b: string): b is Extract<keyof T, string> {\n  return Object.prototype.hasOwnProperty.call(a, b);\n}\n\nexport function isObject<T>(input: any /*object*/): input is T {\n  // IE8 will treat undefined and null as object if it wasn't for\n  // input != null\n  return (\n    input != null && Object.prototype.toString.call(input) === '[object Object]'\n  );\n}\n\nexport function isObjectEmpty(obj: any): boolean {\n  if (Object.getOwnPropertyNames) {\n    return (Object.getOwnPropertyNames(obj).length === 0);\n  }\n  let k;\n  for (k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nexport function isUndefined(input: any): boolean {\n  return input === void 0;\n}\n\nexport function toInt<T>(argumentForCoercion: string | number | T): number {\n  const coercedNumber = +argumentForCoercion;\n  let value = 0;\n\n  if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n    value = absFloor(coercedNumber);\n  }\n\n  return value;\n}\n","import { hasOwnProp, isString } from '../utils/type-checks';\nimport { DateObject, UnitOfTime } from '../types';\n\nconst aliases: { [key: string]: string } = {};\n\nexport type ExtendedUnitOfTime = UnitOfTime | 'date' | 'week' | 'isoWeek' | 'dayOfYear' |\n  'weekday' | 'isoWeekday' | 'second' | 'millisecond' | 'minute' | 'hour' | 'quarter' | 'weekYear' | 'isoWeekYear';\n\nconst _mapUnits: { [key: string]: UnitOfTime } = {\n  date: 'day',\n  hour: 'hours',\n  minute: 'minutes',\n  second: 'seconds',\n  millisecond: 'milliseconds'\n};\n\nexport function addUnitAlias(unit: ExtendedUnitOfTime, shorthand: string): void {\n  const lowerCase = unit.toLowerCase();\n  let _unit = unit;\n  if (lowerCase in _mapUnits) {\n    _unit = _mapUnits[lowerCase];\n  }\n  aliases[lowerCase] = aliases[`${lowerCase}s`] = aliases[shorthand] = _unit;\n}\n\nexport function normalizeUnits(units: string | string[]): string {\n  return isString(units) ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n\nexport function normalizeObjectUnits(inputObject: { [key: string]: number }): DateObject {\n  const normalizedInput: { [key: string]: number } = {};\n  let normalizedProp;\n  let prop;\n\n  for (prop in inputObject) {\n    if (hasOwnProp(inputObject, prop)) {\n      normalizedProp = normalizeUnits(prop);\n      if (normalizedProp) {\n        normalizedInput[normalizedProp] = inputObject[prop];\n      }\n    }\n  }\n\n  return normalizedInput as any;\n}\n","// place in new Date([array])\nexport const YEAR = 0;\nexport const MONTH = 1;\nexport const DATE = 2;\nexport const HOUR = 3;\nexport const MINUTE = 4;\nexport const SECOND = 5;\nexport const MILLISECOND = 6;\nexport const WEEK = 7;\nexport const WEEKDAY = 8;\n","export function zeroFill(num: number,\n                         targetLength: number,\n                         forceSign?: boolean): string {\n  const absNumber = `${Math.abs(num)}`;\n  const zerosToFill = targetLength - absNumber.length;\n  const sign = num >= 0;\n  const _sign = sign ? (forceSign ? '+' : '') : '-';\n  // todo: this is crazy slow\n  const _zeros = Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1);\n\n  return (_sign + _zeros + absNumber);\n}\n","import { Locale } from '../locale/locale.class';\nimport { zeroFill } from '../utils/zero-fill';\nimport { isFunction } from '../utils/type-checks';\nimport { DateFormatterOptions, DateFormatterFn } from '../types';\n\nexport let formatFunctions: {\n  [key: string]: (date: Date, locale: Locale, isUTC?: boolean, offset?: number) => string;\n} = {};\nexport let formatTokenFunctions: { [key: string]: DateFormatterFn } = {};\n\n// tslint:disable-next-line\nexport const formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nexport function addFormatToken(token: string,\n                               padded: [string, number, boolean],\n                               ordinal: string,\n                               callback: DateFormatterFn): void {\n\n  if (token) {\n    formatTokenFunctions[token] = callback;\n  }\n\n  if (padded) {\n    formatTokenFunctions[padded[0]] = function (): string {\n      return zeroFill(callback.apply(null, arguments), padded[1], padded[2]);\n    };\n  }\n\n  if (ordinal) {\n    formatTokenFunctions[ordinal] = function (date: Date, opts: DateFormatterOptions): string {\n      return opts.locale.ordinal(callback.apply(null, arguments), token);\n    };\n  }\n}\n\nexport function makeFormatFunction(format: string):\n  (date: Date, locale: Locale, isUTC?: boolean, offset?: number) => string {\n\n  const array: string[] = format.match(formattingTokens);\n  const length = array.length;\n\n  const formatArr: string[] | DateFormatterFn[] = new Array(length);\n\n  for (let i = 0; i < length; i++) {\n    formatArr[i] = formatTokenFunctions[array[i]]\n      ? formatTokenFunctions[array[i]]\n      : removeFormattingTokens(array[i]);\n  }\n\n  return function (date: Date, locale: Locale, isUTC: boolean, offset = 0): string {\n\n    let output = '';\n    for (let j = 0; j < length; j++) {\n      output += isFunction(formatArr[j])\n        ? (formatArr[j] as DateFormatterFn).call(null, date, {format, locale, isUTC, offset})\n        : formatArr[j];\n    }\n\n    return output;\n  };\n}\n\nfunction removeFormattingTokens(input: string): string {\n  if (input.match(/\\[[\\s\\S]/)) {\n    return input.replace(/^\\[|\\]$/g, '');\n  }\n\n  return input.replace(/\\\\/g, '');\n}\n","export function createUTCDate(y?: number,\n                              m?: number,\n                              d?: number): Date {\n  const date = new Date(Date.UTC.apply(null, arguments));\n\n  // the Date.UTC function remaps years 0-99 to 1900-1999\n  if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n    date.setUTCFullYear(y);\n  }\n\n  return date;\n}\n\nexport function createDate(y?: number,\n                           m = 0,\n                           d = 1,\n                           h = 0,\n                           M = 0,\n                           s = 0,\n                           ms = 0): Date {\n  const date = new Date(y, m, d, h, M, s, ms);\n\n  // the date constructor remaps years 0-99 to 1900-1999\n  if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n    date.setFullYear(y);\n  }\n\n  return date;\n}\n","import { createDate } from '../create/date-from-array';\n\nexport function getHours(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCHours() : date.getHours();\n}\n\nexport function getMinutes(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCMinutes() : date.getMinutes();\n}\n\nexport function getSeconds(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCSeconds() : date.getSeconds();\n}\n\nexport function getMilliseconds(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCMilliseconds() : date.getMilliseconds();\n}\nexport function getTime(date: Date): number {\n  return date.getTime();\n}\n\nexport function getDay(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCDay() : date.getDay();\n}\n\nexport function getDate(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCDate() : date.getDate();\n}\n\nexport function getMonth(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCMonth() : date.getMonth();\n}\n\nexport function getFullYear(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCFullYear() : date.getFullYear();\n}\n\nexport function getUnixTime(date: Date): number {\n  return Math.floor(date.valueOf() / 1000);\n}\n\nexport function unix(date: Date): number {\n  return Math.floor(date.valueOf() / 1000);\n}\n\nexport function getFirstDayOfMonth(date: Date): Date {\n  return createDate(\n    date.getFullYear(),\n    date.getMonth(),\n    1,\n    date.getHours(),\n    date.getMinutes(),\n    date.getSeconds()\n  );\n}\n\nexport function daysInMonth(date: Date): number {\n  return _daysInMonth(date.getFullYear(), date.getMonth());\n}\n\nexport function _daysInMonth(year: number, month: number): number {\n  return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n}\n\nexport function isFirstDayOfWeek(date: Date, firstDayOfWeek: number): boolean {\n  return date.getDay() === firstDayOfWeek;\n}\n\nexport function isSameMonth(date1: Date, date2: Date) {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  return isSameYear(date1, date2) && getMonth(date1) === getMonth(date2);\n}\n\nexport function isSameYear(date1: Date, date2: Date) {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  return getFullYear(date1) === getFullYear(date2);\n}\n\nexport function isSameDay(date1: Date, date2: Date): boolean {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  return (\n    isSameYear(date1, date2) &&\n    isSameMonth(date1, date2) &&\n    getDate(date1) === getDate(date2)\n  );\n}\n","import { hasOwnProp, isFunction } from '../utils/type-checks';\nimport { Locale } from '../locale/locale.class';\n\nexport const match1 = /\\d/;            //       0 - 9\nexport const match2 = /\\d\\d/;          //      00 - 99\nexport const match3 = /\\d{3}/;         //     000 - 999\nexport const match4 = /\\d{4}/;         //    0000 - 9999\nexport const match6 = /[+-]?\\d{6}/;    // -999999 - 999999\nexport const match1to2 = /\\d\\d?/;         //       0 - 99\nexport const match3to4 = /\\d\\d\\d\\d?/;     //     999 - 9999\nexport const match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nexport const match1to3 = /\\d{1,3}/;       //       0 - 999\nexport const match1to4 = /\\d{1,4}/;       //       0 - 9999\nexport const match1to6 = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\nexport const matchUnsigned = /\\d+/;           //       0 - inf\nexport const matchSigned = /[+-]?\\d+/;      //    -inf - inf\n\nexport const matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nexport const matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\nexport const matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\n// tslint:disable-next-line\nexport const matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\nexport type RegExpTokenFn = (isStrict: boolean, locale: Locale) => RegExp;\nconst regexes: {[key: string]: RegExpTokenFn} = {};\n\n\nexport function addRegexToken(token: string, regex: RegExp | RegExpTokenFn, strictRegex?: RegExp): void {\n  if (isFunction(regex)) {\n    regexes[token] = regex;\n\n    return;\n  }\n\n  regexes[token] = function (isStrict: boolean, locale: Locale) {\n    return (isStrict && strictRegex) ? strictRegex : regex;\n  };\n}\n\nexport function getParseRegexForToken(token: string, locale: Locale): RegExp {\n  const _strict = false;\n  if (!hasOwnProp(regexes, token)) {\n    return new RegExp(unescapeFormat(token));\n  }\n\n  return regexes[token](_strict, locale);\n}\n\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(str: string): string {\n  // tslint:disable-next-line\n  return regexEscape(str\n    .replace('\\\\', '')\n    .replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, (matched, p1, p2, p3, p4) => p1 || p2 || p3 || p4)\n  );\n}\n\nexport function regexEscape(str: string): string {\n  return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n","// tslint:disable:max-line-length\nimport { hasOwnProp, isArray, isFunction, isNumber, isString, toInt } from '../utils/type-checks';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { DateArray, DateParseTokenFn } from '../types';\n\nconst tokens: {[key: string]: DateParseTokenFn} = {};\n\nexport function addParseToken(token: string | string[], callback: DateParseTokenFn | number) {\n  const _token = isString(token) ? [token] : token;\n  let func = callback;\n\n  if (isNumber(callback)) {\n    func = function (input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n      array[callback] = toInt(input);\n\n      return config;\n    };\n  }\n\n  if (isArray<string>(_token) && isFunction(func)) {\n    let i;\n    for (i = 0; i < _token.length; i++) {\n      tokens[_token[i]] = func;\n    }\n  }\n}\n\nexport function addWeekParseToken(token: string[], callback: DateParseTokenFn): void {\n  addParseToken(token, function (input: string, array: DateArray, config: DateParsingConfig, _token: string): DateParsingConfig {\n    config._w = config._w || {};\n\n    return callback(input, config._w, config, _token);\n  });\n}\n\n\nexport function addTimeToArrayFromToken(token: string, input: string, config: DateParsingConfig): DateParsingConfig {\n  if (input != null && hasOwnProp(tokens, token)) {\n    tokens[token](input, config._a, config, token);\n  }\n\n  return config;\n}\n","const priorities: {[key: string]: number} = {};\n\nexport function addUnitPriority(unit: string, priority: number): void {\n  priorities[unit] = priority;\n}\n\n/*\nexport function getPrioritizedUnits(unitsObj) {\n  const units = [];\n  let unit;\n  for (unit in unitsObj) {\n    if (unitsObj.hasOwnProperty(unit)) {\n      units.push({ unit, priority: priorities[unit] });\n    }\n  }\n  units.sort(function (a, b) {\n    return a.priority - b.priority;\n  });\n\n  return units;\n}\n*/\n","import { addFormatToken } from '../format/format';\nimport { getDate } from '../utils/date-getters';\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { DATE } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { DateArray, DateFormatterOptions } from '../types';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { DateParsingConfig } from '../create/parsing.types';\n\n\nexport function initDayOfMonth() {\n// FORMATTING\n\n  addFormatToken('D', ['DD', 2, false], 'Do',\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getDate(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n\n// ALIASES\n\n  addUnitAlias('date', 'D');\n\n// PRIOROITY\n  addUnitPriority('date', 9);\n\n// PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function(isStrict, locale) {\n    return locale._dayOfMonthOrdinalParse || locale._ordinalParse;\n  });\n\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken(\n    'Do',\n    function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n      array[DATE] = toInt(input.match(match1to2)[0]);\n\n      return config;\n    }\n  );\n}\n","import { DateParsingConfig, DateParsingFlags } from './parsing.types';\n\nfunction defaultParsingFlags(): DateParsingFlags {\n  // We need to deep clone this object.\n  return {\n    empty: false,\n    unusedTokens: [],\n    unusedInput: [],\n    overflow: -2,\n    charsLeftOver: 0,\n    nullInput: false,\n    invalidMonth: null,\n    invalidFormat: false,\n    userInvalidated: false,\n    iso: false,\n    parsedDateParts: [],\n    meridiem: null,\n    rfc2822: false,\n    weekdayMismatch: false\n  };\n}\n\nexport function getParsingFlags(config: DateParsingConfig): DateParsingFlags {\n  if (config._pf == null) {\n    config._pf = defaultParsingFlags();\n  }\n\n  return config._pf;\n}\n","import { addFormatToken } from '../format/format';\nimport { getFullYear } from '../utils/date-getters';\nimport { addRegexToken, match1to2, match1to4, match1to6, match2, match4, match6, matchSigned } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { YEAR } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\nimport { DateFormatterOptions } from '../types';\n\n// FORMATTING\n\nfunction getYear(date: Date, opts: DateFormatterOptions): string {\n  if (opts.locale.getFullYear) {\n    return opts.locale.getFullYear(date, opts.isUTC).toString();\n  }\n  return getFullYear(date, opts.isUTC).toString();\n}\n\nexport function initYear() {\n  addFormatToken('Y', null, null,\n    function (date: Date, opts: DateFormatterOptions): string {\n    const y = getFullYear(date, opts.isUTC);\n\n    return y <= 9999 ? y.toString(10) : `+${y}`;\n  });\n\n  addFormatToken(null, ['YY', 2, false], null,\n    function (date: Date, opts: DateFormatterOptions): string {\n    return (getFullYear(date, opts.isUTC) % 100).toString(10);\n  });\n\n  addFormatToken(null, ['YYYY', 4, false], null, getYear);\n  addFormatToken(null, ['YYYYY', 5, false], null, getYear);\n  addFormatToken(null, ['YYYYYY', 6, true], null, getYear);\n\n  // ALIASES\n\n  addUnitAlias('year', 'y');\n\n  // PRIORITIES\n\n  addUnitPriority('year', 1);\n\n  // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array, config) {\n    array[YEAR] = input.length === 2 ? parseTwoDigitYear(input) : toInt(input);\n\n    return config;\n  });\n  addParseToken('YY', function (input, array, config) {\n    array[YEAR] = parseTwoDigitYear(input);\n\n    return config;\n  });\n  addParseToken('Y', function (input, array, config) {\n    array[YEAR] = parseInt(input, 10);\n\n    return config;\n  });\n}\n\nexport function parseTwoDigitYear(input: string): number {\n  return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n}\n\nexport function daysInYear(year: number): number {\n  return isLeapYear(year) ? 366 : 365;\n}\n\nexport function isLeapYear(year: number): boolean {\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n","import { addFormatToken } from '../format/format';\nimport { isLeapYear } from './year';\nimport { mod } from '../utils';\nimport { getMonth } from '../utils/date-getters';\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { MONTH } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\nimport { getParsingFlags } from '../create/parsing-flags';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { DateArray, DateFormatterOptions } from '../types';\n\n// todo: this is duplicate, source in date-getters.ts\nexport function daysInMonth(year: number, month: number): number {\n  if (isNaN(year) || isNaN(month)) {\n    return NaN;\n  }\n  const modMonth = mod(month, 12);\n  const _year = year + (month - modMonth) / 12;\n\n  return modMonth === 1\n    ? isLeapYear(_year) ? 29 : 28\n    : (31 - modMonth % 7 % 2);\n}\n\nexport function initMonth() {\n// FORMATTING\n\n  addFormatToken('M', ['MM', 2, false], 'Mo',\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (getMonth(date, opts.isUTC) + 1).toString(10);\n    }\n  );\n\n  addFormatToken('MMM', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return opts.locale.monthsShort(date, opts.format, opts.isUTC);\n    }\n  );\n\n  addFormatToken('MMMM', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return opts.locale.months(date, opts.format, opts.isUTC);\n    }\n  );\n\n\n// ALIASES\n\n  addUnitAlias('month', 'M');\n\n// PRIORITY\n\n  addUnitPriority('month', 8);\n\n// PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function(isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function(isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n\n  addParseToken(['M', 'MM'], function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    array[MONTH] = toInt(input) - 1;\n\n    return config;\n  });\n\n  addParseToken(\n    ['MMM', 'MMMM'],\n    function(input: string, array: DateArray, config: DateParsingConfig, token: string): DateParsingConfig {\n      const month = config._locale.monthsParse(input, token, config._strict);\n      // if we didn't find a month name, mark the date as invalid.\n      if (month != null) {\n        array[MONTH] = month;\n      } else {\n        getParsingFlags(config).invalidMonth = !!input;\n      }\n\n      return config;\n    }\n  );\n}\n","import { TimeUnit } from '../types';\nimport { daysInMonth } from '../units/month';\nimport { isNumber } from './type-checks';\nimport { getDate, getFullYear, getMonth } from './date-getters';\nimport { isLeapYear } from '../units/year';\nimport { createDate } from '../create/date-from-array';\n\nconst defaultTimeUnit: TimeUnit = {\n  year: 0,\n  month: 0,\n  day: 0,\n  hour: 0,\n  minute: 0,\n  seconds: 0\n};\n\nexport function shiftDate(date: Date, unit: TimeUnit): Date {\n  const _unit = Object.assign({}, defaultTimeUnit, unit);\n  const year = date.getFullYear() + (_unit.year || 0);\n  const month = date.getMonth() + (_unit.month || 0);\n  let day = date.getDate() + (_unit.day || 0);\n  if (_unit.month && !_unit.day) {\n    day = Math.min(day, daysInMonth(year, month));\n  }\n\n  return createDate(\n    year,\n    month,\n    day,\n    date.getHours() + (_unit.hour || 0),\n    date.getMinutes() + (_unit.minute || 0),\n    date.getSeconds() + (_unit.seconds || 0)\n  );\n}\n\nexport function setFullDate(date: Date, unit: TimeUnit): Date {\n  return createDate(\n    getNum(date.getFullYear(), unit.year),\n    getNum(date.getMonth(), unit.month),\n    1, // day, to avoid issue with wrong months selection at the end of current month (#5371)\n    getNum(date.getHours(), unit.hour),\n    getNum(date.getMinutes(), unit.minute),\n    getNum(date.getSeconds(), unit.seconds),\n    getNum(date.getMilliseconds(), unit.milliseconds)\n  );\n}\n\nfunction getNum(def: number, num?: number): number {\n  return isNumber(num) ? num : def;\n}\n\nexport function setFullYear(date: Date, value: number, isUTC?: boolean): Date {\n  const _month = getMonth(date, isUTC);\n  const _date = getDate(date, isUTC);\n  const _year = getFullYear(date, isUTC);\n  if (isLeapYear(_year) && _month === 1 && _date === 29) {\n    const _daysInMonth = daysInMonth(value, _month);\n    isUTC ? date.setUTCFullYear(value, _month, _daysInMonth) : date.setFullYear(value, _month, _daysInMonth);\n  }\n\n  isUTC ? date.setUTCFullYear(value) : date.setFullYear(value);\n\n  return date;\n}\n\nexport function setMonth(date: Date, value: number, isUTC?: boolean): Date {\n  const dayOfMonth = Math.min(getDate(date), daysInMonth(getFullYear(date), value));\n  isUTC ? date.setUTCMonth(value, dayOfMonth) : date.setMonth(value, dayOfMonth);\n\n  return date;\n}\n\nexport function setDay(date: Date, value: number, isUTC?: boolean): Date {\n  isUTC ? date.setUTCDate(value) : date.setDate(value);\n\n  return date;\n}\n\nexport function setHours(date: Date, value: number, isUTC?: boolean): Date {\n  isUTC ? date.setUTCHours(value) : date.setHours(value);\n\n  return date;\n}\n\nexport function setMinutes(date: Date, value: number, isUTC?: boolean): Date {\n  isUTC ? date.setUTCMinutes(value) : date.setMinutes(value);\n\n  return date;\n}\n\nexport function setSeconds(date: Date, value: number, isUTC?: boolean): Date {\n  isUTC ? date.setUTCSeconds(value) : date.setSeconds(value);\n\n  return date;\n}\n\nexport function setMilliseconds(date: Date, value: number, isUTC?: boolean): Date {\n  isUTC ? date.setUTCMilliseconds(value) : date.setMilliseconds(value);\n\n  return date;\n}\n\nexport function setDate(date: Date, value: number, isUTC?: boolean): Date {\n  isUTC ? date.setUTCDate(value) : date.setDate(value);\n\n  return date;\n}\n\nexport function setTime(date: Date, value: number): Date {\n  date.setTime(value);\n\n  return date;\n}\n","// fastest way to clone date\n// https://jsperf.com/clone-date-object2\nexport function cloneDate(date: Date): Date {\n  return new Date(date.getTime());\n}\n","// tslint:disable: switch-default\nimport { TimeUnit, UnitOfTime } from '../types';\nimport {\n  setDate, setFullDate, setHours, setMilliseconds, setMinutes, setMonth, setSeconds,\n  shiftDate\n} from './date-setters';\nimport { cloneDate } from '../create/clone';\nimport { setISODayOfWeek, setLocaleDayOfWeek } from '../units/day-of-week';\nimport { getMonth } from './date-getters';\nimport { add, subtract } from '../moment/add-subtract';\n\nexport function startOf(date: Date, unit: UnitOfTime, isUTC?: boolean): Date {\n  const _date = cloneDate(date);\n  // the following switch intentionally omits break keywords\n  // to utilize falling through the cases.\n  switch (unit) {\n    case 'year':\n      setMonth(_date, 0, isUTC);\n    /* falls through */\n    case 'quarter':\n    case 'month':\n      setDate(_date, 1, isUTC);\n    /* falls through */\n    case 'week':\n    case 'isoWeek':\n    case 'day':\n    case 'date':\n      setHours(_date, 0, isUTC);\n    /* falls through */\n    case 'hours':\n      setMinutes(_date, 0, isUTC);\n    /* falls through */\n    case 'minutes':\n      setSeconds(_date, 0, isUTC);\n    /* falls through */\n    case 'seconds':\n      setMilliseconds(_date, 0, isUTC);\n  }\n\n  // weeks are a special case\n  if (unit === 'week') {\n    setLocaleDayOfWeek(_date, 0, {isUTC});\n  }\n  if (unit === 'isoWeek') {\n    setISODayOfWeek(_date, 1);\n  }\n\n  // quarters are also special\n  if (unit === 'quarter') {\n    setMonth(_date, Math.floor(getMonth(_date, isUTC) / 3) * 3, isUTC);\n  }\n\n  return _date;\n}\n\nexport function endOf(date: Date, unit: UnitOfTime, isUTC?: boolean): Date {\n  let _unit = unit;\n  // 'date' is an alias for 'day', so it should be considered as such.\n  if (_unit === 'date') {\n    _unit = 'day';\n  }\n\n  const start = startOf(date, _unit, isUTC);\n  const _step = add(start, 1, _unit === 'isoWeek' ? 'week' : _unit, isUTC);\n  const res = subtract(_step, 1, 'milliseconds', isUTC);\n\n  return res;\n}\n","import { addFormatToken } from '../format/format';\nimport { startOf } from '../utils/start-end-of';\nimport { addRegexToken, match1to3, match3 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\nimport { DateArray, DateFormatterOptions } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { toInt } from '../utils/type-checks';\nimport { add } from '../moment/add-subtract';\n\n\nexport function initDayOfYear() {\n// FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3, false], 'DDDo',\n    function(date: Date): string {\n      return getDayOfYear(date)\n        .toString(10);\n    }\n  );\n\n\n// ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD');\n\n// PRIORITY\n\n  addUnitPriority('dayOfYear', 4);\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(\n    ['DDD', 'DDDD'],\n    function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n      config._dayOfYear = toInt(input);\n\n      return config;\n    }\n  );\n}\n\nexport function getDayOfYear(date: Date, isUTC?: boolean): number {\n  const date1 = +startOf(date, 'day', isUTC);\n  const date2 = +startOf(date, 'year', isUTC);\n  const someDate = date1 - date2;\n  const oneDay = 1000 * 60 * 60 * 24;\n\n  return Math.round(someDate / oneDay) + 1;\n}\n\nexport function setDayOfYear(date: Date, input: number): Date {\n  const dayOfYear = getDayOfYear(date);\n\n  return add(date, (input - dayOfYear), 'day');\n}\n","/**\n *\n * @param {number} year\n * @param {number} dow - start-of-first-week\n * @param {number} doy - start-of-year\n * @returns {number}\n */\nimport { createUTCDate } from '../create/date-from-array';\nimport { daysInYear } from './year';\nimport { getDayOfYear } from './day-of-year';\nimport { getFullYear } from '../utils/date-getters';\n\nfunction firstWeekOffset(year: number, dow: number, doy: number): number {\n  // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n  const fwd = dow - doy + 7;\n  // first-week day local weekday -- which local weekday is fwd\n  const fwdlw = (createUTCDate(year, 0, fwd).getUTCDay() - dow + 7) % 7;\n\n  return -fwdlw + fwd - 1;\n}\n\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nexport function dayOfYearFromWeeks(\n  year: number,\n  week: number,\n  weekday: number,\n  dow: number,\n  doy: number\n): { year: number; dayOfYear: number } {\n  const localWeekday = (7 + weekday - dow) % 7;\n  const weekOffset = firstWeekOffset(year, dow, doy);\n  const dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset;\n  let resYear: number;\n  let resDayOfYear: number;\n\n  if (dayOfYear <= 0) {\n    resYear = year - 1;\n    resDayOfYear = daysInYear(resYear) + dayOfYear;\n  } else if (dayOfYear > daysInYear(year)) {\n    resYear = year + 1;\n    resDayOfYear = dayOfYear - daysInYear(year);\n  } else {\n    resYear = year;\n    resDayOfYear = dayOfYear;\n  }\n\n  return {\n    year: resYear,\n    dayOfYear: resDayOfYear\n  };\n}\n\nexport function weekOfYear(date: Date, dow: number, doy: number, isUTC?: boolean): { week: number; year: number } {\n  const weekOffset = firstWeekOffset(getFullYear(date, isUTC), dow, doy);\n  const week = Math.floor((getDayOfYear(date, isUTC) - weekOffset - 1) / 7) + 1;\n  let resWeek: number;\n  let resYear: number;\n\n  if (week < 1) {\n    resYear = getFullYear(date, isUTC) - 1;\n    resWeek = week + weeksInYear(resYear, dow, doy);\n  } else if (week > weeksInYear(getFullYear(date, isUTC), dow, doy)) {\n    resWeek = week - weeksInYear(getFullYear(date, isUTC), dow, doy);\n    resYear = getFullYear(date, isUTC) + 1;\n  } else {\n    resYear = getFullYear(date, isUTC);\n    resWeek = week;\n  }\n\n  return {\n    week: resWeek,\n    year: resYear\n  };\n}\n\nexport function weeksInYear(year: number, dow: number, doy: number): number {\n  const weekOffset = firstWeekOffset(year, dow, doy);\n  const weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n\n  return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n","// tslint:disable:max-file-line-count max-line-length cyclomatic-complexity\n\nimport { weekOfYear } from '../units/week-calendar-utils';\nimport { hasOwnProp, isArray, isFunction } from '../utils/type-checks';\nimport { getDay, getMonth, getFullYear } from '../utils/date-getters';\nimport { matchWord, regexEscape } from '../parse/regex';\nimport { setDayOfWeek } from '../units/day-of-week';\n\nexport interface LocaleOptionsFormat {\n  format: string[];\n  standalone: string[];\n  isFormat?: RegExp;\n}\n\nexport type LocaleOptions = string[] | LocaleOptionsFormat;\n\nconst MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nexport const defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n  '_'\n);\nexport const defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(\n  '_'\n);\nexport const defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n  '_'\n);\nexport const defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split(\n  '_'\n);\nexport const defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nexport const defaultLongDateFormat: { [index: string]: string } = {\n  LTS: 'h:mm:ss A',\n  LT: 'h:mm A',\n  L: 'MM/DD/YYYY',\n  LL: 'MMMM D, YYYY',\n  LLL: 'MMMM D, YYYY h:mm A',\n  LLLL: 'dddd, MMMM D, YYYY h:mm A'\n};\n\nexport const defaultOrdinal = '%d';\nexport const defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\nconst defaultMonthsShortRegex = matchWord;\nconst defaultMonthsRegex = matchWord;\n\nexport type OrdinalDateFn = (num: number, token?: string) => string;\nexport type PluralizeDateFn = (num: number, withoutSuffix: boolean,\n                               key?: string, isFuture?: boolean) => string;\n\nexport interface LocaleData {\n  abbr?: string;\n  parentLocale?: string;\n\n  months?: LocaleOptions | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\n  monthsShort?: LocaleOptions | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\n  monthsParseExact?: boolean;\n\n  weekdays?: LocaleOptions | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\n  weekdaysShort?: string[] | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\n  weekdaysMin?: string[] | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\n  weekdaysParseExact?: boolean;\n\n  longDateFormat?: { [index: string]: string };\n  calendar?: {\n    [key: string]: (string\n      | ((date: Date, now?: Date) => string)\n      // tslint:disable-next-line\n      | ((dayOfWeek: number, isNextWeek: boolean) => string))\n  };\n  relativeTime?: { [key: string]: string | PluralizeDateFn };\n  dayOfMonthOrdinalParse?: RegExp;\n  ordinal?: string | OrdinalDateFn;\n\n  week?: { dow?: number; doy?: number };\n\n  invalidDate?: string;\n\n  monthsRegex?: RegExp;\n  monthsParse?: RegExp[];\n  monthsShortRegex?: RegExp;\n  monthsStrictRegex?: RegExp;\n  monthsShortStrictRegex?: RegExp;\n  longMonthsParse?: RegExp[];\n  shortMonthsParse?: RegExp[];\n\n  meridiemParse?: RegExp;\n\n  meridiemHour?(hour: number, meridiem: string): number;\n\n  preparse?(str: string, format?: string | string[]): string;\n\n  postformat?(str: string | number): string;\n\n  meridiem?(hour: number, minute?: number, isLower?: boolean): string;\n\n  isPM?(input: string): boolean;\n\n  getFullYear?(date: Date, isUTC: boolean): number;\n}\n\nexport class Locale {\n  parentLocale?: Locale;\n  _abbr: string;\n  _config: LocaleData;\n  meridiemHour: (hour: number, meridiem: string) => number;\n\n  _invalidDate: string;\n  _week: { dow: number; doy: number };\n  _dayOfMonthOrdinalParse: RegExp;\n  _ordinalParse: RegExp;\n  _meridiemParse: RegExp;\n\n  private _calendar: { [key: string]: string };\n  private _relativeTime: { future: string; past: string };\n  private _months: LocaleOptions;\n  private _monthsShort: LocaleOptions;\n  private _monthsRegex: RegExp;\n  private _monthsShortRegex: RegExp;\n  private _monthsStrictRegex: RegExp;\n  private _monthsShortStrictRegex: RegExp;\n  private _monthsParse: RegExp[];\n  private _longMonthsParse: string[] | RegExp[];\n  private _shortMonthsParse: string[] | RegExp[];\n  private _monthsParseExact: RegExp;\n  private _weekdaysParseExact: boolean;\n  private _weekdaysRegex: RegExp;\n  private _weekdaysShortRegex: RegExp;\n  private _weekdaysMinRegex: RegExp;\n\n  private _weekdaysStrictRegex: RegExp;\n  private _weekdaysShortStrictRegex: RegExp;\n  private _weekdaysMinStrictRegex: RegExp;\n\n  private _weekdays: LocaleOptions;\n  private _weekdaysShort: string[];\n  private _weekdaysMin: string[];\n  private _weekdaysParse: string[] | RegExp[];\n  private _minWeekdaysParse: string[] | RegExp[];\n  private _shortWeekdaysParse: string[] | RegExp[];\n  private _fullWeekdaysParse: RegExp[];\n  private _longDateFormat: { [key: string]: string };\n\n  private _ordinal: string;\n\n  constructor(config: LocaleData) {\n    if (!!config) {\n      this.set(config);\n    }\n  }\n\n  set(config: LocaleData): void {\n    let confKey;\n    for (confKey in config) {\n      if (!config.hasOwnProperty(confKey)) {\n        continue;\n      }\n      const prop = config[confKey as keyof LocaleData];\n      const key = (isFunction(prop) ? confKey : `_${confKey}`) as keyof Locale;\n\n      this[key] = prop as any;\n    }\n\n    this._config = config;\n  }\n\n  calendar(key: string, date: Date, now: Date): string {\n    const output = this._calendar[key] || this._calendar.sameElse;\n\n    return isFunction(output) ? output.call(null, date, now) : output;\n  }\n\n  longDateFormat(key: string) {\n    const format = this._longDateFormat[key];\n    const formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val: string) {\n      return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n  }\n\n  get invalidDate(): string {\n    return this._invalidDate;\n  }\n\n  set invalidDate(val: string) {\n    this._invalidDate = val;\n  }\n\n  ordinal(num: number, token?: string): string {\n    return this._ordinal.replace('%d', num.toString(10));\n  }\n\n  preparse(str: string, format?: string | string[]) {\n    return str;\n  }\n\n\n  getFullYear(date: Date, isUTC = false): number {\n    return getFullYear(date, isUTC);\n  }\n\n  postformat(str: string) {\n    return str;\n  }\n\n  relativeTime(num: number, withoutSuffix: boolean, str: 'future' | 'past', isFuture: boolean): string {\n    const output = this._relativeTime[str];\n\n    return (isFunction(output)) ?\n      output(num, withoutSuffix, str, isFuture) :\n      output.replace(/%d/i, num.toString(10));\n  }\n\n  pastFuture(diff: number, output: string): string {\n    const format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  /** Months */\n  months(): string[];\n  months(date: Date, format?: string, isUTC?: boolean): string;\n  months(date?: Date, format?: string, isUTC = false): string | string[] {\n    if (!date) {\n      return isArray<string>(this._months)\n        ? this._months\n        : this._months.standalone;\n    }\n\n    if (isArray<string>(this._months)) {\n      return this._months[getMonth(date, isUTC)];\n    }\n\n    const key = (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n      ? 'format'\n      : 'standalone';\n\n    return this._months[key][getMonth(date, isUTC)];\n  }\n\n  monthsShort(): string[];\n  monthsShort(date?: Date, format?: string, isUTC?: boolean): string;\n  monthsShort(date?: Date, format?: string, isUTC = false): string | string[] {\n    if (!date) {\n      return isArray<string>(this._monthsShort)\n        ? this._monthsShort\n        : this._monthsShort.standalone;\n    }\n\n    if (isArray<string>(this._monthsShort)) {\n      return this._monthsShort[getMonth(date, isUTC)];\n    }\n    const key = MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone';\n\n    return this._monthsShort[key][getMonth(date, isUTC)];\n  }\n\n  monthsParse(monthName: string, format?: string, strict?: boolean): number {\n    let date;\n    let regex;\n\n    if (this._monthsParseExact) {\n      return this.handleMonthStrictParse(monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    let i;\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      date = new Date(Date.UTC(2000, i));\n      if (strict && !this._longMonthsParse[i]) {\n        const _months = this.months(date, '', true).replace('.', '');\n        const _shortMonths = this.monthsShort(date, '', true).replace('.', '');\n        this._longMonthsParse[i] = new RegExp(`^${_months}$`, 'i');\n        this._shortMonthsParse[i] = new RegExp(`^${_shortMonths}$`, 'i');\n      }\n      if (!strict && !this._monthsParse[i]) {\n        regex = `^${this.months(date, '', true)}|^${this.monthsShort(date, '', true)}`;\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n      // test the regex\n      if (strict && format === 'MMMM' && (this._longMonthsParse[i] as RegExp).test(monthName)) {\n        return i;\n      }\n\n      if (strict && format === 'MMM' && (this._shortMonthsParse[i] as RegExp).test(monthName)) {\n        return i;\n      }\n\n      if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  }\n\n  monthsRegex(isStrict: boolean): RegExp {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this.computeMonthsParse();\n      }\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      }\n\n      return this._monthsRegex;\n    }\n\n    if (!hasOwnProp(this, '_monthsRegex')) {\n      this._monthsRegex = defaultMonthsRegex;\n    }\n\n    return this._monthsStrictRegex && isStrict ?\n      this._monthsStrictRegex : this._monthsRegex;\n  }\n\n  monthsShortRegex(isStrict: boolean): RegExp {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this.computeMonthsParse();\n      }\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      }\n\n      return this._monthsShortRegex;\n    }\n    if (!hasOwnProp(this, '_monthsShortRegex')) {\n      this._monthsShortRegex = defaultMonthsShortRegex;\n    }\n\n    return this._monthsShortStrictRegex && isStrict ?\n      this._monthsShortStrictRegex : this._monthsShortRegex;\n  }\n\n  /** Week */\n  week(date: Date, isUTC?: boolean): number {\n    return weekOfYear(date, this._week.dow, this._week.doy, isUTC).week;\n  }\n\n  firstDayOfWeek(): number {\n    return this._week.dow;\n  }\n\n  firstDayOfYear(): number {\n    return this._week.doy;\n  }\n\n  /** Day of Week */\n  weekdays(): string[];\n  weekdays(date: Date, format?: string, isUTC?: boolean): string;\n  weekdays(date?: Date, format?: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return isArray<string>(this._weekdays)\n        ? this._weekdays\n        : this._weekdays.standalone;\n    }\n\n    if (isArray<string>(this._weekdays)) {\n      return this._weekdays[getDay(date, isUTC)];\n    }\n\n    const _key = this._weekdays.isFormat.test(format)\n      ? 'format'\n      : 'standalone';\n\n    return this._weekdays[_key][getDay(date, isUTC)];\n  }\n\n  weekdaysMin(): string[];\n  weekdaysMin(date: Date, format?: string, isUTC?: boolean): string;\n  weekdaysMin(date?: Date, format?: string, isUTC?: boolean): string | string[] {\n    return date ? this._weekdaysMin[getDay(date, isUTC)] : this._weekdaysMin;\n  }\n\n  weekdaysShort(): string[];\n  weekdaysShort(date: Date, format?: string, isUTC?: boolean): string;\n  weekdaysShort(date?: Date, format?: string, isUTC?: boolean): string | string[] {\n    return date ? this._weekdaysShort[getDay(date, isUTC)] : this._weekdaysShort;\n  }\n\n\n  // proto.weekdaysParse  =        localeWeekdaysParse;\n  weekdaysParse(weekdayName?: string, format?: string, strict?: boolean): number {\n    let i;\n    let regex;\n\n    if (this._weekdaysParseExact) {\n      return this.handleWeekStrictParse(weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      // fix: here is the issue\n      const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp(`^${this.weekdays(date, '', true).replace('.', '\\.?')}$`, 'i');\n        this._shortWeekdaysParse[i] = new RegExp(`^${this.weekdaysShort(date, '', true).replace('.', '\\.?')}$`, 'i');\n        this._minWeekdaysParse[i] = new RegExp(`^${this.weekdaysMin(date, '', true).replace('.', '\\.?')}$`, 'i');\n      }\n      if (!this._weekdaysParse[i]) {\n        regex = `^${this.weekdays(date, '', true)}|^${this.weekdaysShort(date, '', true)}|^${this.weekdaysMin(date, '', true)}`;\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n\n      if (!isArray<RegExp>(this._fullWeekdaysParse)\n        || !isArray<RegExp>(this._shortWeekdaysParse)\n        || !isArray<RegExp>(this._minWeekdaysParse)\n        || !isArray<RegExp>(this._weekdaysParse)) {\n        return;\n      }\n\n      // test the regex\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  }\n\n  // proto.weekdaysRegex       =        weekdaysRegex;\n  weekdaysRegex(isStrict: boolean) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = matchWord;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ?\n        this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  // proto.weekdaysShortRegex  =        weekdaysShortRegex;\n  // proto.weekdaysMinRegex    =        weekdaysMinRegex;\n\n\n  weekdaysShortRegex(isStrict?: boolean): RegExp {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = matchWord;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ?\n        this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  weekdaysMinRegex(isStrict?: boolean): RegExp {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = matchWord;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ?\n        this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  isPM(input: string): boolean {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return input.toLowerCase().charAt(0) === 'p';\n  }\n\n  meridiem(hours: number, minutes: number, isLower: boolean): string {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    }\n\n    return isLower ? 'am' : 'AM';\n  }\n\n  formatLongDate(key: string) {\n    this._longDateFormat = this._longDateFormat ? this._longDateFormat : defaultLongDateFormat;\n    const format = this._longDateFormat[key];\n    const formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[\n      key\n      ] = formatUpper.replace(/MMMM|MM|DD|dddd/g, (val: string) => {\n      return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n  }\n\n  private handleMonthStrictParse(monthName: string, format: string, strict?: boolean) {\n    const llc = monthName.toLocaleLowerCase();\n    let i;\n    let ii;\n    let mom;\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n      for (i = 0; i < 12; ++i) {\n        mom = new Date(2000, i);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = (this._shortMonthsParse as string[]).indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      }\n      ii = (this._longMonthsParse as string[]).indexOf(llc);\n\n      return ii !== -1 ? ii : null;\n    }\n\n    if (format === 'MMM') {\n      ii = (this._shortMonthsParse as string[]).indexOf(llc);\n      if (ii !== -1) {\n        return ii;\n      }\n\n      ii = (this._longMonthsParse as string[]).indexOf(llc);\n\n      return ii !== -1 ? ii : null;\n    }\n\n    ii = (this._longMonthsParse as string[]).indexOf(llc);\n    if (ii !== -1) {\n      return ii;\n    }\n    ii = (this._shortMonthsParse as string[]).indexOf(llc);\n\n    return ii !== -1 ? ii : null;\n  }\n\n  private handleWeekStrictParse(weekdayName: string, format: string, strict: boolean): number {\n    let ii;\n    const llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      let i;\n      for (i = 0; i < 7; ++i) {\n        const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n        this._minWeekdaysParse[i] = this.weekdaysMin(date).toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(date).toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(date, '').toLocaleLowerCase();\n      }\n    }\n\n    if (!isArray<string>(this._weekdaysParse)\n      || !isArray<string>(this._shortWeekdaysParse)\n      || !isArray<string>(this._minWeekdaysParse)) {\n      return;\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = this._weekdaysParse.indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = this._shortWeekdaysParse.indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = this._minWeekdaysParse.indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = this._weekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._shortWeekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._minWeekdaysParse.indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = this._shortWeekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._weekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._minWeekdaysParse.indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = this._minWeekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._weekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._shortWeekdaysParse.indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  private computeMonthsParse() {\n    const shortPieces: string[] = [];\n    const longPieces: string[] = [];\n    const mixedPieces: string[] = [];\n    let date;\n\n    let i;\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      date = new Date(2000, i);\n      shortPieces.push(this.monthsShort(date, ''));\n      longPieces.push(this.months(date, ''));\n      mixedPieces.push(this.months(date, ''));\n      mixedPieces.push(this.monthsShort(date, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n    this._monthsShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n  }\n\n  private computeWeekdaysParse() {\n    const minPieces = [];\n    const shortPieces = [];\n    const longPieces = [];\n    const mixedPieces = [];\n\n    let i;\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      // let mom = createUTC([2000, 1]).day(i);\n      const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n      const minp = this.weekdaysMin(date);\n      const shortp = this.weekdaysShort(date);\n      const longp = this.weekdays(date);\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n\n    this._weekdaysStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n    this._weekdaysShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n    this._weekdaysMinStrictRegex = new RegExp(`^(${minPieces.join('|')})`, 'i');\n  }\n}\n\nfunction cmpLenRev(a: string, b: string): number {\n  return b.length - a.length;\n}\n","export const defaultCalendar = {\n  sameDay: '[Today at] LT',\n  nextDay: '[Tomorrow at] LT',\n  nextWeek: 'dddd [at] LT',\n  lastDay: '[Yesterday at] LT',\n  lastWeek: '[Last] dddd [at] LT',\n  sameElse: 'L'\n};\n","import {\n  defaultDayOfMonthOrdinalParse,\n  defaultLocaleMonths,\n  defaultLocaleMonthsShort,\n  defaultLocaleWeekdays,\n  defaultLocaleWeekdaysMin,\n  defaultLocaleWeekdaysShort, defaultLongDateFormat, defaultOrdinal,\n  LocaleData\n} from './locale.class';\nimport { defaultCalendar } from './calendar';\n\nexport const defaultInvalidDate = 'Invalid date';\n\nexport const defaultLocaleWeek = {\n  dow: 0, // Sunday is the first day of the week.\n  doy: 6 // The week that contains Jan 1st is the first week of the year.\n};\n\nexport const defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\nexport const defaultRelativeTime: {[key: string]: string} = {\n  future : 'in %s',\n  past   : '%s ago',\n  s  : 'a few seconds',\n  ss : '%d seconds',\n  m  : 'a minute',\n  mm : '%d minutes',\n  h  : 'an hour',\n  hh : '%d hours',\n  d  : 'a day',\n  dd : '%d days',\n  M  : 'a month',\n  MM : '%d months',\n  y  : 'a year',\n  yy : '%d years'\n};\n\nexport const baseConfig: LocaleData = {\n  calendar: defaultCalendar,\n  longDateFormat: defaultLongDateFormat,\n  invalidDate: defaultInvalidDate,\n  ordinal: defaultOrdinal,\n  dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n  relativeTime: defaultRelativeTime,\n\n  months: defaultLocaleMonths,\n  monthsShort: defaultLocaleMonthsShort,\n\n  week: defaultLocaleWeek,\n\n  weekdays: defaultLocaleWeekdays,\n  weekdaysMin: defaultLocaleWeekdaysMin,\n  weekdaysShort: defaultLocaleWeekdaysShort,\n\n  meridiemParse: defaultLocaleMeridiemParse\n};\n","// compare two arrays, return the number of differences\nimport { toInt } from './type-checks';\n\nexport function compareArrays<T>(array1: T[], array2: T[], dontConvert: boolean) {\n  const len = Math.min(array1.length, array2.length);\n  const lengthDiff = Math.abs(array1.length - array2.length);\n  let diffs = 0;\n  let i;\n  for (i = 0; i < len; i++) {\n    if ((dontConvert && array1[i] !== array2[i])\n      || (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n      diffs++;\n    }\n  }\n\n  return diffs + lengthDiff;\n}\n","import { addFormatToken } from '../format/format';\nimport { Locale } from '../locale/locale.class';\nimport { weekOfYear } from './week-calendar-utils';\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { addWeekParseToken } from '../parse/token';\nimport { toInt } from '../utils/type-checks';\nimport { DateFormatterOptions, WeekParsing } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { getLocale } from '../locale/locales';\nimport { add } from '../moment/add-subtract';\n\n// FORMATTING\n\nexport function initWeek() {\n  addFormatToken('w', ['ww', 2, false], 'wo',\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getWeek(date, opts.locale)\n        .toString(10);\n    }\n  );\n\n  addFormatToken('W', ['WW', 2, false], 'Wo',\n    function(date: Date): string {\n      return getISOWeek(date)\n        .toString(10);\n    }\n  );\n\n// ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W');\n\n// PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5);\n\n// PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n\n  addWeekParseToken(\n    ['w', 'ww', 'W', 'WW'],\n    function(input: string, week: WeekParsing, config: DateParsingConfig, token: string): DateParsingConfig {\n      week[token.substr(0, 1)] = toInt(input);\n\n      return config;\n    }\n  );\n\n// export function getSetWeek (input) {\n//   var week = this.localeData().week(this);\n//   return input == null ? week : this.add((input - week) * 7, 'd');\n// }\n}\n\nexport function setWeek(date: Date, input: number, locale = getLocale()): Date {\n  const week = getWeek(date, locale);\n\n  return add(date, (input - week) * 7, 'day');\n}\n\nexport function getWeek(date: Date, locale = getLocale(), isUTC?: boolean): number {\n  return locale.week(date, isUTC);\n}\n\n// export function getSetISOWeek (input) {\n//   var week = weekOfYear(this, 1, 4).week;\n//   return input == null ? week : this.add((input - week) * 7, 'd');\n// }\n\nexport function setISOWeek(date: Date, input: number): Date {\n  const week = getISOWeek(date);\n\n  return add(date, (input - week) * 7, 'day');\n}\n\nexport function getISOWeek(date: Date, isUTC?: boolean): number {\n  return weekOfYear(date, 1, 4, isUTC).week;\n}\n","import { addFormatToken } from '../format/format';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { addRegexToken, match1to2, match1to4, match1to6, match2, match4, match6, matchSigned } from '../parse/regex';\nimport { addWeekParseToken } from '../parse/token';\nimport { toInt } from '../utils/type-checks';\nimport { parseTwoDigitYear } from './year';\nimport { dayOfYearFromWeeks, weekOfYear, weeksInYear } from './week-calendar-utils';\nimport { createUTCDate } from '../create/date-from-array';\nimport { getISOWeek, getWeek } from './week';\nimport { getISODayOfWeek, getLocaleDayOfWeek } from './day-of-week';\nimport { getLocale } from '../locale/locales';\nimport { setDate, setFullYear, setMonth } from '../utils/date-setters';\nimport { getDate, getFullYear, getMonth } from '../utils/date-getters';\nimport { Locale } from '../locale/locale.class';\nimport { DateFormatterFn, DateFormatterOptions, WeekParsing } from '../types';\n\n// FORMATTING\n\nexport function initWeekYear() {\n  addFormatToken(null, ['gg', 2, false], null,\n    function (date: Date, opts: DateFormatterOptions): string {\n      // return this.weekYear() % 100;\n      return (getWeekYear(date, opts.locale) % 100).toString();\n    }\n  );\n\n  addFormatToken(null, ['GG', 2, false], null,\n    function (date: Date): string {\n      // return this.isoWeekYear() % 100;\n      return (getISOWeekYear(date) % 100).toString();\n    }\n  );\n\n  addWeekYearFormatToken('gggg', _getWeekYearFormatCb);\n  addWeekYearFormatToken('ggggg', _getWeekYearFormatCb);\n  addWeekYearFormatToken('GGGG', _getISOWeekYearFormatCb);\n  addWeekYearFormatToken('GGGGG', _getISOWeekYearFormatCb);\n\n// ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG');\n\n// PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1);\n\n\n// PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'],\n    function (input, week: WeekParsing, config, token) {\n      week[token.substr(0, 2)] = toInt(input);\n\n      return config;\n    });\n\n  addWeekParseToken(['gg', 'GG'], function (input, week: WeekParsing, config, token) {\n    week[token] = parseTwoDigitYear(input);\n\n    return config;\n  });\n}\n\nfunction addWeekYearFormatToken(token: string, getter: DateFormatterFn): void {\n  addFormatToken(null, [token, token.length, false], null, getter);\n}\n\nfunction _getWeekYearFormatCb(date: Date, opts: DateFormatterOptions): string {\n  return getWeekYear(date, opts.locale).toString();\n}\n\nfunction _getISOWeekYearFormatCb(date: Date): string {\n  return getISOWeekYear(date).toString();\n}\n\n// MOMENTS\n\nexport function getSetWeekYear(date: Date, input: number, locale = getLocale(), isUTC?: boolean): number | Date {\n  return getSetWeekYearHelper(date,\n    input,\n    // this.week(),\n    getWeek(date, locale, isUTC),\n    // this.weekday(),\n    getLocaleDayOfWeek(date, locale, isUTC),\n    locale.firstDayOfWeek(),\n    locale.firstDayOfYear(),\n    isUTC);\n}\n\nexport function getWeekYear(date: Date, locale = getLocale(), isUTC?: boolean): number {\n  return weekOfYear(date, locale.firstDayOfWeek(), locale.firstDayOfYear(), isUTC).year;\n}\n\nexport function getSetISOWeekYear(date: Date, input: number, isUTC?: boolean): number | Date {\n  return getSetWeekYearHelper(date, input, getISOWeek(date, isUTC), getISODayOfWeek(date, isUTC), 1, 4);\n}\n\nexport function getISOWeekYear(date: Date, isUTC?: boolean): number {\n  return weekOfYear(date, 1, 4, isUTC).year;\n}\n\nexport function getISOWeeksInYear(date: Date, isUTC?: boolean) {\n  return weeksInYear(getFullYear(date, isUTC), 1, 4);\n}\n\nexport function getWeeksInYear(date: Date, isUTC?: boolean, locale: Locale = getLocale()): number {\n  return weeksInYear(getFullYear(date, isUTC), locale.firstDayOfWeek(), locale.firstDayOfYear());\n}\n\nfunction getSetWeekYearHelper(date: Date, input: number, week: number,\n                              weekday: number, dow: number, doy: number, isUTC?: boolean): number | Date {\n  if (!input) {\n    return getWeekYear(date, void 0, isUTC);\n  }\n\n  const weeksTarget = weeksInYear(input, dow, doy);\n  const _week = week > weeksTarget ? weeksTarget : week;\n\n  return setWeekAll(date, input, _week, weekday, dow, doy);\n}\n\nfunction setWeekAll(date: Date, weekYear: number, week: number,\n                    weekday: number, dow: number, doy: number): Date {\n  const dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n  const _date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n  setFullYear(date, getFullYear(_date, true), true);\n  setMonth(date, getMonth(_date, true), true);\n  setDate(date, getDate(_date, true), true);\n\n  return date;\n}\n","import { addFormatToken } from '../format/format';\nimport { DateFormatterOptions } from '../types';\n\n// todo: add support for timezones\n\nexport function initTimezone() {\n  // FORMATTING\n  addFormatToken('z', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return opts.isUTC ? 'UTC' : '';\n    }\n  );\n  addFormatToken('zz', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return opts.isUTC ? 'Coordinated Universal Time' : '';\n    }\n  );\n}\n\n// MOMENTS\n\nexport function getZoneAbbr(isUTC: boolean) {\n  return isUTC ? 'UTC' : '';\n}\n\nexport function getZoneName(isUTC: boolean) {\n  return isUTC ? 'Coordinated Universal Time' : '';\n}\n","import { addFormatToken } from '../format/format';\nimport { unix } from '../utils/date-getters';\nimport { addRegexToken, matchSigned, matchTimestamp } from '../parse/regex';\nimport { addParseToken} from '../parse/token';\nimport { toInt } from '../utils/type-checks';\nimport { DateArray } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\n\n\nexport function initTimestamp() {\n// FORMATTING\n\n  addFormatToken('X', null, null, function(date: Date): string {\n    return unix(date)\n      .toString(10);\n  });\n  addFormatToken('x', null, null, function(date: Date): string {\n    return date.valueOf()\n      .toString(10);\n  });\n\n// PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n\n  addParseToken('X', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    config._d = new Date(parseFloat(input) * 1000);\n\n    return config;\n  });\n  addParseToken('x', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    config._d = new Date(toInt(input));\n\n    return config;\n  });\n}\n","import { addFormatToken } from '../format/format';\nimport { getSeconds } from '../utils/date-getters';\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { SECOND } from './constants';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { DateFormatterOptions } from '../types';\n\n\nexport function initSecond() {\n// FORMATTING\n\n  addFormatToken('s', ['ss', 2, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getSeconds(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n\n// ALIASES\n\n  addUnitAlias('second', 's');\n\n// PRIORITY\n\n  addUnitPriority('second', 15);\n\n// PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND);\n}\n","import { addFormatToken } from '../format/format';\nimport { addRegexToken, match1 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { MONTH } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { getMonth } from '../utils/date-getters';\nimport { DateArray, DateFormatterOptions } from '../types';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { setMonth } from '../utils/date-setters';\n\n\nexport function initQuarter() {\n// FORMATTING\n\n  addFormatToken('Q', null, 'Qo',\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getQuarter(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n\n// ALIASES\n\n  addUnitAlias('quarter', 'Q');\n\n// PRIORITY\n\n  addUnitPriority('quarter', 7);\n\n// PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    array[MONTH] = (toInt(input) - 1) * 3;\n\n    return config;\n  });\n}\n\n// MOMENTS\n\nexport function getQuarter(date: Date, isUTC = false): number {\n  return Math.ceil((getMonth(date, isUTC) + 1) / 3);\n}\n\nexport function setQuarter(date: Date, quarter: number, isUTC?: boolean): Date {\n  return setMonth(date, (quarter - 1) * 3 + getMonth(date, isUTC) % 3, isUTC);\n}\n\n// export function getSetQuarter(input) {\n//   return input == null\n//     ? Math.ceil((this.month() + 1) / 3)\n//     : this.month((input - 1) * 3 + this.month() % 3);\n// }\n","// tslint:disable:no-bitwise max-line-length\n// FORMATTING\n\nimport { addFormatToken } from '../format/format';\nimport { zeroFill } from '../utils/zero-fill';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { isNumber, isString, toInt } from '../utils/type-checks';\nimport { addRegexToken, matchOffset, matchShortOffset } from '../parse/regex';\nimport { add } from '../moment/add-subtract';\nimport { addParseToken } from '../parse/token';\nimport { DateArray } from '../types';\nimport { cloneDate } from '../create/clone';\nimport { setMonth } from '../utils/date-setters';\n\nfunction addOffsetFormatToken(token: string, separator: string): void {\n  addFormatToken(token, null, null, function (date: Date, config): string {\n    let offset = getUTCOffset(date, {_isUTC: config.isUTC, _offset: config.offset});\n    let sign = '+';\n    if (offset < 0) {\n      offset = -offset;\n      sign = '-';\n    }\n\n    return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n  });\n}\n\nexport function initOffset() {\n  addOffsetFormatToken('Z', ':');\n  addOffsetFormatToken('ZZ', '');\n\n// PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n\n    return config;\n  });\n}\n\n// HELPERS\n\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nconst chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\nfunction offsetFromString(matcher: RegExp, str: string): number {\n  const matches = (str || '').match(matcher);\n\n  if (matches === null) {\n    return null;\n  }\n\n  const chunk = matches[matches.length - 1];\n  const parts = chunk.match(chunkOffset) || ['-', '0', '0'];\n  const minutes = parseInt(parts[1], 10) * 60 + toInt(parts[2]);\n  const _min = parts[0] === '+' ? minutes : -minutes;\n\n  return minutes === 0 ? 0 : _min;\n}\n\n// Return a moment from input, that is local/utc/zone equivalent to model.\nexport function cloneWithOffset(input: Date, date: Date,\n                                config: DateParsingConfig = {}): Date {\n  if (!config._isUTC) {\n    return input;\n  }\n\n  const res = cloneDate(date);\n  // todo: input._d - res._d + ((res._offset || 0) - (input._offset || 0))*60000\n  const offsetDiff = (config._offset || 0) * 60000;\n  const diff = input.valueOf() - res.valueOf() + offsetDiff;\n  // Use low-level api, because this fn is low-level api.\n  res.setTime(res.valueOf() + diff);\n  // todo: add timezone handling\n  // hooks.updateOffset(res, false);\n\n  return res;\n}\n\nexport function getDateOffset(date: Date): number {\n  // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n  // https://github.com/moment/moment/pull/1871\n  return -Math.round(date.getTimezoneOffset() / 15) * 15;\n}\n\n// HOOKS\n\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\n// todo: it's from moment timezones\n// hooks.updateOffset = function () {\n// };\n\n// MOMENTS\n\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nexport function getUTCOffset(date: Date, config: DateParsingConfig = {}): number {\n  const _offset = config._offset || 0;\n\n  return config._isUTC ? _offset : getDateOffset(date);\n}\n\nexport function setUTCOffset(date: Date, input: number | string, keepLocalTime?: boolean, keepMinutes?: boolean, config: DateParsingConfig = {}): Date {\n  const offset = config._offset || 0;\n  let localAdjust;\n  let _input = input;\n  let _date = date;\n\n  if (isString(_input)) {\n    _input = offsetFromString(matchShortOffset, _input);\n    if (_input === null) {\n      return _date;\n    }\n  } else if (isNumber(_input) && Math.abs(_input) < 16 && !keepMinutes) {\n    _input = _input * 60;\n  }\n\n  if (!config._isUTC && keepLocalTime) {\n    localAdjust = getDateOffset(_date);\n  }\n  config._offset = _input;\n  config._isUTC = true;\n  if (localAdjust != null) {\n    _date = add(_date, localAdjust, 'minutes');\n  }\n  if (offset !== _input) {\n    if (!keepLocalTime || config._changeInProgress) {\n      _date = add(_date, _input - offset, 'minutes', config._isUTC);\n      // addSubtract(this, createDuration(_input - offset, 'm'), 1, false);\n    } else if (!config._changeInProgress) {\n      config._changeInProgress = true;\n      // todo: add timezone handling\n      // hooks.updateOffset(this, true);\n      config._changeInProgress = null;\n    }\n  }\n\n  return _date;\n}\n\n/*\nexport function getSetZone(input, keepLocalTime) {\n  if (input != null) {\n    if (typeof input !== 'string') {\n      input = -input;\n    }\n\n    this.utcOffset(input, keepLocalTime);\n\n    return this;\n  } else {\n    return -this.utcOffset();\n  }\n}\n*/\n\nexport function setOffsetToUTC(date: Date, keepLocalTime?: boolean): Date {\n  return setUTCOffset(date, 0, keepLocalTime);\n}\n\nexport function isDaylightSavingTime(date: Date): boolean {\n\n  return (getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 0))\n    || getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 5)));\n}\n\n/*export function setOffsetToLocal(date: Date, isUTC?: boolean, keepLocalTime?: boolean) {\n  if (this._isUTC) {\n    this.utcOffset(0, keepLocalTime);\n    this._isUTC = false;\n\n    if (keepLocalTime) {\n      this.subtract(getDateOffset(this), 'm');\n    }\n  }\n  return this;\n}*/\n\nexport function setOffsetToParsedOffset(date: Date, input: string, config: DateParsingConfig = {}): Date {\n  if (config._tzm != null) {\n    return setUTCOffset(date, config._tzm, false, true, config);\n  }\n\n  if (isString(input)) {\n    const tZone = offsetFromString(matchOffset, input);\n    if (tZone != null) {\n      return setUTCOffset(date, tZone, false, false, config);\n    }\n\n    return setUTCOffset(date, 0, true, false, config);\n  }\n\n  return date;\n}\n\nexport function hasAlignedHourOffset(date: Date, input?: Date) {\n  const _input = input ? getUTCOffset(input, { _isUTC: false }) : 0;\n\n  return (getUTCOffset(date) - _input) % 60 === 0;\n}\n\n\n// DEPRECATED\n/*export function isDaylightSavingTimeShifted() {\n  if (!isUndefined(this._isDSTShifted)) {\n    return this._isDSTShifted;\n  }\n\n  const c = {};\n\n  copyConfig(c, this);\n  c = prepareConfig(c);\n\n  if (c._a) {\n    const other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n    this._isDSTShifted = this.isValid() &&\n      compareArrays(c._a, other.toArray()) > 0;\n  } else {\n    this._isDSTShifted = false;\n  }\n\n  return this._isDSTShifted;\n}*/\n\n// in Khronos\n/*export function isLocal() {\n  return this.isValid() ? !this._isUTC : false;\n}\n\nexport function isUtcOffset() {\n  return this.isValid() ? this._isUTC : false;\n}\n\nexport function isUtc() {\n  return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}*/\n","import { addFormatToken } from '../format/format';\nimport { getMinutes } from '../utils/date-getters';\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { MINUTE } from './constants';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\nimport { DateFormatterOptions } from '../types';\n\n\nexport function initMinute() {\n// FORMATTING\n\n  addFormatToken('m', ['mm', 2, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getMinutes(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n\n// ALIASES\n\n  addUnitAlias('minute', 'm');\n\n// PRIORITY\n\n  addUnitPriority('minute', 14);\n\n// PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE);\n}\n","// tslint:disable:no-bitwise\n// FORMATTING\n\nimport { addFormatToken } from '../format/format';\nimport { addRegexToken, match1, match1to3, match2, match3, matchUnsigned } from '../parse/regex';\nimport { MILLISECOND } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { addParseToken } from '../parse/token';\nimport { DateArray, DateFormatterOptions, WeekParsing } from '../types';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { getMilliseconds } from '../utils/date-getters';\n\n\nexport function initMillisecond() {\n  addFormatToken('S', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (~~(getMilliseconds(date, opts.isUTC) / 100)).toString(10);\n    }\n  );\n\n  addFormatToken(null, ['SS', 2, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (~~(getMilliseconds(date, opts.isUTC) / 10)).toString(10);\n    }\n  );\n\n  addFormatToken(null, ['SSS', 3, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (getMilliseconds(date, opts.isUTC)).toString(10);\n    }\n  );\n  addFormatToken(null, ['SSSS', 4, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (getMilliseconds(date, opts.isUTC) * 10).toString(10);\n    }\n  );\n  addFormatToken(null, ['SSSSS', 5, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (getMilliseconds(date, opts.isUTC) * 100).toString(10);\n    }\n  );\n  addFormatToken(null, ['SSSSSS', 6, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (getMilliseconds(date, opts.isUTC) * 1000).toString(10);\n    }\n  );\n  addFormatToken(null, ['SSSSSSS', 7, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (getMilliseconds(date, opts.isUTC) * 10000).toString(10);\n    }\n  );\n  addFormatToken(null, ['SSSSSSSS', 8, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (getMilliseconds(date, opts.isUTC) * 100000).toString(10);\n    }\n  );\n  addFormatToken(null, ['SSSSSSSSS', 9, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (getMilliseconds(date, opts.isUTC) * 1000000).toString(10);\n    }\n  );\n\n\n// ALIASES\n\n  addUnitAlias('millisecond', 'ms');\n\n// PRIORITY\n\n  addUnitPriority('millisecond', 16);\n\n// PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n\n  let token;\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    array[MILLISECOND] = toInt(parseFloat(`0.${input}`) * 1000);\n\n    return config;\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  }\n// MOMENTS\n}\n","import { getHours, getMinutes, getSeconds } from '../utils/date-getters';\nimport { addFormatToken } from '../format/format';\nimport { zeroFill } from '../utils/zero-fill';\nimport { Locale } from '../locale/locale.class';\nimport { addRegexToken, match1to2, match2, match3to4, match5to6 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { HOUR, MINUTE, SECOND } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { DateArray, DateFormatterOptions } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { getParsingFlags } from '../create/parsing-flags';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\n\n\nexport function initHour() {\n// FORMATTING\n\n  function hFormat(date: Date, isUTC: boolean): number {\n    return getHours(date, isUTC) % 12 || 12;\n  }\n\n  function kFormat(date: Date, isUTC: boolean): number {\n    return getHours(date, isUTC) || 24;\n  }\n\n  addFormatToken('H', ['HH', 2, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getHours(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n  addFormatToken('h', ['hh', 2, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return hFormat(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n  addFormatToken('k', ['kk', 2, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return kFormat(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n\n  addFormatToken('hmm', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      const _h = hFormat(date, opts.isUTC);\n      const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n\n      return `${_h}${_mm}`;\n    }\n  );\n\n  addFormatToken('hmmss', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      const _h = hFormat(date, opts.isUTC);\n      const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n      const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n\n      return `${_h}${_mm}${_ss}`;\n    }\n  );\n\n  addFormatToken('Hmm', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      const _H = getHours(date, opts.isUTC);\n      const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n\n      return `${_H}${_mm}`;\n    }\n  );\n\n  addFormatToken('Hmmss', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      const _H = getHours(date, opts.isUTC);\n      const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n      const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n\n      return `${_H}${_mm}${_ss}`;\n    }\n  );\n\n  function meridiem(token: string, lowercase: boolean): void {\n    addFormatToken(token, null, null,\n      function(date: Date, opts: DateFormatterOptions): string {\n        return opts.locale.meridiem(getHours(date, opts.isUTC), getMinutes(date, opts.isUTC), lowercase);\n      }\n    );\n  }\n\n  meridiem('a', true);\n  meridiem('A', false);\n\n// ALIASES\n\n  addUnitAlias('hour', 'h');\n\n// PRIORITY\n  addUnitPriority('hour', 13);\n\n\n// PARSING\n\n  function matchMeridiem(isStrict: boolean, locale: Locale): RegExp {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(\n    ['k', 'kk'],\n    function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n      const kInput = toInt(input);\n      array[HOUR] = kInput === 24 ? 0 : kInput;\n\n      return config;\n    }\n  );\n  addParseToken(['a', 'A'], function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n\n    return config;\n  });\n  addParseToken(['h', 'hh'], function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n\n    return config;\n  });\n  addParseToken('hmm', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    const pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n\n    return config;\n  });\n  addParseToken('hmmss', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    const pos1 = input.length - 4;\n    const pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n\n    return config;\n  });\n  addParseToken('Hmm', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    const pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n\n    return config;\n  });\n  addParseToken('Hmmss', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    const pos1 = input.length - 4;\n    const pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n\n    return config;\n  });\n\n}\n","// internal storage for locale config files\nimport { Locale, LocaleData } from './locale.class';\nimport { baseConfig } from './locale.defaults';\nimport { hasOwnProp, isArray, isObject, isString, isUndefined, toInt } from '../utils/type-checks';\nimport { compareArrays } from '../utils/compare-arrays';\n\nimport { initWeek } from '../units/week';\nimport { initWeekYear } from '../units/week-year';\nimport { initYear } from '../units/year';\nimport { initTimezone } from '../units/timezone';\nimport { initTimestamp } from '../units/timestamp';\nimport { initSecond } from '../units/second';\nimport { initQuarter } from '../units/quarter';\nimport { initOffset } from '../units/offset';\nimport { initMinute } from '../units/minute';\nimport { initMillisecond } from '../units/millisecond';\nimport { initMonth } from '../units/month';\nimport { initHour } from '../units/hour';\nimport { initDayOfYear } from '../units/day-of-year';\nimport { initDayOfWeek } from '../units/day-of-week';\nimport { initDayOfMonth } from '../units/day-of-month';\n\nconst locales: { [key: string]: Locale } = {};\nconst localeFamilies: { [key: string]: {name: string; config: LocaleData}[] } = {};\nlet globalLocale: Locale;\n\nfunction normalizeLocale(key: string): string {\n  return key ? key.toLowerCase().replace('_', '-') : key;\n}\n\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least,\n// but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names: string[]): Locale {\n  let next;\n  let locale;\n  let i = 0;\n\n  while (i < names.length) {\n    const split = normalizeLocale(names[i]).split('-');\n    let j = split.length;\n    next = normalizeLocale(names[i + 1]);\n    next = next ? next.split('-') : null;\n    while (j > 0) {\n      locale = loadLocale(split.slice(0, j).join('-'));\n      if (locale) {\n        return locale;\n      }\n      if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n        // the next array item is better than a shallower substring of this one\n        break;\n      }\n      j--;\n    }\n    i++;\n  }\n\n  return null;\n}\n\nexport function mergeConfigs(parentConfig: LocaleData,\n                             childConfig: LocaleData) {\n  const res: LocaleData = Object.assign({}, parentConfig);\n\n  for (const childProp in childConfig) {\n    if (!hasOwnProp(childConfig, childProp)) {\n      continue;\n    }\n\n    if (isObject(parentConfig[childProp]) && isObject(childConfig[childProp])) {\n      res[childProp as any] = {};\n      Object.assign(res[childProp], parentConfig[childProp]);\n      Object.assign(res[childProp], childConfig[childProp]);\n    } else if (childConfig[childProp] != null) {\n      res[childProp as any] = childConfig[childProp];\n    } else {\n      delete res[childProp as any];\n    }\n  }\n  for (const parentProp in parentConfig) {\n    if (\n      hasOwnProp(parentConfig, parentProp) &&\n      !hasOwnProp(childConfig, parentProp) &&\n      isObject(parentConfig[parentProp as keyof LocaleData])\n    ) {\n      // make sure changes to properties don't modify parent config\n      res[parentProp as any] = Object.assign({}, res[parentProp as keyof LocaleData]);\n    }\n  }\n\n  return res;\n}\n\n\nfunction loadLocale(name: string): Locale {\n  // no way!\n  /* var oldLocale = null;\n   // TODO: Find a better way to register and load all the locales in Node\n   if (!locales[name] && (typeof module !== 'undefined') &&\n     module && module.exports) {\n     try {\n       oldLocale = globalLocale._abbr;\n       var aliasedRequire = require;\n       aliasedRequire('./locale/' + name);\n       getSetGlobalLocale(oldLocale);\n     } catch (e) {}\n   }*/\n  if (!locales[name]) {\n    // tslint:disable-next-line\n    console.error(`Khronos locale error: please load locale \"${name}\" before using it`);\n    // throw new Error(`Khronos locale error: please load locale \"${name}\" before using it`);\n  }\n\n  return locales[name];\n}\n\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nexport function getSetGlobalLocale(key?: string | string[], values?: LocaleData): string {\n  let data: Locale;\n\n  if (key) {\n    if (isUndefined(values)) {\n      data = getLocale(key);\n    } else if (isString(key)) {\n      data = defineLocale(key, values);\n    }\n\n    if (data) {\n      globalLocale = data;\n    }\n  }\n\n  return globalLocale && globalLocale._abbr;\n}\n\nexport function defineLocale(name: string, config?: LocaleData): Locale {\n  if (config === null) {\n    // useful for testing\n    delete locales[name];\n    globalLocale = getLocale('en');\n\n    return null;\n  }\n\n  if (!config) {\n    return;\n  }\n\n  let parentConfig = baseConfig;\n  config.abbr = name;\n  if (config.parentLocale != null) {\n    if (locales[config.parentLocale] != null) {\n      parentConfig = locales[config.parentLocale]._config;\n    } else {\n      if (!localeFamilies[config.parentLocale]) {\n        localeFamilies[config.parentLocale] = [];\n      }\n      localeFamilies[config.parentLocale].push({ name, config });\n\n      return null;\n    }\n  }\n\n  locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n  if (localeFamilies[name]) {\n    localeFamilies[name].forEach(function (x) {\n      defineLocale(x.name, x.config);\n    });\n  }\n\n  // backwards compat for now: also set the locale\n  // make sure we set the locale AFTER all child locales have been\n  // created, so we won't end up with the child locale set.\n  getSetGlobalLocale(name);\n\n\n  return locales[name];\n}\n\nexport function updateLocale(name: string, config?: LocaleData): Locale {\n  let _config = config;\n\n  if (_config != null) {\n    let parentConfig = baseConfig;\n    // MERGE\n    const tmpLocale = loadLocale(name);\n    if (tmpLocale != null) {\n      parentConfig = tmpLocale._config;\n    }\n    _config = mergeConfigs(parentConfig, _config);\n    const locale = new Locale(_config);\n    locale.parentLocale = locales[name];\n    locales[name] = locale;\n\n    // backwards compat for now: also set the locale\n    getSetGlobalLocale(name);\n  } else {\n    // pass null for config to unupdate, useful for tests\n    if (locales[name] != null) {\n      if (locales[name].parentLocale != null) {\n        locales[name] = locales[name].parentLocale;\n      } else if (locales[name] != null) {\n        delete locales[name];\n      }\n    }\n  }\n\n  return locales[name];\n}\n\n// returns locale data\nexport function getLocale(key?: string | string[]): Locale {\n  setDefaultLocale();\n\n  if (!key) {\n    return globalLocale;\n  }\n  // let locale;\n  const _key = isArray(key) ? key : [key];\n\n  return chooseLocale(_key);\n}\n\nexport function listLocales(): string[] {\n  return Object.keys(locales);\n}\n\nfunction setDefaultLocale(): void {\n  if (locales[`en`]) {\n\n    return undefined;\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal(num: number): string {\n      const b = num % 10;\n      const output =\n        toInt((num % 100) / 10) === 1\n          ? 'th'\n          : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n\n      return num + output;\n    }\n  });\n\n  initWeek();\n  initWeekYear();\n  initYear();\n  initTimezone();\n  initTimestamp();\n  initSecond();\n  initQuarter();\n  initOffset();\n  initMonth();\n  initMinute();\n  initMillisecond();\n  initHour();\n  initDayOfYear();\n  initDayOfWeek();\n  initDayOfMonth();\n}\n","import { toInt } from '../utils/type-checks';\nimport { createDuration } from './create';\nimport { Duration } from './constructor';\nimport { DateObject } from '../types';\n\nconst ordering: (keyof DateObject)[] = ['year', 'quarter', 'month', 'week', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'];\nconst orderingHash = ordering.reduce((mem: { [key: string]: boolean }, order) => {\n  mem[order] = true;\n\n  return mem;\n}, {});\n\nexport function isDurationValid(duration: Partial<DateObject>): boolean {\n  const durationKeys = Object.keys(duration);\n  if (durationKeys\n      .some((key: keyof DateObject) => {\n        return (key in orderingHash)\n          && duration[key] === null\n          || isNaN(duration[key]);\n      })) {\n    return false;\n  }\n  // for (let key in duration) {\n  //   if (!(indexOf.call(ordering, key) !== -1 && (duration[key] == null || !isNaN(duration[key])))) {\n  //     return false;\n  //   }\n  // }\n\n  let unitHasDecimal = false;\n  for (let i = 0; i < ordering.length; ++i) {\n    if (duration[ordering[i]]) {\n      // only allow non-integers for smallest unit\n      if (unitHasDecimal) {\n        return false;\n      }\n      if (duration[ordering[i]] !== toInt(duration[ordering[i]])) {\n        unitHasDecimal = true;\n      }\n    }\n  }\n\n  return true;\n}\n\n// export function isValid() {\n//   return this._isValid;\n// }\n//\n// export function createInvalid(): Duration {\n//   return createDuration(NaN);\n// }\n","export function absCeil (number: number): number {\n  return number < 0 ? Math.floor(number) : Math.ceil(number);\n}\n","import { Duration } from './constructor';\nimport { absFloor } from '../utils';\nimport { absCeil } from '../utils/abs-ceil';\n\nexport function bubble(dur: Duration): Duration {\n  let milliseconds = dur._milliseconds;\n  let days = dur._days;\n  let months = dur._months;\n  const data = dur._data;\n\n  // if we have a mix of positive and negative values, bubble down first\n  // check: https://github.com/moment/moment/issues/2166\n  if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n      (milliseconds <= 0 && days <= 0 && months <= 0))) {\n    milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n    days = 0;\n    months = 0;\n  }\n\n  // The following code bubbles up values, see the tests for\n  // examples of what that means.\n  data.milliseconds = milliseconds % 1000;\n\n  const seconds = absFloor(milliseconds / 1000);\n  data.seconds = seconds % 60;\n\n  const minutes = absFloor(seconds / 60);\n  data.minutes = minutes % 60;\n\n  const hours = absFloor(minutes / 60);\n  data.hours = hours % 24;\n\n  days += absFloor(hours / 24);\n\n  // convert days to months\n  const monthsFromDays = absFloor(daysToMonths(days));\n  months += monthsFromDays;\n  days -= absCeil(monthsToDays(monthsFromDays));\n\n  // 12 months -> 1 year\n  const years = absFloor(months / 12);\n  months %= 12;\n\n  data.day = days;\n  data.month = months;\n  data.year = years;\n\n  return dur;\n}\n\nexport function daysToMonths(day: number): number {\n  // 400 years have 146097 days (taking into account leap year rules)\n  // 400 years have 12 months === 4800\n  return day * 4800 / 146097;\n}\n\nexport function monthsToDays(month: number): number {\n  // the reverse of daysToMonths\n  return month * 146097 / 4800;\n}\n","// tslint:disable:cyclomatic-complexity\nimport { createDuration } from './create';\nimport { Locale } from '../locale/locale.class';\nimport { Duration } from './constructor';\n\nlet round = Math.round;\nconst thresholds: { [key: string]: number } = {\n  ss: 44,         // a few seconds to seconds\n  s: 45,         // seconds to minute\n  m: 45,         // minutes to hour\n  h: 22,         // hours to day\n  d: 26,         // days to month\n  M: 11          // months to year\n};\n\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(str: 'future' | 'past', num: number,\n                           withoutSuffix: boolean, isFuture: boolean,\n                           locale: Locale): string {\n  return locale.relativeTime(num || 1, !!withoutSuffix, str, isFuture);\n}\n\nexport function relativeTime(posNegDuration: Duration, withoutSuffix: boolean, locale: Locale): string {\n  const duration = createDuration(posNegDuration).abs();\n  const seconds = round(duration.as('s'));\n  const minutes = round(duration.as('m'));\n  const hours = round(duration.as('h'));\n  const days = round(duration.as('d'));\n  const months = round(duration.as('M'));\n  const years = round(duration.as('y'));\n\n  const a: [string] | [string, number] =\n    seconds <= thresholds.ss && ['s', seconds] ||\n    seconds < thresholds.s && ['ss', seconds] ||\n    minutes <= 1 && ['m'] ||\n    minutes < thresholds.m && ['mm', minutes] ||\n    hours <= 1 && ['h'] ||\n    hours < thresholds.h && ['hh', hours] ||\n    days <= 1 && ['d'] ||\n    days < thresholds.d && ['dd', days] ||\n    months <= 1 && ['M'] ||\n    months < thresholds.M && ['MM', months] ||\n    years <= 1 && ['y'] || ['yy', years];\n\n  const b: [string, number | string, boolean, boolean, Locale] =\n    [a[0], a[1], withoutSuffix, +posNegDuration > 0, locale];\n  // a[2] = withoutSuffix;\n  // a[3] = +posNegDuration > 0;\n  // a[4] = locale;\n\n  return substituteTimeAgo.apply(null, b);\n}\n\n// This function allows you to set the rounding function for relative time strings\nexport function getSetRelativeTimeRounding(roundingFunction: any): boolean | Function {\n  if (roundingFunction === undefined) {\n    return round;\n  }\n  if (typeof(roundingFunction) === 'function') {\n    round = roundingFunction;\n\n    return true;\n  }\n\n  return false;\n}\n\n// This function allows you to set a threshold for relative time strings\nexport function getSetRelativeTimeThreshold(threshold: string, limit: number): boolean | number {\n  if (thresholds[threshold] === undefined) {\n    return false;\n  }\n  if (limit === undefined) {\n    return thresholds[threshold];\n  }\n  thresholds[threshold] = limit;\n  if (threshold === 's') {\n    thresholds.ss = limit - 1;\n  }\n\n  return true;\n}\n\n// export function humanize(withSuffix) {\n//   if (!this.isValid()) {\n//     return this.localeData().invalidDate();\n//   }\n//\n//   const locale = this.localeData();\n//   let output = relativeTime(this, !withSuffix, locale);\n//\n//   if (withSuffix) {\n//     output = locale.pastFuture(+this, output);\n//   }\n//\n//   return locale.postformat(output);\n// }\n","import { getLocale } from '../locale/locales';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { isDurationValid } from './valid';\nimport { bubble, daysToMonths, monthsToDays } from './bubble';\nimport { DateObject } from '../types';\nimport { Locale } from '../locale/locale.class';\nimport { normalizeUnits } from '../units/aliases';\nimport { relativeTime } from './humanize';\nimport { toInt } from '../utils/type-checks';\n\nexport class Duration {\n  _milliseconds: number;\n  _days: number;\n  _months: number;\n  _data: Partial<DateObject> = {};\n  _locale: Locale = getLocale();\n  _isValid: boolean;\n\n  constructor(duration: Partial<DateObject>, config: DateParsingConfig = {}) {\n    this._locale = config && config._locale || getLocale();\n    // const normalizedInput = normalizeObjectUnits(duration);\n    const normalizedInput = duration;\n    const years = normalizedInput.year || 0;\n    const quarters = normalizedInput.quarter || 0;\n    const months = normalizedInput.month || 0;\n    const weeks = normalizedInput.week || 0;\n    const days = normalizedInput.day || 0;\n    const hours = normalizedInput.hours || 0;\n    const minutes = normalizedInput.minutes || 0;\n    const seconds = normalizedInput.seconds || 0;\n    const milliseconds = normalizedInput.milliseconds || 0;\n\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds +\n      seconds * 1000 +\n      minutes * 60 * 1000 + // 1000 * 60\n      hours * 1000 * 60 * 60; // using 1000 * 60 * 60\n    // instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days +\n      weeks * 7;\n    // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months +\n      quarters * 3 +\n      years * 12;\n\n    // this._data = {};\n\n    // this._locale = getLocale();\n\n    // this._bubble();\n    return bubble(this);\n  }\n\n  isValid(): boolean {\n    return this._isValid;\n  }\n\n  humanize(withSuffix?: boolean): string {\n    // throw new Error(`TODO: implement`);\n\n    if (!this.isValid()) {\n      return this.localeData().invalidDate;\n    }\n\n    const locale = this.localeData();\n    let output = relativeTime(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  localeData(): Locale {\n    return this._locale;\n  }\n\n  locale(): string;\n  locale(localeKey: string): Duration;\n  locale(localeKey?: string): Duration | string {\n    if (!localeKey) {\n      return this._locale._abbr;\n    }\n\n    this._locale = getLocale(localeKey) || this._locale;\n\n    return this;\n  }\n\n\n  abs(): Duration {\n    const mathAbs = Math.abs;\n\n    const data = this._data;\n\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.month = mathAbs(data.month);\n    data.year = mathAbs(data.year);\n\n    return this;\n  }\n\n  as(_units: string): number {\n    if (!this.isValid()) {\n      return NaN;\n    }\n    let days;\n    let months;\n    const milliseconds = this._milliseconds;\n\n    const units = normalizeUnits(_units);\n\n    if (units === 'month' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      return units === 'month' ? months : months / 12;\n    }\n\n    // handle milliseconds separately because of floating point math errors (issue #1867)\n    days = this._days + Math.round(monthsToDays(this._months));\n    switch (units) {\n      case 'week'   :\n        return days / 7 + milliseconds / 6048e5;\n      case 'day'    :\n        return days + milliseconds / 864e5;\n      case 'hours'   :\n        return days * 24 + milliseconds / 36e5;\n      case 'minutes' :\n        return days * 1440 + milliseconds / 6e4;\n      case 'seconds' :\n        return days * 86400 + milliseconds / 1000;\n      // Math.floor prevents floating point math errors here\n      case 'milliseconds':\n        return Math.floor(days * 864e5) + milliseconds;\n      default:\n        throw new Error(`Unknown unit ${units}`);\n    }\n  }\n\n  valueOf () {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return (\n      this._milliseconds +\n      this._days * 864e5 +\n      (this._months % 12) * 2592e6 +\n      toInt(this._months / 12) * 31536e6\n    );\n  }\n}\n\nexport function isDuration(obj: any): obj is Duration {\n  return obj instanceof Duration;\n}\n","import { DateParsingConfig } from './parsing.types';\nimport { getParsingFlags } from './parsing-flags';\n\nexport function isValid(config: DateParsingConfig): boolean {\n  if (config._isValid == null) {\n    const flags = getParsingFlags(config);\n    const parsedParts = Array.prototype.some.call(flags.parsedDateParts, function (i: number) {\n      return i != null;\n    });\n    let isNowValid = !isNaN(config._d && config._d.getTime()) &&\n      flags.overflow < 0 &&\n      !flags.empty &&\n      !flags.invalidMonth &&\n      !flags.invalidWeekday &&\n      !flags.weekdayMismatch &&\n      !flags.nullInput &&\n      !flags.invalidFormat &&\n      !flags.userInvalidated &&\n      (!flags.meridiem || (flags.meridiem && parsedParts));\n\n    if (config._strict) {\n      isNowValid = isNowValid &&\n        flags.charsLeftOver === 0 &&\n        flags.unusedTokens.length === 0 &&\n        flags.bigHour === undefined;\n    }\n\n    if (Object.isFrozen == null || !Object.isFrozen(config)) {\n      config._isValid = isNowValid;\n    } else {\n      return isNowValid;\n    }\n  }\n\n  return config._isValid;\n}\n\nexport function createInvalid(config: DateParsingConfig, flags?: { nullInput: boolean }): DateParsingConfig {\n  config._d = new Date(NaN);\n  Object.assign(getParsingFlags(config), flags || { userInvalidated: true });\n\n  return config;\n}\n\nexport function markInvalid(config: DateParsingConfig): DateParsingConfig {\n  config._isValid = false;\n\n  return config;\n}\n","// tslint:disable-next-line\nimport { defaultLocaleMonthsShort, defaultLocaleWeekdaysShort } from '../locale/locale.class';\nimport { DateArray } from '../types';\nimport { DateParsingConfig } from './parsing.types';\nimport { isString } from '../utils/type-checks';\nimport { configFromStringAndFormat } from './from-string-and-format';\nimport { createUTCDate } from './date-from-array';\nimport { createInvalid, markInvalid } from './valid';\nimport { getParsingFlags } from './parsing-flags';\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n// tslint:disable-next-line\nconst extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n// tslint:disable-next-line\nconst basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nconst tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\nconst isoDates: [string, RegExp, boolean][] = [\n  ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/, true],\n  ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/, true],\n  ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/, true],\n  ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n  ['YYYY-DDD', /\\d{4}-\\d{3}/, true],\n  ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n  ['YYYYYYMMDD', /[+-]\\d{10}/, true],\n  ['YYYYMMDD', /\\d{8}/, true],\n  // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/, true],\n  ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n  ['YYYYDDD', /\\d{7}/, true]\n];\n\n// iso time formats and regexes\nconst isoTimes: [string, RegExp][] = [\n  ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n  ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n  ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n  ['HH:mm', /\\d\\d:\\d\\d/],\n  ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n  ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n  ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n  ['HHmm', /\\d\\d\\d\\d/],\n  ['HH', /\\d\\d/]\n];\n\nconst aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\nconst obsOffsets: { [key: string]: number } = {\n  UT: 0,\n  GMT: 0,\n  EDT: -4 * 60,\n  EST: -5 * 60,\n  CDT: -5 * 60,\n  CST: -6 * 60,\n  MDT: -6 * 60,\n  MST: -7 * 60,\n  PDT: -7 * 60,\n  PST: -8 * 60\n};\n\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n// tslint:disable-next-line\nconst rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n// date from iso format\nexport function configFromISO(config: DateParsingConfig): DateParsingConfig {\n  if (!isString(config._i)) {\n    return config;\n  }\n\n  const input = config._i;\n  const match = extendedIsoRegex.exec(input) || basicIsoRegex.exec(input);\n\n\n  let allowTime;\n  let dateFormat;\n  let timeFormat;\n  let tzFormat;\n\n  if (!match) {\n    config._isValid = false;\n\n    return config;\n  }\n\n  // getParsingFlags(config).iso = true;\n  let i;\n  let l;\n  for (i = 0, l = isoDates.length; i < l; i++) {\n    if (isoDates[i][1].exec(match[1])) {\n      dateFormat = isoDates[i][0];\n      allowTime = isoDates[i][2] !== false;\n      break;\n    }\n  }\n\n  if (dateFormat == null) {\n    config._isValid = false;\n\n    return config;\n  }\n\n  if (match[3]) {\n    for (i = 0, l = isoTimes.length; i < l; i++) {\n      if (isoTimes[i][1].exec(match[3])) {\n        // match[2] should be 'T' or space\n        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n        break;\n      }\n    }\n\n    if (timeFormat == null) {\n      config._isValid = false;\n\n      return config;\n    }\n\n  }\n  if (!allowTime && timeFormat != null) {\n    config._isValid = false;\n\n    return config;\n  }\n\n  if (match[4]) {\n    if (tzRegex.exec(match[4])) {\n      tzFormat = 'Z';\n    } else {\n      config._isValid = false;\n\n      return config;\n    }\n  }\n\n  config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n\n  return configFromStringAndFormat(config);\n}\n\n// tslint:disable-next-line\nfunction extractFromRFC2822Strings(yearStr: string, monthStr: string, dayStr: string, hourStr: string, minuteStr: string, secondStr: string): DateArray {\n  const result = [\n    untruncateYear(yearStr),\n    defaultLocaleMonthsShort.indexOf(monthStr),\n    parseInt(dayStr, 10),\n    parseInt(hourStr, 10),\n    parseInt(minuteStr, 10)\n  ];\n\n  if (secondStr) {\n    result.push(parseInt(secondStr, 10));\n  }\n\n  return result;\n}\n\nfunction untruncateYear(yearStr: string): number {\n  const year = parseInt(yearStr, 10);\n\n  return year <= 49 ? year + 2000 : year;\n}\n\nfunction preprocessRFC2822(str: string): string {\n  // Remove comments and folding whitespace and replace multiple-spaces with a single space\n  return str\n    .replace(/\\([^)]*\\)|[\\n\\t]/g, ' ')\n    .replace(/(\\s\\s+)/g, ' ').trim();\n}\n\nfunction checkWeekday(weekdayStr: string, parsedInput: DateArray, config: DateParsingConfig): boolean {\n  if (weekdayStr) {\n    // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n    const weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr);\n    const weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n    if (weekdayProvided !== weekdayActual) {\n      getParsingFlags(config).weekdayMismatch = true;\n      config._isValid = false;\n\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction calculateOffset(obsOffset: string, militaryOffset: string, numOffset: string) {\n  if (obsOffset) {\n    return obsOffsets[obsOffset];\n  } else if (militaryOffset) {\n    // the only allowed military tz is Z\n    return 0;\n  } else {\n    const hm = parseInt(numOffset, 10);\n    const m = hm % 100;\n    const h = (hm - m) / 100;\n\n    return h * 60 + m;\n  }\n}\n\n// date and time from ref 2822 format\nexport function configFromRFC2822(config: DateParsingConfig): DateParsingConfig {\n  if (!isString(config._i)) {\n    return config;\n  }\n\n  const match = rfc2822.exec(preprocessRFC2822(config._i));\n\n  if (!match) {\n    return markInvalid(config);\n  }\n\n  const parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n  if (!checkWeekday(match[1], parsedArray, config)) {\n    return config;\n  }\n\n  config._a = parsedArray;\n  config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n  config._d = createUTCDate.apply(null, config._a);\n  config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n  getParsingFlags(config).rfc2822 = true;\n\n  return config;\n}\n\n// date from iso format or fallback\nexport function configFromString(config: DateParsingConfig): DateParsingConfig {\n  if (!isString(config._i)) {\n    return config;\n  }\n\n  const matched = aspNetJsonRegex.exec(config._i);\n\n  if (matched !== null) {\n    config._d = new Date(+matched[1]);\n\n    return config;\n  }\n\n  // todo: update logic processing\n  // isISO -> configFromISO\n  // isRFC -> configFromRFC\n\n  configFromISO(config);\n  if (config._isValid === false) {\n    delete config._isValid;\n  } else {\n    return config;\n  }\n\n  configFromRFC2822(config);\n  if (config._isValid === false) {\n    delete config._isValid;\n  } else {\n    return config;\n  }\n\n  // Final attempt, use Input Fallback\n  // hooks.createFromInputFallback(config);\n  return createInvalid(config);\n}\n\n// hooks.createFromInputFallback = deprecate(\n//     'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n//     'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n//     'discouraged and will be removed in an upcoming major release. Please refer to ' +\n//     'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n//     function (config) {\n//         config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n//     }\n// );\n","// moment.js\n// version : 2.18.1\n// authors : Tim Wood, Iskren Chernev, Moment.js contributors\n// license : MIT\n// momentjs.com\n\nimport './units/index';\nimport { formatFunctions, makeFormatFunction } from './format/format';\nimport { Locale } from './locale/locale.class';\nimport { getLocale } from './locale/locales';\nimport { isDateValid } from './utils/type-checks';\n\nexport function formatDate(date: Date, format: string, locale?: string, isUTC?: boolean, offset = 0): string {\n  const _locale = getLocale(locale || 'en');\n  if (!_locale) {\n    throw new Error(\n      `Locale \"${locale}\" is not defined, please add it with \"defineLocale(...)\"`\n    );\n  }\n\n  const _format = format || (isUTC ?  'YYYY-MM-DDTHH:mm:ss[Z]' : 'YYYY-MM-DDTHH:mm:ssZ');\n\n  const output = formatMoment(date, _format, _locale, isUTC, offset);\n\n  if (!output) {\n    return output;\n  }\n\n  return _locale.postformat(output);\n}\n\n// format date using native date object\nexport function formatMoment(date: Date, _format: string, locale: Locale, isUTC?: boolean, offset = 0): string {\n  if (!isDateValid(date)) {\n    return locale.invalidDate;\n  }\n\n  const format = expandFormat(_format, locale);\n  formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n  return formatFunctions[format](date, locale, isUTC, offset);\n}\n\nexport function expandFormat(_format: string, locale: Locale): string {\n  let format = _format;\n  let i = 5;\n  const localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n  const replaceLongDateFormatTokens = (input: any) => {\n    return locale.formatLongDate(input) || input;\n  };\n\n  localFormattingTokens.lastIndex = 0;\n  while (i >= 0 && localFormattingTokens.test(format)) {\n    format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n    localFormattingTokens.lastIndex = 0;\n    i -= 1;\n  }\n\n  return format;\n}\n","// Pick the first defined of two or three arguments.\nexport function defaults<T>(a?: T, b?: T, c?: T): T {\n  if (a != null) {\n    return a;\n  }\n  if (b != null) {\n    return b;\n  }\n\n  return c;\n}\n","import { DateParsingConfig } from './parsing.types';\nimport { DateArray } from '../types';\nimport { DATE, HOUR, MILLISECOND, MINUTE, MONTH, SECOND, YEAR } from '../units/constants';\nimport { daysInYear } from '../units/year';\nimport { getParsingFlags } from './parsing-flags';\nimport { createUTCDate } from './date-from-array';\nimport { createDate } from './date-from-array';\nimport { dayOfYearFromWeeks, weekOfYear, weeksInYear } from '../units/week-calendar-utils';\nimport { defaults } from '../utils/defaults';\n\nfunction currentDateArray(config: DateParsingConfig): DateArray {\n  const nowValue = new Date();\n\n  if (config._useUTC) {\n    return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n  }\n\n  return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nexport function configFromArray(config: DateParsingConfig): DateParsingConfig {\n  const input = [];\n  let i;\n  let date;\n  let currentDate;\n  let expectedWeekday;\n  let yearToUse;\n\n  if (config._d) {\n    return config;\n  }\n\n  currentDate = currentDateArray(config);\n\n  // compute day of the year from weeks and weekdays\n  if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n    dayOfYearFromWeekInfo(config);\n  }\n\n  // if the day of the year is set, figure out what it is\n  if (config._dayOfYear != null) {\n    yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n    if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n      getParsingFlags(config)._overflowDayOfYear = true;\n    }\n\n    date = new Date(Date.UTC(yearToUse, 0, config._dayOfYear));\n    config._a[MONTH] = date.getUTCMonth();\n    config._a[DATE] = date.getUTCDate();\n  }\n\n  // Default to current date.\n  // * if no year, month, day of month are given, default to today\n  // * if day of month is given, default month and year\n  // * if month is given, default only year\n  // * if year is given, don't default anything\n  for (i = 0; i < 3 && config._a[i] == null; ++i) {\n    config._a[i] = input[i] = currentDate[i];\n  }\n\n  // Zero out whatever was not defaulted, including time\n  for (; i < 7; i++) {\n    config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n  }\n\n  // Check for 24:00:00.000\n  if (config._a[HOUR] === 24 &&\n    config._a[MINUTE] === 0 &&\n    config._a[SECOND] === 0 &&\n    config._a[MILLISECOND] === 0) {\n    config._nextDay = true;\n    config._a[HOUR] = 0;\n  }\n\n  config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n  expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n  // Apply timezone offset from input. The actual utcOffset can be changed\n  // with parseZone.\n  if (config._tzm != null) {\n    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n  }\n\n  if (config._nextDay) {\n    config._a[HOUR] = 24;\n  }\n\n  // check for mismatching day of week\n  if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n    getParsingFlags(config).weekdayMismatch = true;\n  }\n\n  return config;\n}\n\nfunction dayOfYearFromWeekInfo(config: DateParsingConfig): DateParsingConfig {\n  let w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n  w = config._w;\n  if (w.GG != null || w.W != null || w.E != null) {\n    dow = 1;\n    doy = 4;\n\n    // TODO: We need to take the current isoWeekYear, but that depends on\n    // how we interpret now (local, utc, fixed offset). So create\n    // a now version of current config (take local/utc/offset flags, and\n    // create now).\n    weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(new Date(), 1, 4).year);\n    week = defaults(w.W, 1);\n    weekday = defaults(w.E, 1);\n    if (weekday < 1 || weekday > 7) {\n      weekdayOverflow = true;\n    }\n  } else {\n    dow = config._locale._week.dow;\n    doy = config._locale._week.doy;\n\n    const curWeek = weekOfYear(new Date(), dow, doy);\n\n    weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n    // Default to current week.\n    week = defaults(w.w, curWeek.week);\n\n    if (w.d != null) {\n      // weekday -- low day numbers are considered next week\n      weekday = w.d;\n      if (weekday < 0 || weekday > 6) {\n        weekdayOverflow = true;\n      }\n    } else if (w.e != null) {\n      // local weekday -- counting starts from begining of week\n      weekday = w.e + dow;\n      if (w.e < 0 || w.e > 6) {\n        weekdayOverflow = true;\n      }\n    } else {\n      // default to begining of week\n      weekday = dow;\n    }\n  }\n  if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n    getParsingFlags(config)._overflowWeeks = true;\n  } else if (weekdayOverflow != null) {\n    getParsingFlags(config)._overflowWeekday = true;\n  } else {\n    temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n    config._a[YEAR] = temp.year;\n    config._dayOfYear = temp.dayOfYear;\n  }\n\n  return config;\n}\n","import { getParsingFlags } from './parsing-flags';\nimport { DATE, HOUR, MILLISECOND, MINUTE, MONTH, SECOND, WEEK, WEEKDAY, YEAR } from '../units/constants';\nimport { daysInMonth } from '../units/month';\nimport { DateParsingConfig } from './parsing.types';\n\nexport function checkOverflow(config: DateParsingConfig): DateParsingConfig {\n  let overflow;\n  const a = config._a;\n\n  if (a && getParsingFlags(config).overflow === -2) {\n    // todo: fix this sh*t\n    overflow =\n      a[MONTH] < 0 || a[MONTH] > 11 ? MONTH :\n        a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n          a[HOUR] < 0 || a[HOUR] > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n            a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE :\n              a[SECOND] < 0 || a[SECOND] > 59 ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                  -1;\n\n    if (getParsingFlags(config)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n      overflow = DATE;\n    }\n    if (getParsingFlags(config)._overflowWeeks && overflow === -1) {\n      overflow = WEEK;\n    }\n    if (getParsingFlags(config)._overflowWeekday && overflow === -1) {\n      overflow = WEEKDAY;\n    }\n\n    getParsingFlags(config).overflow = overflow;\n  }\n\n  return config;\n}\n","import { DateParsingConfig } from './parsing.types';\nimport { configFromISO, configFromRFC2822 } from './from-string';\nimport { expandFormat } from '../format';\nimport { formattingTokens, formatTokenFunctions } from '../format/format';\nimport { isArray, isString } from '../utils/type-checks';\nimport { getParseRegexForToken } from '../parse/regex';\nimport { addTimeToArrayFromToken } from '../parse/token';\nimport { HOUR } from '../units/constants';\nimport { configFromArray } from './from-array';\nimport { getParsingFlags } from './parsing-flags';\nimport { checkOverflow } from './check-overflow';\nimport { Locale } from '../locale/locale.class';\n\n// constant that refers to the ISO standard\n// hooks.ISO_8601 = function () {};\nexport const ISO_8601 = 'ISO_8601';\n\n// constant that refers to the RFC 2822 form\n// hooks.RFC_2822 = function () {};\nexport const RFC_2822 = 'RFC_2822';\n\n// date from string and format string\nexport function configFromStringAndFormat(config: DateParsingConfig): DateParsingConfig {\n  // TODO: Move this to another part of the creation flow to prevent circular deps\n  if (config._f === ISO_8601) {\n    return configFromISO(config);\n  }\n  if (config._f === RFC_2822) {\n    return configFromRFC2822(config);\n  }\n  config._a = [];\n  getParsingFlags(config).empty = true;\n\n  if (isArray(config._f) || (!config._i && config._i !== 0)) {\n    return config;\n  }\n\n  // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n  let input = config._i.toString();\n  let totalParsedInputLength = 0;\n  const inputLength = input.length;\n  const tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n  let i;\n  let token;\n  let parsedInput;\n  let skipped;\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n    parsedInput = (input.match(getParseRegexForToken(token, config._locale)) || [])[0];\n    if (parsedInput) {\n      skipped = input.substr(0, input.indexOf(parsedInput));\n      if (skipped.length > 0) {\n        getParsingFlags(config).unusedInput.push(skipped);\n      }\n      input = input.slice(input.indexOf(parsedInput) + parsedInput.length);\n      totalParsedInputLength += parsedInput.length;\n    }\n    // don't parse if it's not a known token\n    if (formatTokenFunctions[token]) {\n      if (parsedInput) {\n        getParsingFlags(config).empty = false;\n      } else {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n\n      addTimeToArrayFromToken(token, parsedInput, config);\n    } else if (config._strict && !parsedInput) {\n      getParsingFlags(config).unusedTokens.push(token);\n    }\n  }\n\n  // add remaining unparsed input length to the string\n  getParsingFlags(config).charsLeftOver = inputLength - totalParsedInputLength;\n  if (input.length > 0) {\n    getParsingFlags(config).unusedInput.push(input);\n  }\n\n  // clear _12h flag if hour is <= 12\n  if (config._a[HOUR] <= 12 &&\n    getParsingFlags(config).bigHour === true &&\n    config._a[HOUR] > 0) {\n    getParsingFlags(config).bigHour = void 0;\n  }\n\n  getParsingFlags(config).parsedDateParts = config._a.slice(0);\n  getParsingFlags(config).meridiem = config._meridiem;\n  // handle meridiem\n  config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n  configFromArray(config);\n\n  return checkOverflow(config);\n}\n\n\nfunction meridiemFixWrap(locale: Locale, _hour: number, meridiem: string): number {\n  let hour = _hour;\n\n  if (meridiem == null) {\n    // nothing to do\n    return hour;\n  }\n\n  if (locale.meridiemHour != null) {\n    return locale.meridiemHour(hour, meridiem);\n  }\n\n  if (locale.isPM == null) {\n    // this is not supposed to happen\n    return hour;\n  }\n  // Fallback\n  const isPm = locale.isPM(meridiem);\n  if (isPm && hour < 12) {\n    hour += 12;\n  }\n\n  if (!isPm && hour === 12) {\n    hour = 0;\n  }\n\n  return hour;\n}\n","import { DateParsingConfig } from './parsing.types';\nimport { createInvalid, isValid } from './valid';\nimport { getParsingFlags } from './parsing-flags';\nimport { configFromStringAndFormat } from './from-string-and-format';\n\n// date from string and array of format strings\nexport function configFromStringAndArray(config: DateParsingConfig): DateParsingConfig {\n  let tempConfig;\n  let bestMoment;\n  let scoreToBeat;\n  let currentScore;\n\n  if (!config._f || config._f.length === 0) {\n    getParsingFlags(config).invalidFormat = true;\n\n    return createInvalid(config);\n  }\n\n  let i;\n  for (i = 0; i < config._f.length; i++) {\n    currentScore = 0;\n    tempConfig = Object.assign({}, config);\n    if (config._useUTC != null) {\n      tempConfig._useUTC = config._useUTC;\n    }\n    tempConfig._f = config._f[i];\n    configFromStringAndFormat(tempConfig);\n\n    if (!isValid(tempConfig)) {\n      continue;\n    }\n\n    // if there is any input that was not parsed add a penalty for that format\n    currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n    // or tokens\n    currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n    getParsingFlags(tempConfig).score = currentScore;\n\n    if (scoreToBeat == null || currentScore < scoreToBeat) {\n      scoreToBeat = currentScore;\n      bestMoment = tempConfig;\n    }\n  }\n\n  return Object.assign(config, bestMoment || tempConfig);\n}\n","import { normalizeObjectUnits } from '../units/aliases';\nimport { configFromArray } from './from-array';\nimport { DateParsingConfig } from './parsing.types';\nimport { isObject, isString } from '../utils/type-checks';\n\nexport function configFromObject(config: DateParsingConfig): DateParsingConfig {\n  if (config._d) {\n    return config;\n  }\n\n  const input = config._i;\n  if (isObject(input)) {\n    const i = normalizeObjectUnits(input as any);\n    config._a = [i.year, i.month, i.day, i.hours, i.minutes, i.seconds, i.milliseconds]\n    // todo: obsolete -> remove it\n      .map(obj => isString(obj) ? parseInt(obj, 10) : obj);\n  }\n\n  return configFromArray(config);\n}\n","// tslint:disable:max-line-length\nimport { isArray, isDate, isNumber, isObject, isObjectEmpty, isString, isUndefined } from '../utils/type-checks';\nimport { DateParsingConfig } from './parsing.types';\nimport { getLocale } from '../locale/locales';\nimport { createInvalid, isValid } from './valid';\nimport { configFromStringAndArray } from './from-string-and-array';\nimport { configFromStringAndFormat } from './from-string-and-format';\nimport { cloneDate } from './clone';\nimport { configFromString } from './from-string';\nimport { configFromArray } from './from-array';\nimport { configFromObject } from './from-object';\nimport { checkOverflow } from './check-overflow';\nimport { DateInput } from '../test/chain';\n\nfunction createFromConfig(config: DateParsingConfig): DateParsingConfig {\n  const res = checkOverflow(prepareConfig(config));\n  // todo: remove, in moment.js it's never called cuz of moment constructor\n  res._d = new Date(res._d != null ? res._d.getTime() : NaN);\n  if (!isValid(Object.assign({}, res, {_isValid: null}))) {\n    res._d = new Date(NaN);\n  }\n  // todo: update offset\n  /*if (res._nextDay) {\n    // Adding is smart enough around DST\n    res._d = add(res._d, 1, 'day');\n    res._nextDay = undefined;\n  }*/\n\n  return res;\n}\n\nexport function prepareConfig(config: DateParsingConfig): DateParsingConfig {\n  let input = config._i;\n  const format = config._f;\n\n  config._locale = config._locale || getLocale(config._l);\n\n  if (input === null || (format === undefined && input === '')) {\n    return createInvalid(config, { nullInput: true });\n  }\n\n  if (isString(input)) {\n    config._i = input = config._locale.preparse(input, format);\n  }\n\n  if (isDate(input)) {\n    config._d = cloneDate(input);\n\n    return config;\n  }\n\n  // todo: add check for recursion\n\n  if (isArray(format)) {\n    configFromStringAndArray(config);\n  } else if (format) {\n    configFromStringAndFormat(config);\n  } else {\n    configFromInput(config);\n  }\n\n  if (!isValid(config)) {\n    config._d = null;\n  }\n\n  return config;\n}\n\nfunction configFromInput(config: DateParsingConfig): DateParsingConfig {\n  const input = config._i;\n  if (isUndefined(input)) {\n    config._d = new Date();\n  } else if (isDate(input)) {\n    config._d = cloneDate(input);\n  } else if (isString(input)) {\n    configFromString(config);\n  } else if (isArray<string | number>(input) && input.length) {\n    const _arr: (string | number)[] = input.slice(0);\n    config._a = _arr.map(obj => isString(obj) ? parseInt(obj, 10) : obj);\n    configFromArray(config);\n  } else if (isObject(input)) {\n    configFromObject(config);\n  } else if (isNumber(input)) {\n    // from milliseconds\n    config._d = new Date(input);\n  } else {\n    //   hooks.createFromInputFallback(config);\n    return createInvalid(config);\n  }\n\n  return config;\n}\n\nexport function createLocalOrUTC(input: DateInput, format?: string | string[], localeKey?: string, strict?: boolean, isUTC?: boolean): DateParsingConfig {\n  const config: DateParsingConfig = {};\n  let _input = input;\n\n  // params switch -> skip; test it well\n  // if (localeKey === true || localeKey === false) {\n  //     strict = localeKey;\n  //     localeKey = undefined;\n  // }\n\n  // todo: fail fast and return not valid date\n  if ((isObject(_input) && isObjectEmpty(_input)) || (isArray(_input) && _input.length === 0)) {\n    _input = undefined;\n  }\n  // object construction must be done this way.\n  // https://github.com/moment/moment/issues/1423\n  // config._isAMomentObject = true;\n  config._useUTC = config._isUTC = isUTC;\n  config._l = localeKey;\n  config._i = _input;\n  config._f = format;\n  config._strict = strict;\n\n  return createFromConfig(config);\n}\n","import { createLocalOrUTC } from './from-anything';\nimport { DateInput } from '../test/chain';\nimport { isDate } from '../utils/type-checks';\n\nexport function parseDate(input: DateInput, format?: string | string[],\n                          localeKey?: string, strict?: boolean, isUTC?: boolean): Date {\n  if (isDate(input)) {\n    return input;\n  }\n\n  const config = createLocalOrUTC(input, format, localeKey, strict, isUTC);\n\n  return config._d;\n}\n\nexport function utcAsLocal(date) {\n  if (!(date instanceof Date)) {\n    return null;\n  }\n\n  return new Date(\n    date.getUTCFullYear(),\n    date.getUTCMonth(),\n    date.getUTCDate(),\n    date.getUTCHours(),\n    date.getUTCMinutes(),\n    date.getUTCSeconds(),\n    date.getUTCMilliseconds()\n  );\n}\n","export function absRound(num: number): number {\n  return num < 0 ? Math.round(num * -1) * -1 : Math.round(num);\n}\n","import { UnitOfTime } from '../types';\nimport { endOf, startOf } from './start-end-of';\n\nexport function isAfter(\n  date1: Date,\n  date2: Date,\n  units: UnitOfTime = 'milliseconds'\n): boolean {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  if (units === 'milliseconds') {\n    return date1.valueOf() > date2.valueOf();\n  }\n\n  return date2.valueOf() < startOf(date1, units).valueOf();\n}\n\nexport function isBefore(\n  date1: Date,\n  date2: Date,\n  units: UnitOfTime = 'milliseconds'\n): boolean {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  if (units === 'milliseconds') {\n    return date1.valueOf() < date2.valueOf();\n  }\n\n  return endOf(date1, units).valueOf() < date2.valueOf();\n}\n\nexport function isDisabledDay(date: Date, daysDisabled: number[]): boolean {\n  if (daysDisabled === undefined || !daysDisabled || !daysDisabled.length) {\n    return false;\n  }\n\n  return daysDisabled.some((day: number) => day === date.getDay());\n}\n\nexport function isBetween(\n  date: Date,\n  from: Date,\n  to: Date,\n  units: UnitOfTime,\n  inclusivity = '()'\n): boolean {\n  const leftBound =\n    inclusivity[0] === '('\n      ? isAfter(date, from, units)\n      : !isBefore(date, from, units);\n  const rightBound =\n    inclusivity[1] === ')'\n      ? isBefore(date, to, units)\n      : !isAfter(date, to, units);\n\n  return leftBound && rightBound;\n}\n\nexport function isSame(\n  date1: Date,\n  date2: Date,\n  units: UnitOfTime = 'milliseconds'\n): boolean {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  if (units === 'milliseconds') {\n    return date1.valueOf() === date2.valueOf();\n  }\n\n  const inputMs = date2.valueOf();\n\n  return (\n    startOf(date1, units).valueOf() <= inputMs &&\n    inputMs <= endOf(date1, units).valueOf()\n  );\n}\n\nexport function isSameDay(date1: Date, date2: Date):boolean{\n  return (date1.getDay() == date2.getDay());\n}\n\nexport function isSameOrAfter(\n  date1: Date,\n  date2: Date,\n  units?: UnitOfTime\n): boolean {\n  return isSame(date1, date2, units) || isAfter(date1, date2, units);\n}\n\nexport function isSameOrBefore(\n  date1: Date,\n  date2: Date,\n  units?: UnitOfTime\n): boolean {\n  return isSame(date1, date2, units) || isBefore(date1, date2, units);\n}\n","// ASP.NET json date format regex\nimport { Duration, isDuration } from './constructor';\nimport { isDateValid, isNumber, isObject, isString, toInt } from '../utils/type-checks';\nimport { DATE, HOUR, MILLISECOND, MINUTE, SECOND } from '../units/constants';\nimport { parseDate } from '../create/local';\nimport { absRound } from '../utils/abs-round';\nimport { DateObject } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { cloneWithOffset } from '../units/offset';\nimport { isAfter, isBefore } from '../utils/date-compare';\nimport { getFullYear, getMonth } from '../utils/date-getters';\nimport { add } from '../moment/add-subtract';\nimport { cloneDate } from '../create/clone';\n\nconst aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\n// tslint:disable-next-line\nconst isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\nexport type DurationInput = string | number | Duration | Partial<DateObject> | { from: Date; to: Date };\n\nexport function createDuration(input?: DurationInput, key?: string, config: DateParsingConfig = {}) {\n  const duration = convertDuration(input, key);\n  // matching against regexp is expensive, do it on demand\n\n  return new Duration(duration, config);\n}\n\nfunction convertDuration(input: any, key: string): Partial<DateObject> {\n  // checks for null or undefined\n  if (input == null) {\n    return {};\n  }\n\n  if (isDuration(input)) {\n    return {\n      milliseconds: input._milliseconds,\n      day: input._days,\n      month: input._months\n    };\n  }\n  if (isNumber(input)) {\n    // duration = {};\n    return key ? { [key]: input } : { milliseconds: input };\n  }\n\n  if (isString(input)) {\n    let match = aspNetRegex.exec(input);\n\n    if (match) {\n      const sign = (match[1] === '-') ? -1 : 1;\n\n      return {\n        year: 0,\n        day: toInt(match[DATE]) * sign,\n        hours: toInt(match[HOUR]) * sign,\n        minutes: toInt(match[MINUTE]) * sign,\n        seconds: toInt(match[SECOND]) * sign,\n        // the millisecond decimal point is included in the match\n        milliseconds: toInt(absRound(toInt(match[MILLISECOND]) * 1000)) * sign\n      };\n    }\n\n    match = isoRegex.exec(input);\n    if (match) {\n      const sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n\n      return {\n        year: parseIso(match[2], sign),\n        month: parseIso(match[3], sign),\n        week: parseIso(match[4], sign),\n        day: parseIso(match[5], sign),\n        hours: parseIso(match[6], sign),\n        minutes: parseIso(match[7], sign),\n        seconds: parseIso(match[8], sign)\n      };\n    }\n\n  }\n\n  if (isObject<{from: any; to: any}>(input) && ('from' in input || 'to' in input)) {\n    const diffRes = momentsDifference(parseDate(input.from), parseDate(input.to));\n\n    return {\n      milliseconds: diffRes.milliseconds,\n      month: diffRes.months\n    };\n  }\n\n  return input;\n}\n\n// createDuration.fn = Duration.prototype;\n// createDuration.invalid = invalid;\n\nfunction parseIso(inp: string, sign: number): number {\n  // We'd normally use ~~inp for this, but unfortunately it also\n  // converts floats to ints.\n  // inp may be undefined, so careful calling replace on it.\n  const res = inp && parseFloat(inp.replace(',', '.'));\n  // apply sign while we're at it\n\n  return (isNaN(res) ? 0 : res) * sign;\n}\n\nfunction positiveMomentsDifference(base: Date, other: Date): { milliseconds: number; months: number } {\n  const res = { milliseconds: 0, months: 0 };\n\n  res.months = getMonth(other) - getMonth(base) +\n    (getFullYear(other) - getFullYear(base)) * 12;\n  const _basePlus = add(cloneDate(base), res.months, 'month');\n  if (isAfter(_basePlus, other)) {\n    --res.months;\n  }\n\n  res.milliseconds = +other - +(add(cloneDate(base), res.months, 'month'));\n\n  return res;\n}\n\nfunction momentsDifference(base: Date, other: Date): { milliseconds: number; months: number } {\n  if (!(isDateValid(base) && isDateValid(other))) {\n    return { milliseconds: 0, months: 0 };\n  }\n\n  let res;\n  const _other = cloneWithOffset(other, base, {_offset: base.getTimezoneOffset()});\n  if (isBefore(base, _other)) {\n    res = positiveMomentsDifference(base, _other);\n  } else {\n    res = positiveMomentsDifference(_other, base);\n    res.milliseconds = -res.milliseconds;\n    res.months = -res.months;\n  }\n\n  return res;\n}\n","import { createDuration } from '../duration/create';\nimport { absRound } from '../utils/abs-round';\nimport { Duration } from '../duration/constructor';\nimport { getDate, getMonth, getTime } from '../utils/date-getters';\nimport { setDate, setMonth, setTime } from '../utils/date-setters';\nimport { cloneDate } from '../create/clone';\nimport { UnitOfTime } from '../types';\n\nexport function add(date: Date, val: number, period: UnitOfTime, isUTC?: boolean): Date {\n  const dur = createDuration(val, period);\n\n  return addSubtract(date, dur, 1, isUTC);\n}\n\nexport function subtract(date: Date, val: number, period: UnitOfTime, isUTC?: boolean): Date {\n  const dur = createDuration(val, period);\n\n  return addSubtract(date, dur, -1, isUTC);\n}\n\nexport function addSubtract(date: Date, duration: Duration, isAdding: number, isUTC?: boolean): Date {\n  const milliseconds = duration._milliseconds;\n  const days = absRound(duration._days);\n  const months = absRound(duration._months);\n\n  // todo: add timezones support\n  // const _updateOffset = updateOffset == null ? true : updateOffset;\n\n  if (months) {\n    setMonth(date, getMonth(date, isUTC) + months * isAdding, isUTC);\n  }\n  if (days) {\n    setDate(date, getDate(date, isUTC) + days * isAdding, isUTC);\n  }\n  if (milliseconds) {\n    setTime(date, getTime(date) + milliseconds * isAdding);\n  }\n\n  return cloneDate(date);\n  // todo: add timezones support\n  // if (_updateOffset) {\n  //   hooks.updateOffset(date, days || months);\n  // }\n}\n","import { addFormatToken } from '../format/format';\nimport { Locale } from '../locale/locale.class';\nimport { getDay } from '../utils/date-getters';\nimport { addRegexToken, match1to2 } from '../parse/regex';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { addWeekParseToken } from '../parse/token';\nimport { getParsingFlags } from '../create/parsing-flags';\nimport { isNumber, isString, toInt } from '../utils/type-checks';\nimport { DateFormatterOptions, WeekParsing } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { add } from '../moment/add-subtract';\nimport { getLocale } from '../locale/locales';\n\n\nexport function initDayOfWeek() {\n// FORMATTING\n\n  addFormatToken('d', null, 'do',\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getDay(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n\n  addFormatToken('dd', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return opts.locale.weekdaysMin(date, opts.format, opts.isUTC);\n    }\n  );\n\n  addFormatToken('ddd', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return opts.locale.weekdaysShort(date, opts.format, opts.isUTC);\n    }\n  );\n\n  addFormatToken('dddd', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return opts.locale.weekdays(date, opts.format, opts.isUTC);\n    }\n  );\n\n  addFormatToken('e', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getLocaleDayOfWeek(date, opts.locale, opts.isUTC)\n        .toString(10);\n      // return getDay(date, opts.isUTC).toString(10);\n    }\n  );\n  addFormatToken('E', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getISODayOfWeek(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n\n// ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E');\n\n// PRIORITY\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11);\n\n// PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n\n  addRegexToken('dd', function(isStrict: boolean, locale: Locale): RegExp {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n\n  addRegexToken('ddd', function(isStrict: boolean, locale: Locale): RegExp {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function(isStrict: boolean, locale: Locale): RegExp {\n    return locale.weekdaysRegex(isStrict);\n  });\n\n  addWeekParseToken(\n    ['dd', 'ddd', 'dddd'],\n    function(input: string, week: WeekParsing, config: DateParsingConfig, token) {\n      const weekday = config._locale.weekdaysParse(input, token, config._strict);\n      // if we didn't get a weekday name, mark the date as invalid\n      if (weekday != null) {\n        week.d = weekday;\n      } else {\n        getParsingFlags(config).invalidWeekday = !!input;\n      }\n\n      return config;\n    }\n  );\n\n  addWeekParseToken(\n    ['d', 'e', 'E'],\n    function(input: string, week: WeekParsing, config: DateParsingConfig, token: string): DateParsingConfig {\n      week[token] = toInt(input);\n\n      return config;\n    }\n  );\n}\n\n// HELPERS\n\nexport function parseWeekday(input: string | number, locale: Locale): number {\n  if (!isString(input)) {\n    return input;\n  }\n\n  const _num = parseInt(input, 10);\n  if (!isNaN(_num)) {\n    return _num;\n  }\n\n  const _weekDay = locale.weekdaysParse(input);\n  if (isNumber(_weekDay)) {\n    return _weekDay;\n  }\n\n  return null;\n}\n\nexport function parseIsoWeekday(input: string | number, locale: Locale = getLocale()): number {\n  if (isString(input)) {\n    return locale.weekdaysParse(input) % 7 || 7;\n  }\n\n  return isNumber(input) && isNaN(input) ? null : input;\n}\n\n// MOMENTS\n\nexport function getSetDayOfWeek(date: Date, input: number, opts: { isUTC?: boolean; locale: Locale }): Date | number {\n  if (!input) {\n    return getDayOfWeek(date, opts.isUTC);\n  }\n\n  return setDayOfWeek(date, input, opts.locale, opts.isUTC);\n}\n\nexport function setDayOfWeek(date: Date, input: number, locale = getLocale(), isUTC?: boolean): Date {\n  const day = getDay(date, isUTC);\n  const _input = parseWeekday(input, locale);\n\n  return add(date, _input - day, 'day');\n}\n\nexport function getDayOfWeek(date: Date, isUTC?: boolean): number {\n  return getDay(date, isUTC);\n}\n\n/********************************************/\n\n// todo: utc\n// getSetLocaleDayOfWeek\nexport function getLocaleDayOfWeek(date: Date, locale = getLocale(), isUTC?: boolean): number {\n  return (getDay(date, isUTC) + 7 - locale.firstDayOfWeek()) % 7;\n}\n\nexport function setLocaleDayOfWeek(date: Date, input: number, opts: { locale?: Locale; isUTC?: boolean } = {}): Date {\n  const weekday = getLocaleDayOfWeek(date, opts.locale, opts.isUTC);\n\n  return add(date, input - weekday, 'day');\n}\n\n\n// getSetISODayOfWeek\nexport function getISODayOfWeek(date: Date, isUTC?: boolean): number {\n  return getDay(date, isUTC) || 7;\n}\n\nexport function setISODayOfWeek(date: Date, input: number | string, opts: { locale?: Locale } = {}): Date {\n  // behaves the same as moment#day except\n  // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n  // as a setter, sunday should belong to the previous week.\n\n  const weekday = parseIsoWeekday(input, opts.locale);\n\n  return setDayOfWeek(date, getDayOfWeek(date) % 7 ? weekday : weekday - 7);\n}\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n\n//! moment.js locale configuration\n//! locale : Arabic [ar]\n//! author : Abdel Said: https://github.com/abdelsaid\n//! author : Ahmed Elkhatib\n//! author : forabi https://github.com/forabi\n\nimport { LocaleData } from '../locale/locale.class';\n\nconst symbolMap: {[key: string]: string} = {\n  1: '١',\n  2: '٢',\n  3: '٣',\n  4: '٤',\n  5: '٥',\n  6: '٦',\n  7: '٧',\n  8: '٨',\n  9: '٩',\n  0: '٠'\n};\nconst numberMap: {[key: string]: string} = {\n  '١': '1',\n  '٢': '2',\n  '٣': '3',\n  '٤': '4',\n  '٥': '5',\n  '٦': '6',\n  '٧': '7',\n  '٨': '8',\n  '٩': '9',\n  '٠': '0'\n};\nconst pluralForm = function (num: number): number {\n  return num === 0 ? 0 : num === 1 ? 1 : num === 2 ? 2 : num % 100 >= 3 && num % 100 <= 10 ? 3 : num % 100 >= 11 ? 4 : 5;\n};\nconst plurals: {[key: string]: [string, string, [string, string], string, string, string]} = {\n  s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n  m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n  h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n  d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n  M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n  y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n};\nconst pluralize = function (u: string) {\n  return function (num: number, withoutSuffix: boolean): string {\n    const f = pluralForm(num);\n    let str = plurals[u][pluralForm(num)];\n    if (f === 2) {\n      str = str[withoutSuffix ? 0 : 1];\n    }\n\n    return (str as string).replace(/%d/i, num.toString());\n  };\n};\nconst months: string[] = [\n  'يناير',\n  'فبراير',\n  'مارس',\n  'أبريل',\n  'مايو',\n  'يونيو',\n  'يوليو',\n  'أغسطس',\n  'سبتمبر',\n  'أكتوبر',\n  'نوفمبر',\n  'ديسمبر'\n];\n\nexport const arLocale: LocaleData = {\n  abbr: 'ar',\n  months,\n  monthsShort: months,\n  weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n  weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n  weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'D/\\u200FM/\\u200FYYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  meridiemParse: /ص|م/,\n  isPM(input) {\n    return 'م' === input;\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ص';\n    } else {\n      return 'م';\n    }\n  },\n  calendar: {\n    sameDay: '[اليوم عند الساعة] LT',\n    nextDay: '[غدًا عند الساعة] LT',\n    nextWeek: 'dddd [عند الساعة] LT',\n    lastDay: '[أمس عند الساعة] LT',\n    lastWeek: 'dddd [عند الساعة] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'بعد %s',\n    past: 'منذ %s',\n    s: pluralize('s'),\n    ss: pluralize('s'),\n    m: pluralize('m'),\n    mm: pluralize('m'),\n    h: pluralize('h'),\n    hh: pluralize('h'),\n    d: pluralize('d'),\n    dd: pluralize('d'),\n    M: pluralize('M'),\n    MM: pluralize('M'),\n    y: pluralize('y'),\n    yy: pluralize('y')\n  },\n  preparse(str: string): string {\n    return str.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n      return numberMap[match];\n    }).replace(/،/g, ',');\n  },\n  postformat(str: string) {\n    return str.replace(/\\d/g, function (match) {\n      return symbolMap[match];\n    }).replace(/,/g, '،');\n  },\n  week: {\n    dow: 6, // Saturday is the first day of the week.\n    doy: 12  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { Khronos } from '../test/chain';\n\n//! moment.js locale configuration\n//! locale : Bulgarian [bg]\n//! author : Iskren Ivov Chernev : https://github.com/ichernev\n//! author : Kunal Marwaha : https://github.com/marwahaha\n//! author : Matt Grande : https://github.com/mattgrande\n//! author : Isaac Cambron : https://github.com/icambron\n//! author : Venelin Manchev : https://github.com/vmanchev\n\nexport const bgLocale: LocaleData = {\n  abbr: 'bg',\n  months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),\n  monthsShort: 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n  weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),\n  weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n  weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'D.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY H:mm',\n    LLLL: 'dddd, D MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[Днес в] LT',\n    nextDay: '[Утре в] LT',\n    nextWeek: 'dddd [в] LT',\n    lastDay: '[Вчера в] LT',\n    lastWeek: function (d: any) {\n\n      switch (d) {\n        case 0:\n        case 3:\n        case 6:\n          return '[В изминалата] dddd [в] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[В изминалия] dddd [в] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'след %s',\n    past: 'преди %s',\n    s: 'няколко секунди',\n    ss: '%d секунди',\n    m: 'минута',\n    mm: '%d минути',\n    h: 'час',\n    hh: '%d часа',\n    d: 'ден',\n    dd: '%d дни',\n    M: 'месец',\n    MM: '%d месеца',\n    y: 'година',\n    yy: '%d години'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n  ordinal: function (_num: number): string {\n\n    const number = Number(_num);\n\n    let lastDigit = number % 10,\n      last2Digits = number % 100;\n\n    if (number === 0) {\n      return number + '-ев';\n    } else if (last2Digits === 0) {\n      return number + '-ен';\n    } else if (last2Digits > 10 && last2Digits < 20) {\n      return number + '-ти';\n    } else if (lastDigit === 1) {\n      return number + '-ви';\n    } else if (lastDigit === 2) {\n      return number + '-ри';\n    } else if (lastDigit === 7 || lastDigit === 8) {\n      return number + '-ми';\n    } else {\n      return number + '-ти';\n    }\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getHours, getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Catalan [ca]\n//! author : Xavier Arbat : https://github.com/XavisaurusRex\n\nlet monthsShortDot = 'gen._feb._mar._abr._mai._jun._jul._ago._set._oct._nov._des.'.split('_'),\n  monthsShort = 'ene_feb_mar_abr_mai_jun_jul_ago_set_oct_nov_des'.split('_');\n\nlet monthsParse = [/^gen/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^jun/i, /^jul/i, /^ago/i, /^set/i, /^oct/i, /^nov/i, /^des/i];\nlet monthsRegex = /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre|gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i;\n\nexport const caLocale: LocaleData = {\n  abbr: 'ca',\n  months: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortDot;\n    }\n\n    if (/-MMM-/.test(format)) {\n      return monthsShort[getMonth(date, isUTC)];\n    }\n\n    return monthsShortDot[getMonth(date, isUTC)];\n  },\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre)/i,\n  monthsShortStrictRegex: /^(gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i,\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\n  weekdaysShort: 'diu._dil._dim._dix._dij._div._dis.'.split('_'),\n  weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    sameDay(date: Date) {\n      return '[avui a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n    nextDay(date: Date) {\n      return '[dema a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n    nextWeek(date: Date) {\n      return 'dddd [a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n    lastDay(date: Date) {\n      return '[ahir a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n    lastWeek(date: Date) {\n      return '[el] dddd [' + ('passada la ' + (getHours(date) !== 1) ? 'passades les' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'fa %s',\n    s: 'uns segons',\n    ss: '%d segons',\n    m: 'un minut',\n    mm: '%d minuts',\n    h: 'una hora',\n    hh: '%d hores',\n    d: 'un dia',\n    dd: '%d dies',\n    M: 'un mes',\n    MM: '%d mesos',\n    y: 'un any',\n    yy: '%d anys'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|on|er|rt|é)/,\n  ordinal(_num: number): string {\n    const num = Number(_num);\n    const output = (num > 4) ? 'é' :\n        (num === 1 || num === 3) ? 'r' :\n          (num === 2) ? 'n' :\n            (num === 4) ? 't' : 'é';\n    return num + output;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Czech [cs]\n//! author : petrbela : https://github.com/petrbela\n\nconst months: string[] = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_');\nconst monthsShort: string[] = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');\n\nfunction plural(num: number): boolean {\n  return (num > 1) && (num < 5) && (~~(num / 10) !== 1);\n}\n\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  const result = num + ' ';\n\n  switch (key) {\n    case 's':  // a few seconds / in a few seconds / a few seconds ago\n      return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';\n    case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'sekundy' : 'sekund');\n      } else {\n        return result + 'sekundami';\n      }\n    // break;\n    case 'm':  // a minute / in a minute / a minute ago\n      return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');\n    case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'minuty' : 'minut');\n      } else {\n        return result + 'minutami';\n      }\n    // break;\n    case 'h':  // an hour / in an hour / an hour ago\n      return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n    case 'hh': // 9 hours / in 9 hours / 9 hours ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'hodiny' : 'hodin');\n      } else {\n        return result + 'hodinami';\n      }\n    // break;\n    case 'd':  // a day / in a day / a day ago\n      return (withoutSuffix || isFuture) ? 'den' : 'dnem';\n    case 'dd': // 9 days / in 9 days / 9 days ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'dny' : 'dní');\n      } else {\n        return result + 'dny';\n      }\n    // break;\n    case 'M':  // a month / in a month / a month ago\n      return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';\n    case 'MM': // 9 months / in 9 months / 9 months ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'měsíce' : 'měsíců');\n      } else {\n        return result + 'měsíci';\n      }\n    // break;\n    case 'y':  // a year / in a year / a year ago\n      return (withoutSuffix || isFuture) ? 'rok' : 'rokem';\n    case 'yy': // 9 years / in 9 years / 9 years ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'roky' : 'let');\n      } else {\n        return result + 'lety';\n      }\n    // break;\n  }\n}\n\nexport const csLocale: LocaleData = {\n  abbr: 'cs',\n  months,\n  monthsShort,\n  monthsParse: (function (months, monthsShort) {\n    let i, _monthsParse = [];\n    for (i = 0; i < 12; i++) {\n      // use custom parser to solve problem with July (červenec)\n      _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n    }\n    return _monthsParse;\n  }(months, monthsShort)),\n  shortMonthsParse: (function (monthsShort) {\n    let i, _shortMonthsParse = [];\n    for (i = 0; i < 12; i++) {\n      _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');\n    }\n    return _shortMonthsParse;\n  }(monthsShort)),\n  longMonthsParse: (function (months) {\n    let i, _longMonthsParse = [];\n    for (i = 0; i < 12; i++) {\n      _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');\n    }\n    return _longMonthsParse;\n  }(months)),\n  weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n  weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),\n  weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd D. MMMM YYYY H:mm',\n    l: 'D. M. YYYY'\n  },\n  calendar: {\n    sameDay: '[dnes v] LT',\n    nextDay: '[zítra v] LT',\n    nextWeek(date: Date): string {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v neděli v] LT';\n        case 1:\n        case 2:\n          return '[v] dddd [v] LT';\n        case 3:\n          return '[ve středu v] LT';\n        case 4:\n          return '[ve čtvrtek v] LT';\n        case 5:\n          return '[v pátek v] LT';\n        case 6:\n          return '[v sobotu v] LT';\n      }\n    },\n    lastDay: '[včera v] LT',\n    lastWeek(date: Date): string {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[minulou neděli v] LT';\n        case 1:\n        case 2:\n          return '[minulé] dddd [v] LT';\n        case 3:\n          return '[minulou středu v] LT';\n        case 4:\n        case 5:\n          return '[minulý] dddd [v] LT';\n        case 6:\n          return '[minulou sobotu v] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: 'před %s',\n    s: translate,\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Danish (Denmark) [da]\n//! author : Per Hansen : https://github.com/perhp\n\nexport const daLocale: LocaleData = {\n  abbr: 'da',\n  months : 'Januar_Februar_Marts_April_Maj_Juni_Juli_August_September_Oktober_November_December'.split('_'),\n  monthsShort : 'Jan_Feb_Mar_Apr_Maj_Jun_Jul_Aug_Sep_Okt_Nov_Dec'.split('_'),\n  weekdays : 'Søndag_Mandag_Tirsdag_Onsdag_Torsdag_Fredag_Lørdag'.split('_'),\n  weekdaysShort : 'Søn_Man_Tir_Ons_Tor_Fre_Lør'.split('_'),\n  weekdaysMin : 'Sø_Ma_Ti_On_To_Fr_Lø'.split('_'),\n  longDateFormat : {\n      LT : 'HH:mm',\n      LTS : 'HH:mm:ss',\n      L : 'DD/MM/YYYY',\n      LL : 'D. MMMM YYYY',\n      LLL : 'D. MMMM YYYY HH:mm',\n      LLLL : 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'\n  },\n  calendar : {\n      sameDay : '[i dag kl.] LT',\n      nextDay : '[i morgen kl.] LT',\n      nextWeek : 'på dddd [kl.] LT',\n      lastDay : '[i går kl.] LT',\n      lastWeek : '[i] dddd[s kl.] LT',\n      sameElse : 'L'\n  },\n  relativeTime : {\n      future : 'om %s',\n      past : '%s siden',\n      s : 'få sekunder',\n      m : 'et minut',\n      mm : '%d minutter',\n      h : 'en time',\n      hh : '%d timer',\n      d : 'en dag',\n      dd : '%d dage',\n      M : 'en måned',\n      MM : '%d måneder',\n      y : 'et år',\n      yy : '%d år'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal : '%d.',\n  week : {\n      dow : 1, // Monday is the first day of the week.\n      doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-key-quotes\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : German [de]\n//! author : lluchs : https://github.com/lluchs\n//! author: Menelion Elensúle: https://github.com/Oire\n//! author : Mikolaj Dadela : https://github.com/mik01aj\n\nfunction processRelativeTime(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  const format: { [key: string]: [string, string] } = {\n    'm': ['eine Minute', 'einer Minute'],\n    'h': ['eine Stunde', 'einer Stunde'],\n    'd': ['ein Tag', 'einem Tag'],\n    'dd': [num + ' Tage', num + ' Tagen'],\n    'M': ['ein Monat', 'einem Monat'],\n    'MM': [num + ' Monate', num + ' Monaten'],\n    'y': ['ein Jahr', 'einem Jahr'],\n    'yy': [num + ' Jahre', num + ' Jahren']\n  };\n  return withoutSuffix ? format[key][0] : format[key][1];\n}\n\nexport const deLocale: LocaleData = {\n  abbr: 'de',\n  months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n  monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n  weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n  weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY HH:mm',\n    LLLL: 'dddd, D. MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[heute um] LT [Uhr]',\n    sameElse: 'L',\n    nextDay: '[morgen um] LT [Uhr]',\n    nextWeek: 'dddd [um] LT [Uhr]',\n    lastDay: '[gestern um] LT [Uhr]',\n    lastWeek: '[letzten] dddd [um] LT [Uhr]'\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: 'vor %s',\n    s: 'ein paar Sekunden',\n    ss: '%d Sekunden',\n    m: processRelativeTime,\n    mm: '%d Minuten',\n    h: processRelativeTime,\n    hh: '%d Stunden',\n    d: processRelativeTime,\n    dd: processRelativeTime,\n    M: processRelativeTime,\n    MM: processRelativeTime,\n    y: processRelativeTime,\n    yy: processRelativeTime\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : English (United Kingdom) [en-gb]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\n\nexport const enGbLocale: LocaleData = {\n  abbr: 'en-gb',\n  months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n  monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n  weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n  weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n  weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n  longDateFormat : {\n    LT : 'HH:mm',\n    LTS : 'HH:mm:ss',\n    L : 'DD/MM/YYYY',\n    LL : 'D MMMM YYYY',\n    LLL : 'D MMMM YYYY HH:mm',\n    LLLL : 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar : {\n    sameDay : '[Today at] LT',\n    nextDay : '[Tomorrow at] LT',\n    nextWeek : 'dddd [at] LT',\n    lastDay : '[Yesterday at] LT',\n    lastWeek : '[Last] dddd [at] LT',\n    sameElse : 'L'\n  },\n  relativeTime : {\n    future : 'in %s',\n    past : '%s ago',\n    s : 'a few seconds',\n    ss : '%d seconds',\n    m : 'a minute',\n    mm : '%d minutes',\n    h : 'an hour',\n    hh : '%d hours',\n    d : 'a day',\n    dd : '%d days',\n    M : 'a month',\n    MM : '%d months',\n    y : 'a year',\n    yy : '%d years'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n  ordinal(_num: number): string {\n    const num = Number(_num);\n    const b = num % 10,\n      output = (~~(num % 100 / 10) === 1) ? 'th' :\n        (b === 1) ? 'st' :\n          (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n    return num + output;\n  },\n  week : {\n    dow : 1, // Monday is the first day of the week.\n    doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getHours, getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Spanish (Dominican Republic) [es-do]\n\nlet monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n  monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\nlet monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\nlet monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\nexport const esDoLocale: LocaleData = {\n  abbr: 'es-do',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortDot;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort[getMonth(date, isUTC)];\n    } else {\n      return monthsShortDot[getMonth(date, isUTC)];\n    }\n  },\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY h:mm A',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'\n  },\n  calendar: {\n    sameDay(date: Date): string {\n      return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextDay(date: Date): string {\n      return '[mañana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextWeek(date: Date): string {\n      return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastDay(date: Date): string {\n      return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastWeek(date: Date): string {\n      return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getHours, getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Spanish [es]\n//! author : Julio Napurí : https://github.com/julionc\n\nlet monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n  monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\nlet monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\nlet monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\nexport const esLocale: LocaleData = {\n  abbr: 'es',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortDot;\n    }\n\n    if (/-MMM-/.test(format)) {\n      return monthsShort[getMonth(date, isUTC)];\n    }\n\n    return monthsShortDot[getMonth(date, isUTC)];\n  },\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    sameDay(date: Date) {\n      return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextDay(date: Date) {\n      return '[mañana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextWeek(date: Date) {\n      return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastDay(date: Date) {\n      return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastWeek(date: Date) {\n      return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getHours, getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Spanish (United States) [es-us]\n//! author : bustta : https://github.com/bustta\n\nlet monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\nlet monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\nexport const esUsLocale: LocaleData = {\n  abbr: 'es-us',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortDot;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort[getMonth(date, isUTC)];\n    } else {\n      return monthsShortDot[getMonth(date, isUTC)];\n    }\n  },\n  monthsParseExact: true,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM [de] D [de] YYYY',\n    LLL: 'MMMM [de] D [de] YYYY h:mm A',\n    LLLL: 'dddd, MMMM [de] D [de] YYYY h:mm A'\n  },\n  calendar: {\n    sameDay(date: Date): string {\n      return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextDay(date: Date): string {\n      return '[mañana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextWeek(date: Date): string {\n      return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastDay(date: Date): string {\n      return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastWeek(date: Date): string {\n      return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 0, // Sunday is the first day of the week.\n    doy: 6  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Estonian [et]\n//! author : Chris Gedrim : https://github.com/a90machado\n\nconst processRelativeTime = function (num: number, withoutSuffix: boolean, key: string, isFuture: boolean) {\n  const format = {\n      s : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n      ss: [num + 'sekundi', num + 'sekundit'],\n      m : ['ühe minuti', 'üks minut'],\n      mm: [num + ' minuti', num + ' minutit'],\n      h : ['ühe tunni', 'tund aega', 'üks tund'],\n      hh: [num + ' tunni', num + ' tundi'],\n      d : ['ühe päeva', 'üks päev'],\n      M : ['kuu aja', 'kuu aega', 'üks kuu'],\n      MM: [num + ' kuu', num + ' kuud'],\n      y : ['ühe aasta', 'aasta', 'üks aasta'],\n      yy: [num + ' aasta', num + ' aastat']\n  };\n  if (withoutSuffix) {\n      return format[key][2] ? format[key][2] : format[key][1];\n  }\n  return isFuture ? format[key][0] : format[key][1];\n};\n\nexport const etLocale: LocaleData = {\n  abbr: 'et',\n  months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n  monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n  weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\n  weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),\n  weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),\n  longDateFormat: {\n    LT:   'H:mm',\n    LTS:  'H:mm:ss',\n    L:    'DD.MM.YYYY',\n    LL:   'D. MMMM YYYY',\n    LLL:  'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay:  '[Täna,] LT',\n    nextDay:  '[Homme,] LT',\n    nextWeek: '[Järgmine] dddd LT',\n    lastDay:  '[Eile,] LT',\n    lastWeek: '[Eelmine] dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime : {\n    future : '%s pärast',\n    past   : '%s tagasi',\n    s      : processRelativeTime,\n    ss     : processRelativeTime,\n    m      : processRelativeTime,\n    mm     : processRelativeTime,\n    h      : processRelativeTime,\n    hh     : processRelativeTime,\n    d      : processRelativeTime,\n    dd     : '%d päeva',\n    M      : processRelativeTime,\n    MM     : processRelativeTime,\n    y      : processRelativeTime,\n    yy     : processRelativeTime\n  },\n  dayOfMonthOrdinalParse : /\\d{1,2}./,\n  ordinal : '%d.',\n  week : {\n      dow : 1, // Monday is the first day of the week.\n      doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n// https://github.com/moment/moment/blob/develop/locale/fi.js\n\nvar numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),\n  numbersFuture = [\n    'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',\n    numbersPast[7], numbersPast[8], numbersPast[9]\n  ];\n\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  var result = '';\n  switch (key) {\n    case 's':\n      return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n    case 'ss':\n      return isFuture ? 'sekunnin' : 'sekuntia';\n    case 'm':\n      return isFuture ? 'minuutin' : 'minuutti';\n    case 'mm':\n      result = isFuture ? 'minuutin' : 'minuuttia';\n      break;\n    case 'h':\n      return isFuture ? 'tunnin' : 'tunti';\n    case 'hh':\n      result = isFuture ? 'tunnin' : 'tuntia';\n      break;\n    case 'd':\n      return isFuture ? 'päivän' : 'päivä';\n    case 'dd':\n      result = isFuture ? 'päivän' : 'päivää';\n      break;\n    case 'M':\n      return isFuture ? 'kuukauden' : 'kuukausi';\n    case 'MM':\n      result = isFuture ? 'kuukauden' : 'kuukautta';\n      break;\n    case 'y':\n      return isFuture ? 'vuoden' : 'vuosi';\n    case 'yy':\n      result = isFuture ? 'vuoden' : 'vuotta';\n      break;\n  }\n  result = verbalNumber(num, isFuture) + ' ' + result;\n  return result;\n}\n\nfunction verbalNumber(num: number, isFuture: boolean) {\n  return num < 10 ? (isFuture ? numbersFuture[num] : numbersPast[num]) : num;\n}\n\nexport const fiLocale: LocaleData = {\n  abbr: 'fi',\n  months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n  monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),\n  weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n  weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),\n  weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),\n  longDateFormat: {\n    LT: 'HH.mm',\n    LTS: 'HH.mm.ss',\n    L: 'DD.MM.YYYY',\n    LL: 'Do MMMM[ta] YYYY',\n    LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',\n    LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n    l: 'D.M.YYYY',\n    ll: 'Do MMM YYYY',\n    lll: 'Do MMM YYYY, [klo] HH.mm',\n    llll: 'ddd, Do MMM YYYY, [klo] HH.mm'\n  },\n  calendar: {\n    sameDay: '[tänään] [klo] LT',\n    nextDay: '[huomenna] [klo] LT',\n    nextWeek: 'dddd [klo] LT',\n    lastDay: '[eilen] [klo] LT',\n    lastWeek: '[viime] dddd[na] [klo] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s päästä',\n    past: '%s sitten',\n    s: translate,\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : French [fr]\n//! author : John Fischer : https://github.com/jfroffice\n\nexport const frLocale: LocaleData = {\n  abbr: 'fr',\n  months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n  monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n  weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n  weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Aujourd’hui à] LT',\n    nextDay: '[Demain à] LT',\n    nextWeek: 'dddd [à] LT',\n    lastDay: '[Hier à] LT',\n    lastWeek: 'dddd [dernier à] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'dans %s',\n    past: 'il y a %s',\n    s: 'quelques secondes',\n    ss: '%d secondes',\n    m: 'une minute',\n    mm: '%d minutes',\n    h: 'une heure',\n    hh: '%d heures',\n    d: 'un jour',\n    dd: '%d jours',\n    M: 'un mois',\n    MM: '%d mois',\n    y: 'un an',\n    yy: '%d ans'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n  ordinal(_num: number, period: string): string {\n    const num = Number(_num);\n    switch (period) {\n      // TODO: Return 'e' when day of month > 1. Move this case inside\n      // block for masculine words below.\n      // See https://github.com/moment/moment/issues/3375\n      case 'D':\n        return num + (num === 1 ? 'er' : '');\n\n      // Words with masculine grammatical gender: mois, trimestre, jour\n      default:\n      case 'M':\n      case 'Q':\n      case 'DDD':\n      case 'd':\n        return num + (num === 1 ? 'er' : 'e');\n\n      // Words with feminine grammatical gender: semaine\n      case 'w':\n      case 'W':\n        return num + (num === 1 ? 're' : 'e');\n    }\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getHours, getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Galician [gl]\n//! author : Darío Beiró : https://github.com/quinobravo\n\nlet monthsShortDot = 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),\n  monthsShort = 'xan_feb_mar_abr_mai_xuñ_xul_ago_set_out_nov_dec'.split('_');\n\nlet monthsParse = [/^xan/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^xuñ/i, /^xul/i, /^ago/i, /^set/i, /^out/i, /^nov/i, /^dec/i];\nlet monthsRegex = /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro|xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuñ\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i;\n\nexport const glLocale: LocaleData = {\n  abbr: 'gl',\n  months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortDot;\n    }\n\n    if (/-MMM-/.test(format)) {\n      return monthsShort[getMonth(date, isUTC)];\n    }\n\n    return monthsShortDot[getMonth(date, isUTC)];\n  },\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro)/i,\n  monthsShortStrictRegex: /^(xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuñ\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i,\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    sameDay(date: Date) {\n      return '[hoxe á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextDay(date: Date) {\n      return '[mañan á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextWeek(date: Date) {\n      return 'dddd [á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastDay(date: Date) {\n      return '[onte á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastWeek(date: Date) {\n      return '[o] dddd [pasado á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'fai %s',\n    s: 'uns segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'unha hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un ano',\n    yy: '%d anos'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Hebrew [he]\n//! author : Tomer Cohen : https://github.com/tomer\n//! author : Moshe Simantov : https://github.com/DevelopmentIL\n//! author : Tal Ater : https://github.com/TalAter\n\nexport const heLocale: LocaleData = {\n  abbr: 'he',\n  months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),\n  monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\n  weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n  weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n  weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [ב]MMMM YYYY',\n    LLL: 'D [ב]MMMM YYYY HH:mm',\n    LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',\n    l: 'D/M/YYYY',\n    ll: 'D MMM YYYY',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd, D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[היום ב־]LT',\n    nextDay: '[מחר ב־]LT',\n    nextWeek: 'dddd [בשעה] LT',\n    lastDay: '[אתמול ב־]LT',\n    lastWeek: '[ביום] dddd [האחרון בשעה] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'בעוד %s',\n    past: 'לפני %s',\n    s: 'מספר שניות',\n    ss: '%d שניות',\n    m: 'דקה',\n    mm: '%d דקות',\n    h: 'שעה',\n    hh(num: number): string {\n      if (num === 2) {\n        return 'שעתיים';\n      }\n      return num + ' שעות';\n    },\n    d: 'יום',\n    dd(num: number): string {\n      if (num === 2) {\n        return 'יומיים';\n      }\n      return num + ' ימים';\n    },\n    M: 'חודש',\n    MM(num: number): string {\n      if (num === 2) {\n        return 'חודשיים';\n      }\n      return num + ' חודשים';\n    },\n    y: 'שנה',\n    yy(num: number): string {\n      if (num === 2) {\n        return 'שנתיים';\n      } else if (num % 10 === 0 && num !== 10) {\n        return num + ' שנה';\n      }\n      return num + ' שנים';\n    }\n  },\n  meridiemParse: /אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,\n  isPM(input) {\n    return /^(אחה\"צ|אחרי הצהריים|בערב)$/.test(input);\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 5) {\n      return 'לפנות בוקר';\n    } else if (hour < 10) {\n      return 'בבוקר';\n    } else if (hour < 12) {\n      return isLower ? 'לפנה\"צ' : 'לפני הצהריים';\n    } else if (hour < 18) {\n      return isLower ? 'אחה\"צ' : 'אחרי הצהריים';\n    } else {\n      return 'בערב';\n    }\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Hindi [hi]\n//! author : Mayank Singhal : https://github.com/mayanksinghal\n\nlet symbolMap: {[key: string]: string} = {\n    1: '१',\n    2: '२',\n    3: '३',\n    4: '४',\n    5: '५',\n    6: '६',\n    7: '७',\n    8: '८',\n    9: '९',\n    0: '०'\n  },\n  numberMap: {[key: string]: string} = {\n    '१': '1',\n    '२': '2',\n    '३': '3',\n    '४': '4',\n    '५': '5',\n    '६': '6',\n    '७': '7',\n    '८': '8',\n    '९': '9',\n    '०': '0'\n  };\n\nexport const hiLocale: LocaleData = {\n  abbr: 'hi',\n  months: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),\n  monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n  weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n  weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm बजे',\n    LTS: 'A h:mm:ss बजे',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY, A h:mm बजे',\n    LLLL: 'dddd, D MMMM YYYY, A h:mm बजे'\n  },\n  calendar: {\n    sameDay: '[आज] LT',\n    nextDay: '[कल] LT',\n    nextWeek: 'dddd, LT',\n    lastDay: '[कल] LT',\n    lastWeek: '[पिछले] dddd, LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s में',\n    past: '%s पहले',\n    s: 'कुछ ही क्षण',\n    ss: '%d सेकंड',\n    m: 'एक मिनट',\n    mm: '%d मिनट',\n    h: 'एक घंटा',\n    hh: '%d घंटे',\n    d: 'एक दिन',\n    dd: '%d दिन',\n    M: 'एक महीने',\n    MM: '%d महीने',\n    y: 'एक वर्ष',\n    yy: '%d वर्ष'\n  },\n  preparse(str: string): string {\n    return str.replace(/[१२३४५६७८९०]/g, function (match) {\n      return numberMap[match];\n    });\n  },\n  postformat(str: string): string {\n    return str.replace(/\\d/g, function (match) {\n      return symbolMap[match];\n    });\n  },\n  // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n  // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n  meridiemParse: /रात|सुबह|दोपहर|शाम/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'रात') {\n      return hour < 4 ? hour : hour + 12;\n    } else if (meridiem === 'सुबह') {\n      return hour;\n    } else if (meridiem === 'दोपहर') {\n      return hour >= 10 ? hour : hour + 12;\n    } else if (meridiem === 'शाम') {\n      return hour + 12;\n    }\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'रात';\n    } else if (hour < 10) {\n      return 'सुबह';\n    } else if (hour < 17) {\n      return 'दोपहर';\n    } else if (hour < 20) {\n      return 'शाम';\n    } else {\n      return 'रात';\n    }\n  },\n  week: {\n    dow: 0, // Sunday is the first day of the week.\n    doy: 6  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Hungarian [hu]\n//! author : Adam Brunner : https://github.com/adambrunner\n\nlet weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  switch (key) {\n    case 's':\n      return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';\n    case 'ss':\n      return num + ((isFuture || withoutSuffix) ? ' másodperc' : ' másodperce');\n    case 'm':\n      return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n    case 'mm':\n      return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n    case 'h':\n      return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n    case 'hh':\n      return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n    case 'd':\n      return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n    case 'dd':\n      return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n    case 'M':\n      return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n    case 'MM':\n      return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n    case 'y':\n      return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n    case 'yy':\n      return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n  }\n  return '';\n}\nfunction week(date: Date, isFuture: boolean) {\n  return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[getDayOfWeek(date)] + '] LT[-kor]';\n}\n\nexport const huLocale: LocaleData = {\n  abbr: 'hu',\n  months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),\n  monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),\n  weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n  weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n  weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),\n  longDateFormat : {\n    LT : 'H:mm',\n    LTS : 'H:mm:ss',\n    L : 'YYYY.MM.DD.',\n    LL : 'YYYY. MMMM D.',\n    LLL : 'YYYY. MMMM D. H:mm',\n    LLLL : 'YYYY. MMMM D., dddd H:mm'\n  },\n  meridiemParse: /de|du/i,\n  isPM (input) {\n    return input.charAt(1).toLowerCase() === 'u';\n  },\n  meridiem (hours, minutes, isLower) {\n    if (hours < 12) {\n      return isLower === true ? 'de' : 'DE';\n    } else {\n      return isLower === true ? 'du' : 'DU';\n    }\n  },\n  calendar : {\n    sameDay : '[ma] LT[-kor]',\n    nextDay : '[holnap] LT[-kor]',\n    nextWeek (date: Date) {\n      return week(date, true);\n    },\n    lastDay : '[tegnap] LT[-kor]',\n    lastWeek (date: Date) {\n      return week(date, false);\n    },\n    sameElse : 'L'\n  },\n  relativeTime : {\n    future : '%s múlva',\n    past : '%s',\n    s : translate,\n    ss : translate,\n    m : translate,\n    mm : translate,\n    h : translate,\n    hh : translate,\n    d : translate,\n    dd : translate,\n    M : translate,\n    MM : translate,\n    y : translate,\n    yy : translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal : '%d.',\n  week : {\n    dow : 1, // Monday is the first day of the week.\n    doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Croatian [hr]\n//! author : Danijel Grmec : https://github.com/cobaltsis\n\nexport const hrLocale: LocaleData = {\n  abbr: 'hr',\n  months: 'Siječanj_Veljača_Ožujak_Travanj_Svibanj_Lipanj_Srpanj_Kolovoz_Rujan_Listopad_Studeni_Prosinac'.split('_'),\n  monthsShort: 'Sij_Velj_Ožu_Tra_Svi_Lip_Srp_Kol_Ruj_Lis_Stu_Pro'.split('_'),\n  weekdays: 'Nedjelja_Ponedjeljak_Utorak_Srijeda_Četvrtak_Petak_Subota'.split('_'),\n  weekdaysShort: 'Ned_Pon_Uto_Sri_Čet_Pet_Sub'.split('_'),\n  weekdaysMin: 'Ne_Po_Ut_Sr_Če_Pe_Su'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Danas u] LT',\n    nextDay: '[Sutra u] LT',\n    nextWeek: 'dddd [u] LT',\n    lastDay: '[Jučer u] LT',\n    lastWeek: '[Zadnji] dddd [u] LT',\n    sameElse: 'L'\n  },\n  invalidDate: 'Neispravan datum',\n  relativeTime: {\n    future: 'za %s',\n    past: '%s prije',\n    s: 'nekoliko sekundi',\n    ss: '%d sekundi',\n    m: 'minuta',\n    mm: '%d minuta',\n    h: 'sat',\n    hh: '%d sati',\n    d: 'dan',\n    dd: '%d dana',\n    M: 'mjesec',\n    MM: '%d mjeseci',\n    y: 'godina',\n    yy: '%d godina'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n  ordinal(_num: number): string {\n    const num = Number(_num);\n    const b = num % 10,\n      output = (~~(num % 100 / 10) === 1) ? '.' :\n        (b === 1) ? '.' :\n          (b === 2) ? '.' :\n            (b === 3) ? '.' : '.';\n    return num + output;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Indonesia [id]\n//! author : Romy Kusuma : https://github.com/rkusuma\n//! reference: https://github.com/moment/moment/blob/develop/locale/id.js\n\nexport const idLocale: LocaleData = {\n  abbr: 'id',\n  months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n  monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),\n  weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n  weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n  weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n  longDateFormat : {\n    LT : 'HH.mm',\n    LTS : 'HH.mm.ss',\n    L : 'DD/MM/YYYY',\n    LL : 'D MMMM YYYY',\n    LLL : 'D MMMM YYYY [pukul] HH.mm',\n    LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n  },\n  meridiemParse: /pagi|siang|sore|malam/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'pagi') {\n      return hour;\n    } else if (meridiem === 'siang') {\n      return hour >= 11 ? hour : hour + 12;\n    } else if (meridiem === 'sore' || meridiem === 'malam') {\n      return hour + 12;\n    }\n  },\n  meridiem(hours, minutes, isLower) {\n    if (hours < 11) {\n      return 'pagi';\n    } else if (hours < 15) {\n      return 'siang';\n    } else if (hours < 19) {\n      return 'sore';\n    } else {\n      return 'malam';\n    }\n  },\n  calendar : {\n    sameDay : '[Hari ini pukul] LT',\n    nextDay : '[Besok pukul] LT',\n    nextWeek : 'dddd [pukul] LT',\n    lastDay : '[Kemarin pukul] LT',\n    lastWeek : 'dddd [lalu pukul] LT',\n    sameElse : 'L'\n  },\n  relativeTime : {\n    future : 'dalam %s',\n    past : '%s yang lalu',\n    s : 'beberapa detik',\n    ss : '%d detik',\n    m : 'semenit',\n    mm : '%d menit',\n    h : 'sejam',\n    hh : '%d jam',\n    d : 'sehari',\n    dd : '%d hari',\n    M : 'sebulan',\n    MM : '%d bulan',\n    y : 'setahun',\n    yy : '%d tahun'\n  },\n  week : {\n    dow : 1, // Monday is the first day of the week.\n    doy : 7  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Italian [it]\n//! author : Lorenzo : https://github.com/aliem\n//! author: Mattia Larentis: https://github.com/nostalgiaz\n\nexport const itLocale: LocaleData = {\n  abbr: 'it',\n  months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n  monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n  weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n  weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n  weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Oggi alle] LT',\n    nextDay: '[Domani alle] LT',\n    nextWeek: 'dddd [alle] LT',\n    lastDay: '[Ieri alle] LT',\n    lastWeek(date: Date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[la scorsa] dddd [alle] LT';\n        default:\n          return '[lo scorso] dddd [alle] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future(num: number): string {\n      return ((/^[0-9].+$/).test(num.toString(10)) ? 'tra' : 'in') + ' ' + num;\n    },\n    past: '%s fa',\n    s: 'alcuni secondi',\n    ss: '%d secondi',\n    m: 'un minuto',\n    mm: '%d minuti',\n    h: 'un\\'ora',\n    hh: '%d ore',\n    d: 'un giorno',\n    dd: '%d giorni',\n    M: 'un mese',\n    MM: '%d mesi',\n    y: 'un anno',\n    yy: '%d anni'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Japanese [ja]\n//! author : LI Long : https://github.com/baryon\n\nexport const jaLocale: LocaleData =  {\n  abbr: 'ja',\n  months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n  weekdaysShort : '日_月_火_水_木_金_土'.split('_'),\n  weekdaysMin : '日_月_火_水_木_金_土'.split('_'),\n  longDateFormat : {\n    LT : 'HH:mm',\n    LTS : 'HH:mm:ss',\n    L : 'YYYY/MM/DD',\n    LL : 'YYYY年M月D日',\n    LLL : 'YYYY年M月D日 HH:mm',\n    LLLL : 'YYYY年M月D日 HH:mm dddd',\n    l : 'YYYY/MM/DD',\n    ll : 'YYYY年M月D日',\n    lll : 'YYYY年M月D日 HH:mm',\n    llll : 'YYYY年M月D日 HH:mm dddd'\n  },\n  meridiemParse: /午前|午後/i,\n  isPM (input) {\n    return input === '午後';\n  },\n  meridiem (hour, minute, isLower) {\n    if (hour < 12) {\n      return '午前';\n    } else {\n      return '午後';\n    }\n  },\n  calendar : {\n    sameDay : '[今日] LT',\n    nextDay : '[明日] LT',\n    nextWeek : '[来週]dddd LT',\n    lastDay : '[昨日] LT',\n    lastWeek : '[前週]dddd LT',\n    sameElse : 'L'\n  },\n  dayOfMonthOrdinalParse : /\\d{1,2}日/,\n  ordinal (num: number, period: string): string {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + '日';\n      default:\n        return num.toString(10);\n    }\n  },\n  relativeTime : {\n    future : '%s後',\n    past : '%s前',\n    s : '数秒',\n    ss : '%d秒',\n    m : '1分',\n    mm : '%d分',\n    h : '1時間',\n    hh : '%d時間',\n    d : '1日',\n    dd : '%d日',\n    M : '1ヶ月',\n    MM : '%dヶ月',\n    y : '1年',\n    yy : '%d年'\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Georgian [ka]\n//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili\n//! author : Levan Tskipuri : https://github.com/tskipa\n\nexport const kaLocale: LocaleData =  {\n  abbr: 'ka',\n  months : {\n    format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_'),\n    standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_')\n  },\n  monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n  weekdays : {\n    standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\n    format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),\n    isFormat: /(წინა|შემდეგ)/\n  },\n  weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n  weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n  longDateFormat : {\n    LT : 'h:mm A',\n    LTS : 'h:mm:ss A',\n    L : 'DD/MM/YYYY',\n    LL : 'D MMMM YYYY',\n    LLL : 'D MMMM YYYY h:mm A',\n    LLLL : 'dddd, D MMMM YYYY h:mm A'\n  },\n  calendar : {\n    sameDay : '[დღეს] LT[-ზე]',\n    nextDay : '[ხვალ] LT[-ზე]',\n    lastDay : '[გუშინ] LT[-ზე]',\n    nextWeek : '[შემდეგ] dddd LT[-ზე]',\n    lastWeek : '[წინა] dddd LT-ზე',\n    sameElse : 'L'\n  },\n  relativeTime : {\n    future(s: number): string {\n      var st = s.toString();\n      return (/(წამი|წუთი|საათი|წელი)/).test(st) ?\n      st.replace(/ი$/, 'ში') :\n      st + 'ში';\n    },\n    past(s: number): string {\n      var st = s.toString();\n      if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(st)) {\n        return st.replace(/(ი|ე)$/, 'ის წინ');\n      }\n      if ((/წელი/).test(st)) {\n        return st.replace(/წელი$/, 'წლის წინ');\n      }\n    },\n    s : 'რამდენიმე წამი',\n    ss : '%d წამი',\n    m : 'წუთი',\n    mm : '%d წუთი',\n    h : 'საათი',\n    hh : '%d საათი',\n    d : 'დღე',\n    dd : '%d დღე',\n    M : 'თვე',\n    MM : '%d თვე',\n    y : 'წელი',\n    yy : '%d წელი'\n  },\n  dayOfMonthOrdinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n  ordinal(_num: number, _period: string): string {\n    const num = Number(_num);\n    if (num === 0) {\n      return num.toString();\n    }\n    if (num === 1) {\n      return num + '-ლი';\n    }\n    if ((num < 20) || (num <= 100 && (num % 20 === 0)) || (num % 100 === 0)) {\n      return 'მე-' + num;\n    }\n    return num + '-ე';\n  },\n  week : {\n    dow : 1,\n    doy : 4\n  }\n};\n","// ! moment.js locale configuration\n// ! locale : Kazakh [kk]\n// ! authors : Nurlan Rakhimzhanov : https://github.com/nurlan\n\nimport { LocaleData } from '..';\n\nconst suffixes = {\n  0: '-ші',\n  1: '-ші',\n  2: '-ші',\n  3: '-ші',\n  4: '-ші',\n  5: '-ші',\n  6: '-шы',\n  7: '-ші',\n  8: '-ші',\n  9: '-шы',\n  10: '-шы',\n  20: '-шы',\n  30: '-шы',\n  40: '-шы',\n  50: '-ші',\n  60: '-шы',\n  70: '-ші',\n  80: '-ші',\n  90: '-шы',\n  100: '-ші'\n};\n\nexport const kkLocale: LocaleData = {\n  abbr: 'kk',\n  months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),\n  monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),\n  weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),\n  weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),\n  weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),\n  longDateFormat : {\n    LT : 'HH:mm',\n    LTS : 'HH:mm:ss',\n    L : 'DD.MM.YYYY',\n    LL : 'D MMMM YYYY',\n    LLL : 'D MMMM YYYY HH:mm',\n    LLLL : 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar : {\n    sameDay : '[Бүгін сағат] LT',\n    nextDay : '[Ертең сағат] LT',\n    nextWeek : 'dddd [сағат] LT',\n    lastDay : '[Кеше сағат] LT',\n    lastWeek : '[Өткен аптаның] dddd [сағат] LT',\n    sameElse : 'L'\n  },\n  relativeTime : {\n    future : '%s ішінде',\n    past : '%s бұрын',\n    s : 'бірнеше секунд',\n    ss : '%d секунд',\n    m : 'бір минут',\n    mm : '%d минут',\n    h : 'бір сағат',\n    hh : '%d сағат',\n    d : 'бір күн',\n    dd : '%d күн',\n    M : 'бір ай',\n    MM : '%d ай',\n    y : 'бір жыл',\n    yy : '%d жыл'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(ші|шы)/,\n  ordinal(_num: number): string {\n    const a = _num % 10;\n    const b = _num >= 100 ? 100 : null;\n\n    return _num + (suffixes[_num] || suffixes[a] || suffixes[b]);\n  },\n  week : {\n    dow : 1, // Monday is the first day of the week.\n    doy : 7  // The week that contains Jan 7th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-shorthand\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Korean [ko]\n//! author : Kyungwook, Park : https://github.com/kyungw00k\n//! author : Jeeeyul Lee <jeeeyul@gmail.com>\n\nexport const koLocale: LocaleData = {\n  abbr: 'ko',\n  months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n  monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n  weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n  weekdaysShort : '일_월_화_수_목_금_토'.split('_'),\n  weekdaysMin : '일_월_화_수_목_금_토'.split('_'),\n  longDateFormat : {\n    LT : 'A h:mm',\n    LTS : 'A h:mm:ss',\n    L : 'YYYY.MM.DD',\n    LL : 'YYYY년 MMMM D일',\n    LLL : 'YYYY년 MMMM D일 A h:mm',\n    LLLL : 'YYYY년 MMMM D일 dddd A h:mm',\n    l : 'YYYY.MM.DD',\n    ll : 'YYYY년 MMMM D일',\n    lll : 'YYYY년 MMMM D일 A h:mm',\n    llll : 'YYYY년 MMMM D일 dddd A h:mm'\n  },\n  calendar : {\n    sameDay : '오늘 LT',\n    nextDay : '내일 LT',\n    nextWeek : 'dddd LT',\n    lastDay : '어제 LT',\n    lastWeek : '지난주 dddd LT',\n    sameElse : 'L'\n  },\n  relativeTime : {\n    future : '%s 후',\n    past : '%s 전',\n    s : '몇 초',\n    ss : '%d초',\n    m : '1분',\n    mm : '%d분',\n    h : '한 시간',\n    hh : '%d시간',\n    d : '하루',\n    dd : '%d일',\n    M : '한 달',\n    MM : '%d달',\n    y : '일 년',\n    yy : '%d년'\n  },\n  dayOfMonthOrdinalParse : /\\d{1,2}(일|월|주)/,\n  ordinal : function (num: number, period: string): string {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + '일';\n      case 'M':\n        return num + '월';\n      case 'w':\n      case 'W':\n        return num + '주';\n      default:\n        return num.toString(10);\n    }\n  },\n  meridiemParse : /오전|오후/,\n  isPM : function (token) {\n    return token === '오후';\n  },\n  meridiem : function (hour, minute, isUpper) {\n    return hour < 12 ? '오전' : '오후';\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Lithuanian [lt]\n//! author : Stanislavas Guk : https://github.com/ixoster\n\nconst units = {\n  ss : 'sekundė_sekundžių_sekundes',\n  m : 'minutė_minutės_minutę',\n  mm: 'minutės_minučių_minutes',\n  h : 'valanda_valandos_valandą',\n  hh: 'valandos_valandų_valandas',\n  d : 'diena_dienos_dieną',\n  dd: 'dienos_dienų_dienas',\n  M : 'mėnuo_mėnesio_mėnesį',\n  MM: 'mėnesiai_mėnesių_mėnesius',\n  y : 'metai_metų_metus',\n  yy: 'metai_metų_metus'\n};\nfunction translateSeconds(num: number, withoutSuffix: boolean, key: string, isFuture: boolean) {\n  if (withoutSuffix) {\n      return 'kelios sekundės';\n  } else {\n      return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n  }\n}\nfunction translateSingular(num: number, withoutSuffix: boolean, key: string, isFuture: boolean) {\n  return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);\n}\nfunction special(num: number) {\n  return num % 10 === 0 || (num > 10 && num < 20);\n}\nfunction forms(key: string) {\n  return (units as any)[key].split('_');\n}\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean) {\n  let result = num + ' ';\n  if (num === 1) {\n      return result + translateSingular(num, withoutSuffix, key[0], isFuture);\n  } else if (withoutSuffix) {\n      return result + (special(num) ? forms(key)[1] : forms(key)[0]);\n  } else {\n      if (isFuture) {\n          return result + forms(key)[1];\n      } else {\n          return result + (special(num) ? forms(key)[1] : forms(key)[2]);\n      }\n  }\n}\n\nexport const ltLocale: LocaleData = {\n  abbr: 'lt',\n  months : {\n    format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),\n    standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),\n    isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/\n  },\n  monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n  weekdays : {\n      format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),\n      standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),\n      isFormat: /dddd HH:mm/\n  },\n  weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n  weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),\n  weekdaysParseExact : true,\n  longDateFormat : {\n      LT : 'HH:mm',\n      LTS : 'HH:mm:ss',\n      L : 'YYYY-MM-DD',\n      LL : 'YYYY [m.] MMMM D [d.]',\n      LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n      LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\n      l : 'YYYY-MM-DD',\n      ll : 'YYYY [m.] MMMM D [d.]',\n      lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n      llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'\n  },\n  calendar : {\n      sameDay : '[Šiandien] LT',\n      nextDay : '[Rytoj] LT',\n      nextWeek : 'dddd LT',\n      lastDay : '[Vakar] LT',\n      lastWeek : '[Praėjusį] dddd LT',\n      sameElse : 'L'\n  },\n  relativeTime : {\n      future : 'po %s',\n      past : 'prieš %s',\n      s : translateSeconds,\n      ss : translate,\n      m : translateSingular,\n      mm : translate,\n      h : translateSingular,\n      hh : translate,\n      d : translateSingular,\n      dd : translate,\n      M : translateSingular,\n      MM : translate,\n      y : translateSingular,\n      yy : translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\n  ordinal(num) {\n      return num + '-oji';\n  },\n  week : {\n      dow : 1, // Monday is the first day of the week.\n      doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Latvian [lv]\n//! author : Matiss Janis Aboltins : https://github.com/matissjanis\n\nexport const lvLocale: LocaleData = {\n  abbr: 'lv',\n  months : 'Janvāris_Februāris_Marts_Aprīlis_Maijs_Jūnijs_Jūlijs_Augusts_Septembris_Oktobris_Novembris_Decembris'.split('_'),\n  monthsShort : 'Jan_Feb_Mar_Apr_Mai_Jūn_Jūl_Aug_Sep_Okt_Nov_Dec'.split('_'),\n  weekdays : 'Svētdiena_Pirmdiena_Otrdiena_Trešdiena_Ceturtdiena_Piektdiena_Sestdiena'.split('_'),\n  weekdaysShort : 'Svētd_Pirmd_Otrd_Trešd_Ceturtd_Piektd_Sestd'.split('_'),\n  weekdaysMin : 'Sv_Pi_Ot_Tr_Ce_Pk_Se'.split('_'),\n  longDateFormat : {\n    LT : 'HH:mm',\n    LTS : 'HH:mm:ss',\n    L : 'DD/MM/YYYY',\n    LL : 'D MMMM YYYY',\n    LLL : 'D MMMM YYYY HH:mm',\n    LLLL : 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar : {\n    sameDay : '[Today at] LT',\n    nextDay : '[Tomorrow at] LT',\n    nextWeek : 'dddd [at] LT',\n    lastDay : '[Yesterday at] LT',\n    lastWeek : '[Last] dddd [at] LT',\n    sameElse : 'L'\n  },\n  relativeTime : {\n    future : 'pēc %s',\n    past : 'pirms %s',\n    s : 'dažām sekundēm',\n    ss : '%d sekundēm',\n    m : 'minūtes',\n    mm : '%d minūtēm',\n    h : 'stundas',\n    hh : '%d stundām',\n    d : 'dienas',\n    dd : '%d dienām',\n    M : 'mēneša',\n    MM : '%d mēnešiem',\n    y : 'gada',\n    yy : '%d gadiem'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal(num) {\n      return num + '.';\n  },\n  week : {\n    dow : 1, // Monday is the first day of the week.\n    doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-shorthand\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Mongolian [mn]\n//! author : Javkhlantugs Nyamdorj : https://github.com/javkhaanj7\n\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean) {\n  switch (key) {\n    case 's':\n      return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';\n    case 'ss':\n      return num + (withoutSuffix ? ' секунд' : ' секундын');\n    case 'm':\n    case 'mm':\n      return num + (withoutSuffix ? ' минут' : ' минутын');\n    case 'h':\n    case 'hh':\n      return num + (withoutSuffix ? ' цаг' : ' цагийн');\n    case 'd':\n    case 'dd':\n      return num + (withoutSuffix ? ' өдөр' : ' өдрийн');\n    case 'M':\n    case 'MM':\n      return num + (withoutSuffix ? ' сар' : ' сарын');\n    case 'y':\n    case 'yy':\n      return num + (withoutSuffix ? ' жил' : ' жилийн');\n    default:\n      return num.toString(10);\n  }\n}\n\nexport const mnLocale: LocaleData = {\n  abbr: 'mn',\n  months: 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),\n  monthsShort: '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),\n  weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),\n  weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'YYYY оны MMMMын D',\n    LLL: 'YYYY оны MMMMын D HH:mm',\n    LLLL: 'dddd, YYYY оны MMMMын D HH:mm'\n  },\n  meridiemParse: /ҮӨ|ҮХ/i,\n  isPM: function (input) {\n    return input === 'ҮХ';\n  },\n  meridiem: function (hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ҮӨ';\n    } else {\n      return 'ҮХ';\n    }\n  },\n  calendar: {\n    sameDay: '[Өнөөдөр] LT',\n    nextDay: '[Маргааш] LT',\n    nextWeek: '[Ирэх] dddd LT',\n    lastDay: '[Өчигдөр] LT',\n    lastWeek: '[Өнгөрсөн] dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s дараа',\n    past: '%s өмнө',\n    s: translate,\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2} өдөр/,\n  ordinal: function (num: number, period: string): string {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + ' өдөр';\n      default:\n        return num.toString(10);\n    }\n  }\n};\n","// tslint:disable:comment-format\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Norwegian Bokmål [nb]\n//! authors : Espen Hovlandsdal : https://github.com/rexxars\n//!           Sigurd Gartmann : https://github.com/sigurdga\n\nexport const nbLocale: LocaleData = {\n  abbr: 'nb',\n  months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n  monthsShort: 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n  weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),\n  weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY [kl.] HH:mm',\n    LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm'\n  },\n  calendar: {\n    sameDay: '[i dag kl.] LT',\n    nextDay: '[i morgen kl.] LT',\n    nextWeek: 'dddd [kl.] LT',\n    lastDay: '[i går kl.] LT',\n    lastWeek: '[forrige] dddd [kl.] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: '%s siden',\n    s: 'noen sekunder',\n    ss: '%d sekunder',\n    m: 'ett minutt',\n    mm: '%d minutter',\n    h: 'en time',\n    hh: '%d timer',\n    d: 'en dag',\n    dd: '%d dager',\n    M: 'en måned',\n    MM: '%d måneder',\n    y: 'ett år',\n    yy: '%d år'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Dutch (Belgium) [nl-be]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\n\nlet monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\nlet monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\nlet monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\nlet monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\nexport const nlBeLocale: LocaleData = {\n  abbr: 'nl-be',\n  months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortWithDots;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShortWithoutDots[getMonth(date, isUTC)];\n    } else {\n      return monthsShortWithDots[getMonth(date, isUTC)];\n    }\n  },\n\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n\n  weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n  weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n  weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[vandaag om] LT',\n    nextDay: '[morgen om] LT',\n    nextWeek: 'dddd [om] LT',\n    lastDay: '[gisteren om] LT',\n    lastWeek: '[afgelopen] dddd [om] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'over %s',\n    past: '%s geleden',\n    s: 'een paar seconden',\n    ss: '%d seconden',\n    m: 'één minuut',\n    mm: '%d minuten',\n    h: 'één uur',\n    hh: '%d uur',\n    d: 'één dag',\n    dd: '%d dagen',\n    M: 'één maand',\n    MM: '%d maanden',\n    y: 'één jaar',\n    yy: '%d jaar'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n  ordinal(_num: number): string {\n    const num = Number(_num);\n    return num + ((num === 1 || num === 8 || num >= 20) ? 'ste' : 'de');\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Dutch [nl]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\n\nlet monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n  monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\nlet monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\nlet monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\nexport const nlLocale: LocaleData = {\n  abbr: 'nl',\n  months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n  monthsShort (date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortWithDots;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShortWithoutDots[getMonth(date, isUTC)];\n    } else {\n      return monthsShortWithDots[getMonth(date, isUTC)];\n    }\n  },\n\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n  monthsParse,\n  longMonthsParse : monthsParse,\n  shortMonthsParse : monthsParse,\n\n  weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n  weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),\n  weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),\n  weekdaysParseExact : true,\n  longDateFormat : {\n    LT : 'HH:mm',\n    LTS : 'HH:mm:ss',\n    L : 'DD-MM-YYYY',\n    LL : 'D MMMM YYYY',\n    LLL : 'D MMMM YYYY HH:mm',\n    LLLL : 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar : {\n    sameDay: '[vandaag om] LT',\n    nextDay: '[morgen om] LT',\n    nextWeek: 'dddd [om] LT',\n    lastDay: '[gisteren om] LT',\n    lastWeek: '[afgelopen] dddd [om] LT',\n    sameElse: 'L'\n  },\n  relativeTime : {\n    future : 'over %s',\n    past : '%s geleden',\n    s : 'een paar seconden',\n    ss : '%d seconden',\n    m : 'één minuut',\n    mm : '%d minuten',\n    h : 'één uur',\n    hh : '%d uur',\n    d : 'één dag',\n    dd : '%d dagen',\n    M : 'één maand',\n    MM : '%d maanden',\n    y : 'één jaar',\n    yy : '%d jaar'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n  ordinal (_num: number): string {\n    const num = Number(_num);\n    return num + ((num === 1 || num === 8 || num >= 20) ? 'ste' : 'de');\n  },\n  week : {\n    dow : 1, // Monday is the first day of the week.\n    doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getMonth } from '../utils/date-getters';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Polish [pl]\n//! author : Rafal Hirsz : https://github.com/evoL\n\nlet monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');\nlet monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\n\nfunction plural(num: number): boolean {\n  return (num % 10 < 5) && (num % 10 > 1) && ((~~(num / 10) % 10) !== 1);\n}\n\nfunction translate(num: number, withoutSuffix: boolean, key: string): string {\n  let result = num + ' ';\n  switch (key) {\n    case 'ss':\n      return result + (plural(num) ? 'sekundy' : 'sekund');\n    case 'm':\n      return withoutSuffix ? 'minuta' : 'minutę';\n    case 'mm':\n      return result + (plural(num) ? 'minuty' : 'minut');\n    case 'h':\n      return withoutSuffix ? 'godzina' : 'godzinę';\n    case 'hh':\n      return result + (plural(num) ? 'godziny' : 'godzin');\n    case 'MM':\n      return result + (plural(num) ? 'miesiące' : 'miesięcy');\n    case 'yy':\n      return result + (plural(num) ? 'lata' : 'lat');\n  }\n}\n\nexport const plLocale: LocaleData = {\n  abbr: 'pl',\n  months(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsNominative;\n    } else if (format === '') {\n      // Hack: if format empty we know this is used to generate\n      // RegExp by moment. Give then back both valid forms of months\n      // in RegExp ready format.\n      return '(' + monthsSubjective[getMonth(date, isUTC)] + '|' + monthsNominative[getMonth(date, isUTC)] + ')';\n    } else if (/D MMMM/.test(format)) {\n      return monthsSubjective[getMonth(date, isUTC)];\n    } else {\n      return monthsNominative[getMonth(date, isUTC)];\n    }\n  },\n  monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n  weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n  weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n  weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Dziś o] LT',\n    nextDay: '[Jutro o] LT',\n    nextWeek(date: Date): string {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[W niedzielę o] LT';\n\n        case 2:\n          return '[We wtorek o] LT';\n\n        case 3:\n          return '[W środę o] LT';\n\n        case 5:\n          return '[W piątek o] LT';\n\n        case 6:\n          return '[W sobotę o] LT';\n\n        default:\n          return '[W] dddd [o] LT';\n      }\n    },\n    lastDay: '[Wczoraj o] LT',\n    lastWeek(date: Date): string {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[W zeszłą niedzielę o] LT';\n        case 3:\n          return '[W zeszłą środę o] LT';\n        case 4:\n          return '[W zeszłą czwartek o] LT';\n        case 5:\n          return '[W zeszłą piątek o] LT';\n        case 6:\n          return '[W zeszłą sobotę o] LT';\n        default:\n          return '[W zeszły] dddd [o] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: '%s temu',\n    s: 'kilka sekund',\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: '1 dzień',\n    dd: '%d dni',\n    M: 'miesiąc',\n    MM: translate,\n    y: 'rok',\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Portuguese (Brazil) [pt-br]\n//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira\n\nexport const ptBrLocale: LocaleData = {\n  abbr: 'pt-br',\n  months: 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),\n  monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n  weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n  weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n  weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'\n  },\n  calendar: {\n    sameDay: '[Hoje às] LT',\n    nextDay: '[Amanhã às] LT',\n    nextWeek: 'dddd [às] LT',\n    lastDay: '[Ontem às] LT',\n    lastWeek(date: Date) {\n      return (getDayOfWeek(date) === 0 || getDayOfWeek(date) === 6) ?\n        '[Último] dddd [às] LT' : // Saturday + Sunday\n        '[Última] dddd [às] LT'; // Monday - Friday\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'em %s',\n    past: '%s atrás',\n    s: 'poucos segundos',\n    ss: '%d segundos',\n    m: 'um minuto',\n    mm: '%d minutos',\n    h: 'uma hora',\n    hh: '%d horas',\n    d: 'um dia',\n    dd: '%d dias',\n    M: 'um mês',\n    MM: '%d meses',\n    y: 'um ano',\n    yy: '%d anos'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº'\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\nimport { LocaleData } from '../locale/locale.class';\n\n// ! moment.js locale configuration\n// ! locale : Romanian [ro]\n//! author : Vlad Gurdiga : https://github.com/gurdiga\n//! author : Valentin Agachi : https://github.com/avaly\n// ! author : Earle white: https://github.com/5earle\n\nfunction relativeTimeWithPlural(num: number, withoutSuffix: boolean, key: string): string {\n  let format: {[key:string]: string} = {\n    ss: 'secunde',\n    mm: 'minute',\n    hh: 'ore',\n    dd: 'zile',\n    MM: 'luni',\n    yy: 'ani'\n  };\n\n  let separator = ' ';\n  if (num % 100 >= 20 || (num >= 100 && num % 100 === 0)) {\n    separator = ' de ';\n  }\n  return num + separator + format[key];\n}\n\n\nexport const roLocale: LocaleData = {\n  abbr: 'ro',\n  months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n  monthsShort: 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n  weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n  weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY H:mm',\n    LLLL: 'dddd, D MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[azi la] LT',\n    nextDay: '[mâine la] LT',\n    nextWeek: 'dddd [la] LT',\n    lastDay: '[ieri la] LT',\n    lastWeek: '[fosta] dddd [la] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'peste %s',\n    past: '%s în urmă',\n    s: 'câteva secunde',\n    ss: relativeTimeWithPlural,\n    m: 'un minut',\n    mm: relativeTimeWithPlural,\n    h: 'o oră',\n    hh: relativeTimeWithPlural,\n    d: 'o zi',\n    dd: relativeTimeWithPlural,\n    M: 'o lună',\n    MM: relativeTimeWithPlural,\n    y: 'un an',\n    yy: relativeTimeWithPlural\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getWeek } from '../units/week';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Russian [ru]\n//! author : Viktorminator : https://github.com/Viktorminator\n//! Author : Menelion Elensúle : https://github.com/Oire\n//! author : Коренберг Марк : https://github.com/socketpair\n\nfunction plural(word: string, num: number): string {\n  let forms = word.split('_');\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n}\n\nfunction relativeTimeWithPlural(num: number, withoutSuffix: boolean, key: string): string {\n  let format: {[key: string]: string} = {\n    ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n    mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n    hh: 'час_часа_часов',\n    dd: 'день_дня_дней',\n    MM: 'месяц_месяца_месяцев',\n    yy: 'год_года_лет'\n  };\n  if (key === 'm') {\n    return withoutSuffix ? 'минута' : 'минуту';\n  }\n  return num + ' ' + plural(format[key], +num);\n}\n\nlet monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];\n\n// http://new.gramota.ru/spravka/rules/139-prop : § 103\n// Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\nexport const ruLocale: LocaleData = {\n  abbr: 'ru',\n  months: {\n    format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),\n    standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')\n  },\n  monthsShort: {\n    // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?\n    format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),\n    standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')\n  },\n  weekdays: {\n    standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n    format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),\n    isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/\n  },\n  weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n  weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n\n  // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n  monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n  // копия предыдущего\n  monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n  // полные названия с падежами\n  monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n\n  // Выражение, которое соотвествует только сокращённым формам\n  monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY г.',\n    LLL: 'D MMMM YYYY г., H:mm',\n    LLLL: 'dddd, D MMMM YYYY г., H:mm'\n  },\n  calendar: {\n    sameDay: '[Сегодня в] LT',\n    nextDay: '[Завтра в] LT',\n    lastDay: '[Вчера в] LT',\n    nextWeek(date: Date, now: Date) {\n      if (getWeek(now) !== getWeek(date)) {\n        switch (getDayOfWeek(date)) {\n          case 0:\n            return '[В следующее] dddd [в] LT';\n          case 1:\n          case 2:\n          case 4:\n            return '[В следующий] dddd [в] LT';\n          case 3:\n          case 5:\n          case 6:\n            return '[В следующую] dddd [в] LT';\n        }\n      } else {\n        if (getDayOfWeek(date) === 2) {\n          return '[Во] dddd [в] LT';\n        } else {\n          return '[В] dddd [в] LT';\n        }\n      }\n    },\n    lastWeek(date: Date, now: Date) {\n      if (getWeek(now) !== getWeek(date)) {\n        switch (getDayOfWeek(date)) {\n          case 0:\n            return '[В прошлое] dddd [в] LT';\n          case 1:\n          case 2:\n          case 4:\n            return '[В прошлый] dddd [в] LT';\n          case 3:\n          case 5:\n          case 6:\n            return '[В прошлую] dddd [в] LT';\n        }\n      } else {\n        if (getDayOfWeek(date) === 2) {\n          return '[Во] dddd [в] LT';\n        } else {\n          return '[В] dddd [в] LT';\n        }\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'через %s',\n    past: '%s назад',\n    s: 'несколько секунд',\n    ss: relativeTimeWithPlural,\n    m: relativeTimeWithPlural,\n    mm: relativeTimeWithPlural,\n    h: 'час',\n    hh: relativeTimeWithPlural,\n    d: 'день',\n    dd: relativeTimeWithPlural,\n    M: 'месяц',\n    MM: relativeTimeWithPlural,\n    y: 'год',\n    yy: relativeTimeWithPlural\n  },\n  meridiemParse: /ночи|утра|дня|вечера/i,\n  isPM(input) {\n    return /^(дня|вечера)$/.test(input);\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'ночи';\n    } else if (hour < 12) {\n      return 'утра';\n    } else if (hour < 17) {\n      return 'дня';\n    } else {\n      return 'вечера';\n    }\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n  ordinal(_num: number, period: string): string {\n    const num = Number(_num);\n    switch (period) {\n      case 'M':\n      case 'd':\n      case 'DDD':\n        return num + '-й';\n      case 'D':\n        return num + '-го';\n      case 'w':\n      case 'W':\n        return num + '-я';\n      default:\n        return num.toString(10);\n    }\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Slovak [sk]\n//! author : Jozef Pažin : https://github.com/atiris\n\nconst months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_');\nconst monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\n\nfunction plural(num: number): boolean {\n  return (num > 1) && (num < 5) && (~~(num / 10) !== 1);\n}\n\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  const result = num + ' ';\n\n  switch (key) {\n    case 's':// a few seconds / in a few seconds / a few seconds ago\n      return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';\n    case 'ss':// 9 seconds / in 9 seconds / 9 seconds ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'sekundy' : 'sekúnd');\n      }\n      else {\n        return result + 'sekundami';\n      }\n    // break;\n    case 'm':// a minute / in a minute / a minute ago\n      return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');\n    case 'mm':// 9 minutes / in 9 minutes / 9 minutes ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'minúty' : 'minút');\n      }\n      else {\n        return result + 'minútami';\n      }\n    // break;\n    case 'h':// an hour / in an hour / an hour ago\n      return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n    case 'hh':// 9 hours / in 9 hours / 9 hours ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'hodiny' : 'hodín');\n      }\n      else {\n        return result + 'hodinami';\n      }\n    // break;\n    case 'd':// a day / in a day / a day ago\n      return (withoutSuffix || isFuture) ? 'deň' : 'dňom';\n    case 'dd':// 9 days / in 9 days / 9 days ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'dni' : 'dní');\n      }\n      else {\n        return result + 'dňami';\n      }\n    // break;\n    case 'M':// a month / in a month / a month ago\n      return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';\n    case 'MM':// 9 months / in 9 months / 9 months ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'mesiace' : 'mesiacov');\n      }\n      else {\n        return result + 'mesiacmi';\n      }\n    // break;\n    case 'y':// a year / in a year / a year ago\n      return (withoutSuffix || isFuture) ? 'rok' : 'rokom';\n    case 'yy':// 9 years / in 9 years / 9 years ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'roky' : 'rokov');\n      }\n      else {\n        return result + 'rokmi';\n      }\n    // break;\n  }\n}\n\nexport const skLocale: LocaleData = {\n  abbr: 'sk',\n  months,\n  monthsShort,\n  weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n  weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),\n  weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd D. MMMM YYYY H:mm',\n    l: 'D. M. YYYY'\n  },\n  calendar: {\n    sameDay: '[dnes o] LT',\n    nextDay: '[zajtra o] LT',\n    nextWeek(date: Date): string {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v nedeľu o] LT';\n        case 1:\n        case 2:\n          return '[v] dddd [o] LT';\n        case 3:\n          return '[v stredu o] LT';\n        case 4:\n          return '[vo štvrtok o] LT';\n        case 5:\n          return '[v piatok o] LT';\n        case 6:\n          return '[v sobotu o] LT';\n      }\n    },\n    lastDay: '[včera o] LT',\n    lastWeek(date: Date): string {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[minulú nedeľu o] LT';\n        case 1:\n        case 2:\n          return '[minulý] dddd [o] LT';\n        case 3:\n          return '[minulú stredu o] LT';\n        case 4:\n        case 5:\n          return '[minulý] dddd [o] LT';\n        case 6:\n          return '[minulú sobotu o] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'o %s',\n    past: 'pred %s',\n    s: translate,\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-key-quotes\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Slovenian [sl]\n//! author : mihan : https://github.com/mihan\n\nfunction processRelativeTime(number: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  var result = number + ' ';\n  switch (key) {\n    case 's':\n      return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\n    case 'ss':\n      if (number === 1) {\n        result += withoutSuffix ? 'sekundo' : 'sekundi';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\n      } else {\n        result += withoutSuffix || isFuture ? 'sekund' : 'sekund';\n      }\n      return result;\n    case 'm':\n      return withoutSuffix ? 'ena minuta' : 'eno minuto';\n    case 'mm':\n      if (number === 1) {\n        result += withoutSuffix ? 'minuta' : 'minuto';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n      } else {\n        result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n      }\n      return result;\n    case 'h':\n      return withoutSuffix ? 'ena ura' : 'eno uro';\n    case 'hh':\n      if (number === 1) {\n        result += withoutSuffix ? 'ura' : 'uro';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'uri' : 'urama';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'ure' : 'urami';\n      } else {\n        result += withoutSuffix || isFuture ? 'ur' : 'urami';\n      }\n      return result;\n    case 'd':\n      return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n    case 'dd':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n      } else {\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n      }\n      return result;\n    case 'M':\n      return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n    case 'MM':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n      } else {\n        result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n      }\n      return result;\n    case 'y':\n      return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n    case 'yy':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'leto' : 'letom';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'leta' : 'leti';\n      } else {\n        result += withoutSuffix || isFuture ? 'let' : 'leti';\n      }\n      return result;\n  }\n}\n\nexport const slLocale: LocaleData = {\n  abbr: 'sl',\n  months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n  monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n  weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n  weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[danes ob] LT',\n    nextDay: '[jutri ob] LT',\n\n    nextWeek(date: Date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v] [nedeljo] [ob] LT';\n        case 3:\n          return '[v] [sredo] [ob] LT';\n        case 6:\n          return '[v] [soboto] [ob] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[v] dddd [ob] LT';\n      }\n    },\n    lastDay: '[včeraj ob] LT',\n    lastWeek(date: Date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[prejšnjo] [nedeljo] [ob] LT';\n        case 3:\n          return '[prejšnjo] [sredo] [ob] LT';\n        case 6:\n          return '[prejšnjo] [soboto] [ob] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[prejšnji] dddd [ob] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'čez %s',\n    past: 'pred %s',\n    s: processRelativeTime,\n    ss: processRelativeTime,\n    m: processRelativeTime,\n    mm: processRelativeTime,\n    h: processRelativeTime,\n    hh: processRelativeTime,\n    d: processRelativeTime,\n    dd: processRelativeTime,\n    M: processRelativeTime,\n    MM: processRelativeTime,\n    y: processRelativeTime,\n    yy: processRelativeTime\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Albanian [sq]\n//! author : Agon Cecelia : https://github.com/agoncecelia\n\nexport const sqLocale: LocaleData = {\n  abbr: 'sq',\n  months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),\n  monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),\n  weekdays : 'E Dielë_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),\n  weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),\n  weekdaysMin : 'Di_He_Ma_Me_En_Pr_Sh'.split('_'),\n  longDateFormat : {\n    LT : 'HH:mm',\n    LTS : 'HH:mm:ss',\n    L : 'DD/MM/YYYY',\n    LL : 'D MMMM YYYY',\n    LLL : 'D MMMM YYYY HH:mm',\n    LLLL : 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar : {\n    sameDay : '[Sot në] LT',\n    nextDay : '[Nesër në] LT',\n    nextWeek : 'dddd [në] LT',\n    lastDay : '[Dje në] LT',\n    lastWeek : 'dddd [e kaluar në] LT',\n    sameElse : 'L'\n  },\n  relativeTime : {\n    future : 'në %s',\n    past : 'para %sve',\n    s : 'disa sekonda',\n    ss : '%d sekonda',\n    m : 'një minut',\n    mm : '%d minuta',\n    h : 'një orë',\n    hh : '%d orë',\n    d : 'një ditë',\n    dd : '%d ditë',\n    M : 'një muaj',\n    MM : '%d muaj',\n    y : 'një vit',\n    yy : '%d vite'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./, // need clarification\n  ordinal : '%d.', // need clarification\n  week : {\n    dow : 1, // Monday is the first day of the week.\n    doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Swedish [sv]\n//! author : Jens Alm : https://github.com/ulmus\n\nexport const svLocale: LocaleData = {\n  abbr: 'sv',\n  months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n  monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n  weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n  weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n  weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY [kl.] HH:mm',\n    LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Idag] LT',\n    nextDay: '[Imorgon] LT',\n    lastDay: '[Igår] LT',\n    nextWeek: '[På] dddd LT',\n    lastWeek: '[I] dddd[s] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: 'för %s sedan',\n    s: 'några sekunder',\n    ss: '%d sekunder',\n    m: 'en minut',\n    mm: '%d minuter',\n    h: 'en timme',\n    hh: '%d timmar',\n    d: 'en dag',\n    dd: '%d dagar',\n    M: 'en månad',\n    MM: '%d månader',\n    y: 'ett år',\n    yy: '%d år'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(e|a)/,\n  ordinal(_num: number): string {\n    const num = Number(_num);\n    let b = num % 10,\n      output = (~~(num % 100 / 10) === 1) ? 'e' :\n        (b === 1) ? 'a' :\n          (b === 2) ? 'a' :\n            (b === 3) ? 'e' : 'e';\n    return num + output;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\n// moment.js locale configuration\n// locale : Thai [th]\n// author : Watcharapol Sanitwong : https://github.com/tumit\n\nimport { LocaleData } from '../locale/locale.class';\n\nexport const thLocale: LocaleData = {\n  abbr: 'th',\n  months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n  monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n  weekdaysShort: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'), // yes, three characters difference\n  weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY เวลา H:mm',\n    LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'\n  },\n  meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n  isPM(input) {\n    return input === 'หลังเที่ยง';\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ก่อนเที่ยง';\n    } else {\n      return 'หลังเที่ยง';\n    }\n  },\n  calendar: {\n    sameDay: '[วันนี้ เวลา] LT',\n    nextDay: '[พรุ่งนี้ เวลา] LT',\n    nextWeek: 'dddd[หน้า เวลา] LT',\n    lastDay: '[เมื่อวานนี้ เวลา] LT',\n    lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'อีก %s',\n    past: '%sที่แล้ว',\n    s: 'ไม่กี่วินาที',\n    ss: '%d วินาที',\n    m: '1 นาที',\n    mm: '%d นาที',\n    h: '1 ชั่วโมง',\n    hh: '%d ชั่วโมง',\n    d: '1 วัน',\n    dd: '%d วัน',\n    M: '1 เดือน',\n    MM: '%d เดือน',\n    y: '1 ปี',\n    yy: '%d ปี'\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\n// moment.js locale configuration\n// locale : Thai-Buddhist Era [th-be]\n// author : Watcharapol Sanitwong : https://github.com/tumit\n\nimport { LocaleData } from '../locale/locale.class';\n\nexport const thBeLocale: LocaleData = {\n  abbr: 'th-be',\n  months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n  monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n  weekdaysShort: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY เวลา H:mm',\n    LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'\n  },\n  meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n  isPM(input) {\n    return input === 'หลังเที่ยง';\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ก่อนเที่ยง';\n    } else {\n      return 'หลังเที่ยง';\n    }\n  },\n  calendar: {\n    sameDay: '[วันนี้ เวลา] LT',\n    nextDay: '[พรุ่งนี้ เวลา] LT',\n    nextWeek: 'dddd[หน้า เวลา] LT',\n    lastDay: '[เมื่อวานนี้ เวลา] LT',\n    lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'อีก %s',\n    past: '%sที่แล้ว',\n    s: 'ไม่กี่วินาที',\n    ss: '%d วินาที',\n    m: '1 นาที',\n    mm: '%d นาที',\n    h: '1 ชั่วโมง',\n    hh: '%d ชั่วโมง',\n    d: '1 วัน',\n    dd: '%d วัน',\n    M: '1 เดือน',\n    MM: '%d เดือน',\n    y: '1 ปี',\n    yy: '%d ปี'\n  },\n\n  preparse(str: string, format?: string): string {\n\n    const _format = thBeLocale.longDateFormat[format]\n      ? thBeLocale.longDateFormat[format]\n      : format;\n\n    // endsWith('YYYY')\n    if (_format.indexOf('YYYY', _format.length - 'YYYY'.length) !== -1 ) {\n      const ddMM = str.substr(0, str.length - 4);\n      const yyyy = parseInt(str.substr(str.length - 4), 10) - 543;\n      return ddMM + yyyy;\n    }\n\n    return str;\n  },\n\n  getFullYear(date: Date, isUTC = false): number {\n    return 543 + (isUTC ? date.getUTCFullYear() : date.getFullYear());\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Turkish [tr]\n//! authors : Erhan Gundogan : https://github.com/erhangundogan,\n//!           Burak Yiğit Kaya: https://github.com/BYK\n\nlet suffixes: { [key: string]: string } = {\n  1: '\\'inci',\n  5: '\\'inci',\n  8: '\\'inci',\n  70: '\\'inci',\n  80: '\\'inci',\n  2: '\\'nci',\n  7: '\\'nci',\n  20: '\\'nci',\n  50: '\\'nci',\n  3: '\\'üncü',\n  4: '\\'üncü',\n  100: '\\'üncü',\n  6: '\\'ncı',\n  9: '\\'uncu',\n  10: '\\'uncu',\n  30: '\\'uncu',\n  60: '\\'ıncı',\n  90: '\\'ıncı'\n};\n\nexport const trLocale: LocaleData = {\n  abbr: 'tr',\n  months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),\n  monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n  weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),\n  weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),\n  weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[bugün saat] LT',\n    nextDay: '[yarın saat] LT',\n    nextWeek: '[gelecek] dddd [saat] LT',\n    lastDay: '[dün] LT',\n    lastWeek: '[geçen] dddd [saat] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s sonra',\n    past: '%s önce',\n    s: 'birkaç saniye',\n    ss: '%d saniye',\n    m: 'bir dakika',\n    mm: '%d dakika',\n    h: 'bir saat',\n    hh: '%d saat',\n    d: 'bir gün',\n    dd: '%d gün',\n    M: 'bir ay',\n    MM: '%d ay',\n    y: 'bir yıl',\n    yy: '%d yıl'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,\n  ordinal(_num: number): string {\n    const num = Number(_num);\n    if (num === 0) {  // special case for zero\n      return num + '\\'ıncı';\n    }\n    let a = num % 10,\n      b = num % 100 - a,\n      c = num >= 100 ? 100 : null;\n    return num + (suffixes[a] || suffixes[b] || suffixes[c]);\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getHours } from '../utils/date-getters';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Ukrainian [uk]\n//! author : zemlanin : https://github.com/zemlanin\n//! Author : Menelion Elensúle : https://github.com/Oire\n\nfunction plural(word, num) {\n  let forms = word.split('_');\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n}\n\nfunction relativeTimeWithPlural(num: number, withoutSuffix, key): string {\n  let format: { [key: string]: string } = {\n    ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n    mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n    hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n    dd: 'день_дні_днів',\n    MM: 'місяць_місяці_місяців',\n    yy: 'рік_роки_років'\n  };\n\n  if (key === 'm') {\n    return withoutSuffix ? 'хвилина' : 'хвилину';\n  }\n\n  if (key === 'h') {\n    return withoutSuffix ? 'година' : 'годину';\n  }\n  return num + ' ' + plural(format[key], +num);\n}\n\nfunction weekdaysCaseReplace(date: Date, format: string, isUTC?: boolean): string | string[] {\n  let weekdays = {\n    nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n    accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n    genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n  };\n\n  if (!date) {\n    return weekdays.nominative;\n  }\n\n  let nounCase = (/(\\[[ВвУу]\\]) ?dddd/).test(format) ?\n    'accusative' :\n    ((/\\[?(?:минулої|наступної)? ?\\] ?dddd/).test(format) ?\n      'genitive' :\n      'nominative');\n  return weekdays[nounCase][getDayOfWeek(date, isUTC)];\n}\n\nfunction processHoursFunction(str: string) {\n  return function (date: Date): string {\n    return str + 'о' + (getHours(date) === 11 ? 'б' : '') + '] LT';\n  };\n}\n\nexport const ukLocale: LocaleData = {\n  abbr: 'uk',\n  months: {\n    format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),\n    standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')\n  },\n  monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n  weekdays: weekdaysCaseReplace,\n  weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY р.',\n    LLL: 'D MMMM YYYY р., HH:mm',\n    LLLL: 'dddd, D MMMM YYYY р., HH:mm'\n  },\n  calendar: {\n    sameDay: processHoursFunction('[Сьогодні '),\n    nextDay: processHoursFunction('[Завтра '),\n    lastDay: processHoursFunction('[Вчора '),\n    nextWeek: processHoursFunction('[У] dddd ['),\n    lastWeek(date: Date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n        case 3:\n        case 5:\n        case 6:\n          return processHoursFunction('[Минулої] dddd [')(date);\n        case 1:\n        case 2:\n        case 4:\n          return processHoursFunction('[Минулого] dddd [')(date);\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'за %s',\n    past: '%s тому',\n    s: 'декілька секунд',\n    ss: relativeTimeWithPlural,\n    m: relativeTimeWithPlural,\n    mm: relativeTimeWithPlural,\n    h: 'годину',\n    hh: relativeTimeWithPlural,\n    d: 'день',\n    dd: relativeTimeWithPlural,\n    M: 'місяць',\n    MM: relativeTimeWithPlural,\n    y: 'рік',\n    yy: relativeTimeWithPlural\n  },\n  // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n  meridiemParse: /ночі|ранку|дня|вечора/,\n  isPM(input) {\n    return /^(дня|вечора)$/.test(input);\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'ночі';\n    } else if (hour < 12) {\n      return 'ранку';\n    } else if (hour < 17) {\n      return 'дня';\n    } else {\n      return 'вечора';\n    }\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n  ordinal(_num: number, period: string): string {\n    const num = Number(_num);\n    switch (period) {\n      case 'M':\n      case 'd':\n      case 'DDD':\n      case 'w':\n      case 'W':\n        return num + '-й';\n      case 'D':\n        return num + '-го';\n      default:\n        return num.toString();\n    }\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Việt Nam [vi]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\n\nexport const viLocale: LocaleData = {\n  abbr: 'vi',\n  months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),\n  monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),\n  monthsParseExact: true,\n  weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),\n  weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n  weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n  weekdaysParseExact : true,\n  meridiemParse: /sa|ch/i,\n  isPM(input: string): boolean {\n    return /^ch$/i.test(input);\n  },\n  meridiem(hours: number, minutes: number, isLower: boolean): string {\n    if (hours < 12) {\n      return isLower ? 'sa' : 'SA';\n    } else {\n      return isLower ? 'ch' : 'CH';\n    }\n  },\n  longDateFormat : {\n    LT : 'HH:mm',\n    LTS : 'HH:mm:ss',\n    L : 'DD/MM/YYYY',\n    LL : 'D MMMM [năm] YYYY',\n    LLL : 'D MMMM [năm] YYYY HH:mm',\n    LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',\n    l : 'DD/M/YYYY',\n    ll : 'D MMM YYYY',\n    lll : 'D MMM YYYY HH:mm',\n    llll : 'ddd, D MMM YYYY HH:mm'\n  },\n  calendar : {\n    sameDay: '[Hôm nay lúc] LT',\n    nextDay: '[Ngày mai lúc] LT',\n    nextWeek: 'dddd [tuần tới lúc] LT',\n    lastDay: '[Hôm qua lúc] LT',\n    lastWeek: 'dddd [tuần trước lúc] LT',\n    sameElse: 'L'\n  },\n  relativeTime : {\n    future : '%s tới',\n    past : '%s trước',\n    s : 'vài giây',\n    ss : '%d giây' ,\n    m : 'một phút',\n    mm : '%d phút',\n    h : 'một giờ',\n    hh : '%d giờ',\n    d : 'một ngày',\n    dd : '%d ngày',\n    M : 'một tháng',\n    MM : '%d tháng',\n    y : 'một năm',\n    yy : '%d năm'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}/,\n  ordinal(_num: number): string {\n    return '' + _num;\n  },\n  week : {\n    dow : 1, // Thứ Hai là ngày đầu tuần.\n    doy : 4  // Tuần chứa ngày 4 tháng 1 là tuần đầu tiên trong năm.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Chinese (China) [zh-cn]\n//! author : suupic : https://github.com/suupic\n//! author : Zeno Zeng : https://github.com/zenozeng\n\nexport const zhCnLocale: LocaleData = {\n  abbr: 'zh-cn',\n  months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n  monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n  weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n  weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY/MM/DD',\n    LL: 'YYYY年M月D日',\n    LLL: 'YYYY年M月D日Ah点mm分',\n    LLLL: 'YYYY年M月D日ddddAh点mm分',\n    l: 'YYYY/M/D',\n    ll: 'YYYY年M月D日',\n    lll: 'YYYY年M月D日 HH:mm',\n    llll: 'YYYY年M月D日dddd HH:mm'\n  },\n  meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === '凌晨' || meridiem === '早上' ||\n      meridiem === '上午') {\n      return hour;\n    } else if (meridiem === '下午' || meridiem === '晚上') {\n      return hour + 12;\n    } else {\n      // '中午'\n      return hour >= 11 ? hour : hour + 12;\n    }\n  },\n  meridiem(hour, minute, isLower) {\n    let hm = hour * 100 + minute;\n    if (hm < 600) {\n      return '凌晨';\n    } else if (hm < 900) {\n      return '早上';\n    } else if (hm < 1130) {\n      return '上午';\n    } else if (hm < 1230) {\n      return '中午';\n    } else if (hm < 1800) {\n      return '下午';\n    } else {\n      return '晚上';\n    }\n  },\n  calendar: {\n    sameDay: '[今天]LT',\n    nextDay: '[明天]LT',\n    nextWeek: '[下]ddddLT',\n    lastDay: '[昨天]LT',\n    lastWeek: '[上]ddddLT',\n    sameElse: 'L'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\n  ordinal(_num: number, period) {\n    const num = Number(_num);\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + '日';\n      case 'M':\n        return num + '月';\n      case 'w':\n      case 'W':\n        return num + '周';\n      default:\n        return num.toString();\n    }\n  },\n  relativeTime: {\n    future: '%s内',\n    past: '%s前',\n    s: '几秒',\n    ss: '%d 秒',\n    m: '1 分钟',\n    mm: '%d 分钟',\n    h: '1 小时',\n    hh: '%d 小时',\n    d: '1 天',\n    dd: '%d 天',\n    M: '1 个月',\n    MM: '%d 个月',\n    y: '1 年',\n    yy: '%d 年'\n  },\n  week: {\n    // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n"]},"metadata":{},"sourceType":"module"}