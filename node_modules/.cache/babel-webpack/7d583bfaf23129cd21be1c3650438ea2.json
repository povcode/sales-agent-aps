{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/prottasofgrosskofic/Documents/GitHub/sales-agent-site/aspro-sales-agent/blk-design-system-angular/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _createClass from \"/Users/prottasofgrosskofic/Documents/GitHub/sales-agent-site/aspro-sales-agent/blk-design-system-angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/prottasofgrosskofic/Documents/GitHub/sales-agent-site/aspro-sales-agent/blk-design-system-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { Injectable, InjectionToken, Component, ElementRef, Renderer2, HostListener, EventEmitter, Directive, ViewContainerRef, Optional, Inject, Input, Output, RendererFactory2, NgModule } from '@angular/core';\nimport { isBs3, Utils, document as document$1, window as window$1 } from 'ngx-bootstrap/utils';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @template T\n */\n// tslint:disable-next-line:no-any\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ngx-bootstrap/component-loader';\nvar _c0 = [\"*\"];\n\nvar BsModalRef = /*#__PURE__*/_createClass(function BsModalRef() {\n  _classCallCheck(this, BsModalRef);\n\n  /**\n   * Hides the modal\n   */\n  this.hide = Function;\n  /**\n   * Sets new class to modal window\n   */\n\n  this.setClass = Function;\n});\n\nBsModalRef.ɵfac = function BsModalRef_Factory(t) {\n  return new (t || BsModalRef)();\n};\n\nBsModalRef.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: BsModalRef,\n  factory: BsModalRef.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(BsModalRef, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nif (false) {\n  /**\n   *  Allow user to ID for the modal. Otherwise, a unique number will be given\n   * @type {?}\n   */\n  BsModalRef.prototype.id;\n  /**\n   * Reference to a component inside the modal. Null if modal's been created with TemplateRef\n   * @type {?}\n   */\n\n  BsModalRef.prototype.content;\n  /**\n   * Hides the modal\n   * @type {?}\n   */\n\n  BsModalRef.prototype.hide;\n  /**\n   * Sets new class to modal window\n   * @type {?}\n   */\n\n  BsModalRef.prototype.setClass;\n  /**\n   * Event that is fired when the modal behind the ref starts hiding\n   * @type {?}\n   */\n\n  BsModalRef.prototype.onHide;\n  /**\n   * Event that is fired when the modal behind the ref finishes hiding\n   * @type {?}\n   */\n\n  BsModalRef.prototype.onHidden;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar ModalBackdropOptions = /*#__PURE__*/_createClass(\n/**\n * @param {?} options\n */\nfunction ModalBackdropOptions(options) {\n  _classCallCheck(this, ModalBackdropOptions);\n\n  this.animate = true;\n  Object.assign(this, options);\n});\n\nif (false) {\n  /** @type {?} */\n  ModalBackdropOptions.prototype.animate;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @template T\n */\n\n\nvar ModalOptions = /*#__PURE__*/_createClass(function ModalOptions() {\n  _classCallCheck(this, ModalOptions);\n});\n\nModalOptions.ɵfac = function ModalOptions_Factory(t) {\n  return new (t || ModalOptions)();\n};\n\nModalOptions.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ModalOptions,\n  factory: ModalOptions.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ModalOptions, [{\n    type: Injectable\n  }], null, null);\n})();\n\nif (false) {\n  /**\n   *  Allow user to ID for the modal. Otherwise, a unique number will be given\n   * @type {?}\n   */\n  ModalOptions.prototype.id;\n  /**\n   *  Includes a modal-backdrop element. Alternatively,\n   *  specify static for a backdrop which doesn't close the modal on click.\n   * @type {?}\n   */\n\n  ModalOptions.prototype.backdrop;\n  /**\n   * Closes the modal when escape key is pressed.\n   * @type {?}\n   */\n\n  ModalOptions.prototype.keyboard;\n  /** @type {?} */\n\n  ModalOptions.prototype.focus;\n  /**\n   * Shows the modal when initialized.\n   * @type {?}\n   */\n\n  ModalOptions.prototype.show;\n  /**\n   * Ignore the backdrop click\n   * @type {?}\n   */\n\n  ModalOptions.prototype.ignoreBackdropClick;\n  /**\n   * Css class for opened modal\n   * @type {?}\n   */\n\n  ModalOptions.prototype.class;\n  /**\n   * Toggle animation\n   * @type {?}\n   */\n\n  ModalOptions.prototype.animated;\n  /**\n   * Modal data\n   * @type {?}\n   */\n\n  ModalOptions.prototype.initialState;\n  /**\n   * Modal providers\n   * @type {?}\n   */\n\n  ModalOptions.prototype.providers;\n  /**\n   * aria-labelledby attribute value to set on the modal window\n   * @type {?}\n   */\n\n  ModalOptions.prototype.ariaLabelledBy;\n  /**\n   * aria-describedby attribute value to set on the modal window\n   * @type {?}\n   */\n\n  ModalOptions.prototype.ariaDescribedby;\n}\n/** @type {?} */\n\n\nvar modalConfigDefaults = {\n  backdrop: true,\n  keyboard: true,\n  focus: true,\n  show: false,\n  ignoreBackdropClick: false,\n  class: '',\n  animated: true,\n  initialState: {}\n};\n/** @type {?} */\n\nvar MODAL_CONFIG_DEFAULT_OVERRIDE = new InjectionToken('override-default-config');\n/** @type {?} */\n\nvar CLASS_NAME = {\n  SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\n  BACKDROP: 'modal-backdrop',\n  OPEN: 'modal-open',\n  FADE: 'fade',\n  IN: 'in',\n  // bs3\n  SHOW: 'show' // bs4\n\n};\n/** @type {?} */\n\nvar SELECTOR = {\n  DIALOG: '.modal-dialog',\n  DATA_TOGGLE: '[data-toggle=\"modal\"]',\n  DATA_DISMISS: '[data-dismiss=\"modal\"]',\n  FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'\n};\n/** @type {?} */\n\nvar TRANSITION_DURATIONS = {\n  MODAL: 300,\n  BACKDROP: 150\n};\n/** @type {?} */\n\nvar DISMISS_REASONS = {\n  BACKRDOP: 'backdrop-click',\n  ESC: 'esc',\n  BACK: 'browser-back-navigation-clicked'\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nvar ModalContainerComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} options\n   * @param {?} _element\n   * @param {?} _renderer\n   */\n  function ModalContainerComponent(options, _element, _renderer) {\n    _classCallCheck(this, ModalContainerComponent);\n\n    this._element = _element;\n    this._renderer = _renderer;\n    this.isShown = false;\n    this.isModalHiding = false;\n    this.clickStartedInContent = false;\n    this.config = Object.assign({}, options);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(ModalContainerComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      if (this.isAnimated) {\n        this._renderer.addClass(this._element.nativeElement, CLASS_NAME.FADE);\n      }\n\n      this._renderer.setStyle(this._element.nativeElement, 'display', 'block');\n\n      setTimeout(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this.isShown = true;\n\n        _this._renderer.addClass(_this._element.nativeElement, isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW);\n      }, this.isAnimated ? TRANSITION_DURATIONS.BACKDROP : 0);\n\n      if (document && document.body) {\n        if (this.bsModalService.getModalsCount() === 1) {\n          this.bsModalService.checkScrollbar();\n          this.bsModalService.setScrollbar();\n        }\n\n        this._renderer.addClass(document.body, CLASS_NAME.OPEN);\n      }\n\n      if (this._element.nativeElement) {\n        this._element.nativeElement.focus();\n      }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onClickStarted\",\n    value: function onClickStarted(event) {\n      this.clickStartedInContent = event.target !== this._element.nativeElement;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onClickStop\",\n    value: function onClickStop(event) {\n      /** @type {?} */\n      var clickedInBackdrop = event.target === this._element.nativeElement && !this.clickStartedInContent;\n\n      if (this.config.ignoreBackdropClick || this.config.backdrop === 'static' || !clickedInBackdrop) {\n        this.clickStartedInContent = false;\n        return;\n      }\n\n      this.bsModalService.setDismissReason(DISMISS_REASONS.BACKRDOP);\n      this.hide();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"onPopState\",\n    value: function onPopState() {\n      this.bsModalService.setDismissReason(DISMISS_REASONS.BACK);\n      this.hide();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onEsc\",\n    value: function onEsc(event) {\n      if (!this.isShown) {\n        return;\n      } // tslint:disable-next-line:deprecation\n\n\n      if (event.keyCode === 27 || event.key === 'Escape') {\n        event.preventDefault();\n      }\n\n      if (this.config.keyboard && this.level === this.bsModalService.getModalsCount()) {\n        this.bsModalService.setDismissReason(DISMISS_REASONS.ESC);\n        this.hide();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.isShown) {\n        this.hide();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      var _this2 = this;\n\n      if (this.isModalHiding || !this.isShown) {\n        return;\n      }\n\n      this.isModalHiding = true;\n\n      this._renderer.removeClass(this._element.nativeElement, isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW);\n\n      setTimeout(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this2.isShown = false;\n\n        if (document && document.body && _this2.bsModalService.getModalsCount() === 1) {\n          _this2._renderer.removeClass(document.body, CLASS_NAME.OPEN);\n        }\n\n        _this2.bsModalService.hide(_this2.config.id);\n\n        _this2.isModalHiding = false;\n      }, this.isAnimated ? TRANSITION_DURATIONS.MODAL : 0);\n    }\n  }]);\n\n  return ModalContainerComponent;\n}();\n\nModalContainerComponent.ɵfac = function ModalContainerComponent_Factory(t) {\n  return new (t || ModalContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ModalOptions), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\n\nModalContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ModalContainerComponent,\n  selectors: [[\"modal-container\"]],\n  hostAttrs: [\"role\", \"dialog\", \"tabindex\", \"-1\", 1, \"modal\"],\n  hostVars: 3,\n  hostBindings: function ModalContainerComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"mousedown\", function ModalContainerComponent_mousedown_HostBindingHandler($event) {\n        return ctx.onClickStarted($event);\n      })(\"mouseup\", function ModalContainerComponent_mouseup_HostBindingHandler($event) {\n        return ctx.onClickStop($event);\n      })(\"popstate\", function ModalContainerComponent_popstate_HostBindingHandler() {\n        return ctx.onPopState();\n      }, false, ɵngcc0.ɵɵresolveWindow)(\"keydown.esc\", function ModalContainerComponent_keydown_esc_HostBindingHandler($event) {\n        return ctx.onEsc($event);\n      }, false, ɵngcc0.ɵɵresolveWindow);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-modal\", true)(\"aria-labelledby\", ctx.config.ariaLabelledBy)(\"aria-describedby\", ctx.config.ariaDescribedby);\n    }\n  },\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 2,\n  consts: [[\"role\", \"document\"], [1, \"modal-content\"]],\n  template: function ModalContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(\"modal-dialog\" + (ctx.config.class ? \" \" + ctx.config.class : \"\"));\n    }\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nModalContainerComponent.ctorParameters = function () {\n  return [{\n    type: ModalOptions\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }];\n};\n\nModalContainerComponent.propDecorators = {\n  onClickStarted: [{\n    type: HostListener,\n    args: ['mousedown', ['$event']]\n  }],\n  onClickStop: [{\n    type: HostListener,\n    args: ['mouseup', ['$event']]\n  }],\n  onPopState: [{\n    type: HostListener,\n    args: ['window:popstate']\n  }],\n  onEsc: [{\n    type: HostListener,\n    args: ['window:keydown.esc', ['$event']]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ModalContainerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'modal-container',\n      template: \"\\n    <div [class]=\\\"'modal-dialog' + (config.class ? ' ' + config.class : '')\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <ng-content></ng-content>\\n      </div>\\n    </div>\\n  \",\n      host: {\n        class: 'modal',\n        role: 'dialog',\n        tabindex: '-1',\n        '[attr.aria-modal]': 'true',\n        '[attr.aria-labelledby]': 'config.ariaLabelledBy',\n        '[attr.aria-describedby]': 'config.ariaDescribedby'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ModalOptions\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }];\n  }, {\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClickStarted: [{\n      type: HostListener,\n      args: ['mousedown', ['$event']]\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClickStop: [{\n      type: HostListener,\n      args: ['mouseup', ['$event']]\n    }],\n\n    /**\n     * @return {?}\n     */\n    onPopState: [{\n      type: HostListener,\n      args: ['window:popstate']\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onEsc: [{\n      type: HostListener,\n      args: ['window:keydown.esc', ['$event']]\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  ModalContainerComponent.prototype.config;\n  /** @type {?} */\n\n  ModalContainerComponent.prototype.isShown;\n  /** @type {?} */\n\n  ModalContainerComponent.prototype.level;\n  /** @type {?} */\n\n  ModalContainerComponent.prototype.isAnimated;\n  /** @type {?} */\n\n  ModalContainerComponent.prototype.bsModalService;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ModalContainerComponent.prototype.isModalHiding;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ModalContainerComponent.prototype.clickStartedInContent;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  ModalContainerComponent.prototype._element;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ModalContainerComponent.prototype._renderer;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * This component will be added as background layout for modals if enabled\n */\n\n\nvar ModalBackdropComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} element\n   * @param {?} renderer\n   */\n  function ModalBackdropComponent(element, renderer) {\n    _classCallCheck(this, ModalBackdropComponent);\n\n    this._isShown = false;\n    this.element = element;\n    this.renderer = renderer;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(ModalBackdropComponent, [{\n    key: \"isAnimated\",\n    get: function get() {\n      return this._isAnimated;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._isAnimated = value; // this.renderer.setElementClass(this.element.nativeElement, `${ClassName.FADE}`, value);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"isShown\",\n    get: function get() {\n      return this._isShown;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._isShown = value;\n\n      if (value) {\n        this.renderer.addClass(this.element.nativeElement, \"\".concat(CLASS_NAME.IN));\n      } else {\n        this.renderer.removeClass(this.element.nativeElement, \"\".concat(CLASS_NAME.IN));\n      }\n\n      if (!isBs3()) {\n        if (value) {\n          this.renderer.addClass(this.element.nativeElement, \"\".concat(CLASS_NAME.SHOW));\n        } else {\n          this.renderer.removeClass(this.element.nativeElement, \"\".concat(CLASS_NAME.SHOW));\n        }\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (this.isAnimated) {\n        this.renderer.addClass(this.element.nativeElement, \"\".concat(CLASS_NAME.FADE));\n        Utils.reflow(this.element.nativeElement);\n      }\n\n      this.isShown = true;\n    }\n  }]);\n\n  return ModalBackdropComponent;\n}();\n\nModalBackdropComponent.ɵfac = function ModalBackdropComponent_Factory(t) {\n  return new (t || ModalBackdropComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\n\nModalBackdropComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ModalBackdropComponent,\n  selectors: [[\"bs-modal-backdrop\"]],\n  hostAttrs: [1, \"modal-backdrop\"],\n  decls: 0,\n  vars: 0,\n  template: function ModalBackdropComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nModalBackdropComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ModalBackdropComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bs-modal-backdrop',\n      template: ' ',\n      host: {\n        class: CLASS_NAME.BACKDROP\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }];\n  }, null);\n})();\n\nif (false) {\n  /** @type {?} */\n  ModalBackdropComponent.prototype.element;\n  /** @type {?} */\n\n  ModalBackdropComponent.prototype.renderer;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  ModalBackdropComponent.prototype._isAnimated;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  ModalBackdropComponent.prototype._isShown;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar TRANSITION_DURATION = 300;\n/** @type {?} */\n\nvar BACKDROP_TRANSITION_DURATION = 150;\n/**\n * Mark any code with directive to show it's content in modal\n */\n\nvar ModalDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} _element\n   * @param {?} _viewContainerRef\n   * @param {?} _renderer\n   * @param {?} clf\n   * @param {?} modalDefaultOption\n   */\n  function ModalDirective(_element, _viewContainerRef, _renderer, clf, modalDefaultOption) {\n    _classCallCheck(this, ModalDirective);\n\n    this._element = _element;\n    this._renderer = _renderer;\n    /**\n     * This event fires immediately when the `show` instance method is called.\n     */\n\n    this.onShow = new EventEmitter();\n    /**\n     * This event is fired when the modal has been made visible to the user\n     * (will wait for CSS transitions to complete)\n     */\n\n    this.onShown = new EventEmitter();\n    /**\n     * This event is fired immediately when\n     * the hide instance method has been called.\n     */\n\n    this.onHide = new EventEmitter();\n    /**\n     * This event is fired when the modal has finished being\n     * hidden from the user (will wait for CSS transitions to complete).\n     */\n\n    this.onHidden = new EventEmitter();\n    this._isShown = false;\n    this.isBodyOverflowing = false;\n    this.originalBodyPadding = 0;\n    this.scrollbarWidth = 0;\n    this.timerHideModal = 0;\n    this.timerRmBackDrop = 0;\n    this.isNested = false;\n    this.clickStartedInContent = false;\n    this._backdrop = clf.createLoader(_element, _viewContainerRef, _renderer);\n    this._config = modalDefaultOption || modalConfigDefaults;\n  }\n  /**\n   * allows to set modal configuration via element property\n   * @param {?} conf\n   * @return {?}\n   */\n\n\n  _createClass(ModalDirective, [{\n    key: \"config\",\n    get:\n    /**\n     * @return {?}\n     */\n    function get() {\n      return this._config;\n    }\n    /**\n     * @return {?}\n     */\n    ,\n    set: function set(conf) {\n      this._config = this.getConfig(conf);\n    }\n  }, {\n    key: \"isShown\",\n    get: function get() {\n      return this._isShown;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onClickStarted\",\n    value: function onClickStarted(event) {\n      this.clickStartedInContent = event.target !== this._element.nativeElement;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onClickStop\",\n    value: function onClickStop(event) {\n      /** @type {?} */\n      var clickedInBackdrop = event.target === this._element.nativeElement && !this.clickStartedInContent;\n\n      if (this.config.ignoreBackdropClick || this.config.backdrop === 'static' || !clickedInBackdrop) {\n        this.clickStartedInContent = false;\n        return;\n      }\n\n      this.dismissReason = DISMISS_REASONS.BACKRDOP;\n      this.hide(event);\n    } // todo: consider preventing default and stopping propagation\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onEsc\",\n    value: function onEsc(event) {\n      if (!this._isShown) {\n        return;\n      } // tslint:disable-next-line:deprecation\n\n\n      if (event.keyCode === 27 || event.key === 'Escape') {\n        event.preventDefault();\n      }\n\n      if (this.config.keyboard) {\n        this.dismissReason = DISMISS_REASONS.ESC;\n        this.hide();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.config = void 0;\n\n      if (this._isShown) {\n        this._isShown = false;\n        this.hideModal();\n\n        this._backdrop.dispose();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this3 = this;\n\n      this._config = this._config || this.getConfig();\n      setTimeout(\n      /**\n      * @return {?}\n      */\n      function () {\n        if (_this3._config.show) {\n          _this3.show();\n        }\n      }, 0);\n    }\n    /* Public methods */\n\n    /**\n     * Allows to manually toggle modal visibility\n     * @return {?}\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      return this._isShown ? this.hide() : this.show();\n    }\n    /**\n     * Allows to manually open modal\n     * @return {?}\n     */\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _this4 = this;\n\n      this.dismissReason = null;\n      this.onShow.emit(this);\n\n      if (this._isShown) {\n        return;\n      }\n\n      clearTimeout(this.timerHideModal);\n      clearTimeout(this.timerRmBackDrop);\n      this._isShown = true;\n      this.checkScrollbar();\n      this.setScrollbar();\n\n      if (document$1 && document$1.body) {\n        if (document$1.body.classList.contains(CLASS_NAME.OPEN)) {\n          this.isNested = true;\n        } else {\n          this._renderer.addClass(document$1.body, CLASS_NAME.OPEN);\n        }\n      }\n\n      this.showBackdrop(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this4.showElement();\n      });\n    }\n    /**\n     * Allows to manually close modal\n     * @param {?=} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide(event) {\n      var _this5 = this;\n\n      if (event) {\n        event.preventDefault();\n      }\n\n      this.onHide.emit(this); // todo: add an option to prevent hiding\n\n      if (!this._isShown) {\n        return;\n      }\n\n      window$1.clearTimeout(this.timerHideModal);\n      window$1.clearTimeout(this.timerRmBackDrop);\n      this._isShown = false;\n\n      this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.IN);\n\n      if (!isBs3()) {\n        this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.SHOW);\n      } // this._addClassIn = false;\n\n\n      if (this._config.animated) {\n        this.timerHideModal = window$1.setTimeout(\n        /**\n        * @return {?}\n        */\n        function () {\n          return _this5.hideModal();\n        }, TRANSITION_DURATION);\n      } else {\n        this.hideModal();\n      }\n    }\n    /**\n     * Private methods \\@internal\n     * @protected\n     * @param {?=} config\n     * @return {?}\n     */\n\n  }, {\n    key: \"getConfig\",\n    value: function getConfig(config) {\n      return Object.assign({}, this._config, config);\n    }\n    /**\n     *  Show dialog\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"showElement\",\n    value: function showElement() {\n      var _this6 = this;\n\n      // todo: replace this with component loader usage\n      if (!this._element.nativeElement.parentNode || this._element.nativeElement.parentNode.nodeType !== Node.ELEMENT_NODE) {\n        // don't move modals dom position\n        if (document$1 && document$1.body) {\n          document$1.body.appendChild(this._element.nativeElement);\n        }\n      }\n\n      this._renderer.setAttribute(this._element.nativeElement, 'aria-hidden', 'false');\n\n      this._renderer.setAttribute(this._element.nativeElement, 'aria-modal', 'true');\n\n      this._renderer.setStyle(this._element.nativeElement, 'display', 'block');\n\n      this._renderer.setProperty(this._element.nativeElement, 'scrollTop', 0);\n\n      if (this._config.animated) {\n        Utils.reflow(this._element.nativeElement);\n      } // this._addClassIn = true;\n\n\n      this._renderer.addClass(this._element.nativeElement, CLASS_NAME.IN);\n\n      if (!isBs3()) {\n        this._renderer.addClass(this._element.nativeElement, CLASS_NAME.SHOW);\n      }\n      /** @type {?} */\n\n\n      var transitionComplete =\n      /**\n      * @return {?}\n      */\n      function transitionComplete() {\n        if (_this6._config.focus) {\n          _this6._element.nativeElement.focus();\n        }\n\n        _this6.onShown.emit(_this6);\n      };\n\n      if (this._config.animated) {\n        setTimeout(transitionComplete, TRANSITION_DURATION);\n      } else {\n        transitionComplete();\n      }\n    }\n    /**\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"hideModal\",\n    value: function hideModal() {\n      var _this7 = this;\n\n      this._renderer.setAttribute(this._element.nativeElement, 'aria-hidden', 'true');\n\n      this._renderer.setStyle(this._element.nativeElement, 'display', 'none');\n\n      this.showBackdrop(\n      /**\n      * @return {?}\n      */\n      function () {\n        if (!_this7.isNested) {\n          if (document$1 && document$1.body) {\n            _this7._renderer.removeClass(document$1.body, CLASS_NAME.OPEN);\n          }\n\n          _this7.resetScrollbar();\n        }\n\n        _this7.resetAdjustments();\n\n        _this7.focusOtherModal();\n\n        _this7.onHidden.emit(_this7);\n      });\n    } // todo: original show was calling a callback when done, but we can use\n    // promise\n\n    /**\n     * \\@internal\n     * @protected\n     * @param {?=} callback\n     * @return {?}\n     */\n\n  }, {\n    key: \"showBackdrop\",\n    value: function showBackdrop(callback) {\n      var _this8 = this;\n\n      if (this._isShown && this.config.backdrop && (!this.backdrop || !this.backdrop.instance.isShown)) {\n        this.removeBackdrop();\n\n        this._backdrop.attach(ModalBackdropComponent).to('body').show({\n          isAnimated: this._config.animated\n        });\n\n        this.backdrop = this._backdrop._componentRef;\n\n        if (!callback) {\n          return;\n        }\n\n        if (!this._config.animated) {\n          callback();\n          return;\n        }\n\n        setTimeout(callback, BACKDROP_TRANSITION_DURATION);\n      } else if (!this._isShown && this.backdrop) {\n        this.backdrop.instance.isShown = false;\n        /** @type {?} */\n\n        var callbackRemove =\n        /**\n        * @return {?}\n        */\n        function callbackRemove() {\n          _this8.removeBackdrop();\n\n          if (callback) {\n            callback();\n          }\n        };\n\n        if (this.backdrop.instance.isAnimated) {\n          this.timerRmBackDrop = window$1.setTimeout(callbackRemove, BACKDROP_TRANSITION_DURATION);\n        } else {\n          callbackRemove();\n        }\n      } else if (callback) {\n        callback();\n      }\n    }\n    /**\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeBackdrop\",\n    value: function removeBackdrop() {\n      this._backdrop.hide();\n    }\n    /**\n     * Events tricks\n     * @protected\n     * @return {?}\n     */\n    // no need for it\n    // protected setEscapeEvent():void {\n    //   if (this._isShown && this._config.keyboard) {\n    //     $(this._element).on(Event.KEYDOWN_DISMISS, (event) => {\n    //       if (event.which === 27) {\n    //         this.hide()\n    //       }\n    //     })\n    //\n    //   } else if (!this._isShown) {\n    //     $(this._element).off(Event.KEYDOWN_DISMISS)\n    //   }\n    // }\n    // protected setResizeEvent():void {\n    // console.log(this.renderer.listenGlobal('', Event.RESIZE));\n    // if (this._isShown) {\n    //   $(window).on(Event.RESIZE, $.proxy(this._handleUpdate, this))\n    // } else {\n    //   $(window).off(Event.RESIZE)\n    // }\n    // }\n\n  }, {\n    key: \"focusOtherModal\",\n    value: function focusOtherModal() {\n      if (this._element.nativeElement.parentElement == null) {\n        return;\n      }\n      /** @type {?} */\n\n\n      var otherOpenedModals = this._element.nativeElement.parentElement.querySelectorAll('.in[bsModal]');\n\n      if (!otherOpenedModals.length) {\n        return;\n      }\n\n      otherOpenedModals[otherOpenedModals.length - 1].focus();\n    }\n    /**\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"resetAdjustments\",\n    value: function resetAdjustments() {\n      this._renderer.setStyle(this._element.nativeElement, 'paddingLeft', '');\n\n      this._renderer.setStyle(this._element.nativeElement, 'paddingRight', '');\n    }\n    /** Scroll bar tricks */\n\n    /**\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"checkScrollbar\",\n    value: function checkScrollbar() {\n      this.isBodyOverflowing = document$1.body.clientWidth < window$1.innerWidth;\n      this.scrollbarWidth = this.getScrollbarWidth();\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"setScrollbar\",\n    value: function setScrollbar() {\n      if (!document$1) {\n        return;\n      }\n\n      this.originalBodyPadding = parseInt(window$1.getComputedStyle(document$1.body).getPropertyValue('padding-right') || 0, 10);\n\n      if (this.isBodyOverflowing) {\n        document$1.body.style.paddingRight = \"\".concat(this.originalBodyPadding + this.scrollbarWidth, \"px\");\n      }\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"resetScrollbar\",\n    value: function resetScrollbar() {\n      document$1.body.style.paddingRight = \"\".concat(this.originalBodyPadding, \"px\");\n    } // thx d.walsh\n\n    /**\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      /** @type {?} */\n      var scrollDiv = this._renderer.createElement('div');\n\n      this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\n\n      this._renderer.appendChild(document$1.body, scrollDiv);\n      /** @type {?} */\n\n\n      var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n      this._renderer.removeChild(document$1.body, scrollDiv);\n\n      return scrollbarWidth;\n    }\n  }]);\n\n  return ModalDirective;\n}();\n\nModalDirective.ɵfac = function ModalDirective_Factory(t) {\n  return new (t || ModalDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ComponentLoaderFactory), ɵngcc0.ɵɵdirectiveInject(MODAL_CONFIG_DEFAULT_OVERRIDE, 8));\n};\n\nModalDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ModalDirective,\n  selectors: [[\"\", \"bsModal\", \"\"]],\n  hostBindings: function ModalDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"mousedown\", function ModalDirective_mousedown_HostBindingHandler($event) {\n        return ctx.onClickStarted($event);\n      })(\"mouseup\", function ModalDirective_mouseup_HostBindingHandler($event) {\n        return ctx.onClickStop($event);\n      })(\"keydown.esc\", function ModalDirective_keydown_esc_HostBindingHandler($event) {\n        return ctx.onEsc($event);\n      });\n    }\n  },\n  inputs: {\n    config: \"config\"\n  },\n  outputs: {\n    onShow: \"onShow\",\n    onShown: \"onShown\",\n    onHide: \"onHide\",\n    onHidden: \"onHidden\"\n  },\n  exportAs: [\"bs-modal\"]\n});\n/** @nocollapse */\n\nModalDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: Renderer2\n  }, {\n    type: ComponentLoaderFactory\n  }, {\n    type: ModalOptions,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MODAL_CONFIG_DEFAULT_OVERRIDE]\n    }]\n  }];\n};\n\nModalDirective.propDecorators = {\n  config: [{\n    type: Input\n  }],\n  onShow: [{\n    type: Output\n  }],\n  onShown: [{\n    type: Output\n  }],\n  onHide: [{\n    type: Output\n  }],\n  onHidden: [{\n    type: Output\n  }],\n  onClickStarted: [{\n    type: HostListener,\n    args: ['mousedown', ['$event']]\n  }],\n  onClickStop: [{\n    type: HostListener,\n    args: ['mouseup', ['$event']]\n  }],\n  onEsc: [{\n    type: HostListener,\n    args: ['keydown.esc', ['$event']]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ModalDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bsModal]',\n      exportAs: 'bs-modal'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc1.ComponentLoaderFactory\n    }, {\n      type: ModalOptions,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MODAL_CONFIG_DEFAULT_OVERRIDE]\n      }]\n    }];\n  }, {\n    onShow: [{\n      type: Output\n    }],\n    onShown: [{\n      type: Output\n    }],\n    onHide: [{\n      type: Output\n    }],\n    onHidden: [{\n      type: Output\n    }],\n    config: [{\n      type: Input\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClickStarted: [{\n      type: HostListener,\n      args: ['mousedown', ['$event']]\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClickStop: [{\n      type: HostListener,\n      args: ['mouseup', ['$event']]\n    }],\n    // todo: consider preventing default and stopping propagation\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onEsc: [{\n      type: HostListener,\n      args: ['keydown.esc', ['$event']]\n    }]\n  });\n})();\n\nif (false) {\n  /**\n   * This event fires immediately when the `show` instance method is called.\n   * @type {?}\n   */\n  ModalDirective.prototype.onShow;\n  /**\n   * This event is fired when the modal has been made visible to the user\n   * (will wait for CSS transitions to complete)\n   * @type {?}\n   */\n\n  ModalDirective.prototype.onShown;\n  /**\n   * This event is fired immediately when\n   * the hide instance method has been called.\n   * @type {?}\n   */\n\n  ModalDirective.prototype.onHide;\n  /**\n   * This event is fired when the modal has finished being\n   * hidden from the user (will wait for CSS transitions to complete).\n   * @type {?}\n   */\n\n  ModalDirective.prototype.onHidden;\n  /**\n   * This field contains last dismiss reason.\n   * Possible values: `backdrop-click`, `esc` and `id: number`\n   * (if modal was closed by direct call of `.hide()`).\n   * @type {?}\n   */\n\n  ModalDirective.prototype.dismissReason;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  ModalDirective.prototype._config;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  ModalDirective.prototype._isShown;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  ModalDirective.prototype.isBodyOverflowing;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  ModalDirective.prototype.originalBodyPadding;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  ModalDirective.prototype.scrollbarWidth;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  ModalDirective.prototype.timerHideModal;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  ModalDirective.prototype.timerRmBackDrop;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  ModalDirective.prototype.backdrop;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ModalDirective.prototype._backdrop;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ModalDirective.prototype.isNested;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ModalDirective.prototype.clickStartedInContent;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ModalDirective.prototype._element;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ModalDirective.prototype._renderer;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar BsModalService = /*#__PURE__*/function () {\n  /**\n   * @param {?} rendererFactory\n   * @param {?} clf\n   * @param {?} modalDefaultOption\n   */\n  function BsModalService(rendererFactory, clf, modalDefaultOption) {\n    _classCallCheck(this, BsModalService);\n\n    this.clf = clf;\n    this.modalDefaultOption = modalDefaultOption; // tslint:disable-next-line:no-any\n\n    this.onShow = new EventEmitter(); // tslint:disable-next-line:no-any\n\n    this.onShown = new EventEmitter(); // tslint:disable-next-line:no-any\n\n    this.onHide = new EventEmitter(); // tslint:disable-next-line:no-any\n\n    this.onHidden = new EventEmitter();\n    this.isBodyOverflowing = false;\n    this.originalBodyPadding = 0;\n    this.scrollbarWidth = 0;\n    this.modalsCount = 0;\n    this.lastDismissReason = null;\n    this.loaders = [];\n    this._backdropLoader = this.clf.createLoader(null, null, null);\n    this._renderer = rendererFactory.createRenderer(null, null);\n    this.config = modalDefaultOption ? Object.assign({}, modalConfigDefaults, modalDefaultOption) : modalConfigDefaults;\n  }\n  /**\n   * Shows a modal\n   * @template T\n   * @param {?} content\n   * @param {?=} config\n   * @return {?}\n   */\n\n\n  _createClass(BsModalService, [{\n    key: \"show\",\n    value: function show( // tslint:disable-next-line:no-any\n    content, config) {\n      this.modalsCount++;\n\n      this._createLoaders();\n      /** @type {?} */\n\n\n      var id = (config === null || config === void 0 ? void 0 : config.id) || new Date().getUTCMilliseconds();\n      this.config = this.modalDefaultOption ? Object.assign({}, modalConfigDefaults, this.modalDefaultOption, config) : Object.assign({}, modalConfigDefaults, config);\n      this.config.id = id;\n\n      this._showBackdrop();\n\n      this.lastDismissReason = null;\n      return this._showModal(content);\n    }\n    /**\n     * @param {?=} id\n     * @return {?}\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide(id) {\n      var _this9 = this;\n\n      if (this.modalsCount === 1 || id == null) {\n        this._hideBackdrop();\n\n        this.resetScrollbar();\n      }\n\n      this.modalsCount = this.modalsCount >= 1 && id != null ? this.modalsCount - 1 : 0;\n      setTimeout(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this9._hideModal(id);\n\n        _this9.removeLoaders(id);\n      }, this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_showBackdrop\",\n    value: function _showBackdrop() {\n      /** @type {?} */\n      var isBackdropEnabled = this.config.backdrop || this.config.backdrop === 'static';\n      /** @type {?} */\n\n      var isBackdropInDOM = !this.backdropRef || !this.backdropRef.instance.isShown;\n\n      if (this.modalsCount === 1) {\n        this.removeBackdrop();\n\n        if (isBackdropEnabled && isBackdropInDOM) {\n          this._backdropLoader.attach(ModalBackdropComponent).to('body').show({\n            isAnimated: this.config.animated\n          });\n\n          this.backdropRef = this._backdropLoader._componentRef;\n        }\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_hideBackdrop\",\n    value: function _hideBackdrop() {\n      var _this10 = this;\n\n      if (!this.backdropRef) {\n        return;\n      }\n\n      this.backdropRef.instance.isShown = false;\n      /** @type {?} */\n\n      var duration = this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0;\n      setTimeout(\n      /**\n      * @return {?}\n      */\n      function () {\n        return _this10.removeBackdrop();\n      }, duration);\n    } // tslint:disable-next-line:no-any\n\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n\n  }, {\n    key: \"_showModal\",\n    value: function _showModal(content) {\n      var _a;\n      /** @type {?} */\n\n\n      var modalLoader = this.loaders[this.loaders.length - 1];\n\n      if (this.config && this.config.providers) {\n        var _iterator = _createForOfIteratorHelper(this.config.providers),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var provider = _step.value;\n            modalLoader.provide(provider);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      /** @type {?} */\n\n\n      var bsModalRef = new BsModalRef();\n      /** @type {?} */\n\n      var modalContainerRef = modalLoader.provide({\n        provide: ModalOptions,\n        useValue: this.config\n      }).provide({\n        provide: BsModalRef,\n        useValue: bsModalRef\n      }).attach(ModalContainerComponent).to('body');\n\n      bsModalRef.hide =\n      /**\n      * @return {?}\n      */\n      function () {\n        return modalContainerRef.instance.hide();\n      };\n\n      bsModalRef.setClass =\n      /**\n      * @param {?} newClass\n      * @return {?}\n      */\n      function (newClass) {\n        modalContainerRef.instance.config.class = newClass;\n      };\n\n      bsModalRef.onHidden = new EventEmitter();\n      bsModalRef.onHide = new EventEmitter();\n      this.copyEvent(modalLoader.onBeforeHide, bsModalRef.onHide);\n      this.copyEvent(modalLoader.onHidden, bsModalRef.onHidden); // call 'show' method after assign setClass in bsModalRef.\n      // it makes modal component's bsModalRef available to call setClass method\n\n      modalContainerRef.show({\n        content: content,\n        isAnimated: this.config.animated,\n        initialState: this.config.initialState,\n        bsModalService: this,\n        id: this.config.id\n      });\n      modalContainerRef.instance.level = this.getModalsCount();\n      bsModalRef.content = modalLoader.getInnerComponent() || null;\n      bsModalRef.id = (_a = modalContainerRef.instance.config) === null || _a === void 0 ? void 0 : _a.id;\n      return bsModalRef;\n    }\n    /**\n     * @param {?=} id\n     * @return {?}\n     */\n\n  }, {\n    key: \"_hideModal\",\n    value: function _hideModal(id) {\n      if (id != null) {\n        /** @type {?} */\n        var indexToRemove = this.loaders.findIndex(\n        /**\n        * @param {?} loader\n        * @return {?}\n        */\n        function (loader) {\n          return loader.instance.config.id === id;\n        });\n        /** @type {?} */\n\n        var modalLoader = this.loaders[indexToRemove];\n\n        if (modalLoader) {\n          modalLoader.hide(id);\n        }\n      } else {\n        this.loaders.forEach(\n        /**\n        * @param {?} loader\n        * @return {?}\n        */\n        function (loader) {\n          loader.hide(loader.instance.config.id);\n        });\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getModalsCount\",\n    value: function getModalsCount() {\n      return this.modalsCount;\n    }\n    /**\n     * @param {?} reason\n     * @return {?}\n     */\n\n  }, {\n    key: \"setDismissReason\",\n    value: function setDismissReason(reason) {\n      this.lastDismissReason = reason;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeBackdrop\",\n    value: function removeBackdrop() {\n      this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\n\n      this._backdropLoader.hide();\n\n      this.backdropRef = null;\n    }\n    /** Checks if the body is overflowing and sets scrollbar width */\n\n    /**\n     * \\@internal\n     * @return {?}\n     */\n\n  }, {\n    key: \"checkScrollbar\",\n    value: function checkScrollbar() {\n      this.isBodyOverflowing = document.body.clientWidth < window.innerWidth;\n      this.scrollbarWidth = this.getScrollbarWidth();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"setScrollbar\",\n    value: function setScrollbar() {\n      if (!document) {\n        return;\n      }\n\n      this.originalBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right') || '0', 10);\n\n      if (this.isBodyOverflowing) {\n        document.body.style.paddingRight = \"\".concat(this.originalBodyPadding + this.scrollbarWidth, \"px\");\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"resetScrollbar\",\n    value: function resetScrollbar() {\n      document.body.style.paddingRight = \"\".concat(this.originalBodyPadding, \"px\");\n    } // thx d.walsh\n\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      /** @type {?} */\n      var scrollDiv = this._renderer.createElement('div');\n\n      this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\n\n      this._renderer.appendChild(document.body, scrollDiv);\n      /** @type {?} */\n\n\n      var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n      this._renderer.removeChild(document.body, scrollDiv);\n\n      return scrollbarWidth;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"_createLoaders\",\n    value: function _createLoaders() {\n      /** @type {?} */\n      var loader = this.clf.createLoader(null, null, null);\n      this.copyEvent(loader.onBeforeShow, this.onShow);\n      this.copyEvent(loader.onShown, this.onShown);\n      this.copyEvent(loader.onBeforeHide, this.onHide);\n      this.copyEvent(loader.onHidden, this.onHidden);\n      this.loaders.push(loader);\n    }\n    /**\n     * @private\n     * @param {?=} id\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeLoaders\",\n    value: function removeLoaders(id) {\n      if (id != null) {\n        /** @type {?} */\n        var indexToRemove = this.loaders.findIndex(\n        /**\n        * @param {?} loader\n        * @return {?}\n        */\n        function (loader) {\n          return loader.instance.config.id === id;\n        });\n\n        if (indexToRemove >= 0) {\n          this.loaders.splice(indexToRemove, 1);\n          this.loaders.forEach(\n          /**\n          * @param {?} loader\n          * @param {?} i\n          * @return {?}\n          */\n          function (loader, i) {\n            loader.instance.level = i + 1;\n          });\n        }\n      } else {\n        this.loaders.splice(0, this.loaders.length);\n      }\n    } // tslint:disable-next-line:no-any\n\n    /**\n     * @private\n     * @param {?} from\n     * @param {?} to\n     * @return {?}\n     */\n\n  }, {\n    key: \"copyEvent\",\n    value: function copyEvent(from, to) {\n      var _this11 = this;\n\n      from.subscribe(\n      /**\n      * @param {?} data\n      * @return {?}\n      */\n      function (data) {\n        to.emit(_this11.lastDismissReason || data);\n      });\n    }\n  }]);\n\n  return BsModalService;\n}();\n\nBsModalService.ɵfac = function BsModalService_Factory(t) {\n  return new (t || BsModalService)(ɵngcc0.ɵɵinject(ɵngcc0.RendererFactory2), ɵngcc0.ɵɵinject(ɵngcc1.ComponentLoaderFactory), ɵngcc0.ɵɵinject(MODAL_CONFIG_DEFAULT_OVERRIDE, 8));\n};\n\nBsModalService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: BsModalService,\n  factory: BsModalService.ɵfac\n});\n/** @nocollapse */\n\nBsModalService.ctorParameters = function () {\n  return [{\n    type: RendererFactory2\n  }, {\n    type: ComponentLoaderFactory\n  }, {\n    type: ModalOptions,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MODAL_CONFIG_DEFAULT_OVERRIDE]\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(BsModalService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc0.RendererFactory2\n    }, {\n      type: ɵngcc1.ComponentLoaderFactory\n    }, {\n      type: ModalOptions,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MODAL_CONFIG_DEFAULT_OVERRIDE]\n      }]\n    }];\n  }, null);\n})();\n\nif (false) {\n  /** @type {?} */\n  BsModalService.prototype.config;\n  /** @type {?} */\n\n  BsModalService.prototype.onShow;\n  /** @type {?} */\n\n  BsModalService.prototype.onShown;\n  /** @type {?} */\n\n  BsModalService.prototype.onHide;\n  /** @type {?} */\n\n  BsModalService.prototype.onHidden;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  BsModalService.prototype.isBodyOverflowing;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  BsModalService.prototype.originalBodyPadding;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  BsModalService.prototype.scrollbarWidth;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  BsModalService.prototype.backdropRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsModalService.prototype._backdropLoader;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsModalService.prototype.modalsCount;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsModalService.prototype.lastDismissReason;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsModalService.prototype.loaders;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsModalService.prototype._renderer;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsModalService.prototype.clf;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BsModalService.prototype.modalDefaultOption;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar ModalModule = /*#__PURE__*/function () {\n  function ModalModule() {\n    _classCallCheck(this, ModalModule);\n  }\n\n  _createClass(ModalModule, null, [{\n    key: \"forRoot\",\n    value:\n    /**\n     * @return {?}\n     */\n    function forRoot() {\n      return {\n        ngModule: ModalModule,\n        providers: [BsModalService, ComponentLoaderFactory, PositioningService]\n      };\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"forChild\",\n    value: function forChild() {\n      return {\n        ngModule: ModalModule,\n        providers: [BsModalService, ComponentLoaderFactory, PositioningService]\n      };\n    }\n  }]);\n\n  return ModalModule;\n}();\n\nModalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: ModalModule\n});\nModalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function ModalModule_Factory(t) {\n    return new (t || ModalModule)();\n  }\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ModalModule, {\n    declarations: [ModalBackdropComponent, ModalDirective, ModalContainerComponent],\n    exports: [ModalBackdropComponent, ModalDirective]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ModalModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ModalBackdropComponent, ModalDirective, ModalContainerComponent],\n      exports: [ModalBackdropComponent, ModalDirective],\n      entryComponents: [ModalBackdropComponent, ModalContainerComponent]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { BsModalRef, BsModalService, MODAL_CONFIG_DEFAULT_OVERRIDE, ModalBackdropComponent, ModalBackdropOptions, ModalContainerComponent, ModalDirective, ModalModule, ModalOptions, CLASS_NAME as ɵa };","map":{"version":3,"sources":["ngx-bootstrap/modal/bs-modal-ref.service.ts","ngx-bootstrap/modal/modal-backdrop.options.ts","ngx-bootstrap/modal/modal-options.class.ts","ngx-bootstrap/modal/modal-container.component.ts","ngx-bootstrap/modal/modal-backdrop.component.ts","ngx-bootstrap/modal/modal.directive.ts","ngx-bootstrap/modal/bs-modal.service.ts","ngx-bootstrap/modal/modal.module.ts"],"names":["document","window"],"mappings":"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","sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\n\n@Injectable()\n// tslint:disable-next-line:no-any\nexport class BsModalRef<T = any> {\n  /**\n   *  Allow user to ID for the modal. Otherwise, a unique number will be given\n   */\n  id: number;\n\n  /**\n   * Reference to a component inside the modal. Null if modal's been created with TemplateRef\n   */\n  content?: T | null;\n\n  /**\n   * Hides the modal\n   */\n  hide: () => void = Function;\n  /**\n   * Sets new class to modal window\n   */\n  setClass: (newClass: string) => void = Function;\n  /**\n   * Event that is fired when the modal behind the ref starts hiding\n   */\n  // tslint:disable-next-line:no-any\n  onHide: EventEmitter<any>;\n  /**\n   * Event that is fired when the modal behind the ref finishes hiding\n   */\n  // tslint:disable-next-line:no-any\n  onHidden: EventEmitter<any>;\n}\n","export class ModalBackdropOptions {\n  animate = true;\n\n  constructor(options: ModalBackdropOptions) {\n    Object.assign(this, options);\n  }\n}\n","import { Injectable, StaticProvider, InjectionToken } from '@angular/core';\nimport { ClassName, DismissReasons, Selector, TransitionDurations } from './models';\n\n@Injectable()\nexport class ModalOptions<T = Object> {\n  /**\n   *  Allow user to ID for the modal. Otherwise, a unique number will be given\n   */\n  id?: number;\n  /**\n   *  Includes a modal-backdrop element. Alternatively,\n   *  specify static for a backdrop which doesn't close the modal on click.\n   */\n  backdrop?: boolean | 'static';\n  /**\n   * Closes the modal when escape key is pressed.\n   */\n  keyboard?: boolean;\n\n  focus?: boolean;\n  /**\n   * Shows the modal when initialized.\n   */\n  show?: boolean;\n  /**\n   * Ignore the backdrop click\n   */\n  ignoreBackdropClick?: boolean;\n  /**\n   * Css class for opened modal\n   */\n  class?: string;\n  /**\n   * Toggle animation\n   */\n  animated?: boolean;\n  /**\n   * Modal data\n   */\n  initialState?: Partial<T>;\n  /**\n   * Modal providers\n   */\n  providers?: StaticProvider[];\n  /**\n   * aria-labelledby attribute value to set on the modal window\n   */\n  ariaLabelledBy?: string;\n  /**\n   * aria-describedby attribute value to set on the modal window\n   */\n  ariaDescribedby?: string;\n}\n\nexport const modalConfigDefaults: ModalOptions = {\n  backdrop: true,\n  keyboard: true,\n  focus: true,\n  show: false,\n  ignoreBackdropClick: false,\n  class: '',\n  animated: true,\n  initialState: {}\n};\n\nexport const MODAL_CONFIG_DEFAULT_OVERRIDE: InjectionToken<ModalOptions> =\n  new InjectionToken<ModalOptions>('override-default-config');\n\nexport const CLASS_NAME: ClassName = {\n  SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\n  BACKDROP: 'modal-backdrop',\n  OPEN: 'modal-open',\n  FADE: 'fade',\n  IN: 'in', // bs3\n  SHOW: 'show' // bs4\n};\n\nexport const SELECTOR: Selector = {\n  DIALOG: '.modal-dialog',\n  DATA_TOGGLE: '[data-toggle=\"modal\"]',\n  DATA_DISMISS: '[data-dismiss=\"modal\"]',\n  FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'\n};\n\nexport const TRANSITION_DURATIONS: TransitionDurations = {\n  MODAL: 300,\n  BACKDROP: 150\n};\n\nexport const DISMISS_REASONS: DismissReasons = {\n  BACKRDOP: 'backdrop-click',\n  ESC: 'esc',\n  BACK: 'browser-back-navigation-clicked'\n};\n","import {\n  Component,\n  ElementRef,\n  HostListener,\n  OnDestroy,\n  OnInit,\n  Renderer2\n} from '@angular/core';\nimport {\n  CLASS_NAME,\n  DISMISS_REASONS,\n  ModalOptions,\n  TRANSITION_DURATIONS\n} from './modal-options.class';\nimport { BsModalService } from './bs-modal.service';\nimport { isBs3 } from 'ngx-bootstrap/utils';\n\n@Component({\n  selector: 'modal-container',\n  template: `\n    <div [class]=\"'modal-dialog' + (config.class ? ' ' + config.class : '')\" role=\"document\">\n      <div class=\"modal-content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `,\n  host: {\n    class: 'modal',\n    role: 'dialog',\n    tabindex: '-1',\n    '[attr.aria-modal]': 'true',\n    '[attr.aria-labelledby]': 'config.ariaLabelledBy',\n    '[attr.aria-describedby]': 'config.ariaDescribedby'\n  }\n})\nexport class ModalContainerComponent implements OnInit, OnDestroy {\n  config: ModalOptions;\n  isShown = false;\n  level: number;\n  isAnimated: boolean;\n  bsModalService: BsModalService;\n  private isModalHiding = false;\n  private clickStartedInContent = false;\n\n  constructor(options: ModalOptions,\n              protected _element: ElementRef,\n              private _renderer: Renderer2) {\n    this.config = Object.assign({}, options);\n  }\n\n  ngOnInit(): void {\n    if (this.isAnimated) {\n      this._renderer.addClass(\n        this._element.nativeElement,\n        CLASS_NAME.FADE\n      );\n    }\n    this._renderer.setStyle(\n      this._element.nativeElement,\n      'display',\n      'block'\n    );\n    setTimeout(() => {\n      this.isShown = true;\n      this._renderer.addClass(\n        this._element.nativeElement,\n        isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW\n      );\n    }, this.isAnimated ? TRANSITION_DURATIONS.BACKDROP : 0);\n    if (document && document.body) {\n      if (this.bsModalService.getModalsCount() === 1) {\n        this.bsModalService.checkScrollbar();\n        this.bsModalService.setScrollbar();\n      }\n      this._renderer.addClass(document.body, CLASS_NAME.OPEN);\n    }\n    if (this._element.nativeElement) {\n      this._element.nativeElement.focus();\n    }\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onClickStarted(event: MouseEvent): void {\n    this.clickStartedInContent = event.target !== this._element.nativeElement;\n  }\n\n  @HostListener('mouseup', ['$event'])\n  onClickStop(event: MouseEvent): void {\n    const clickedInBackdrop = event.target === this._element.nativeElement && !this.clickStartedInContent;\n    if (\n      this.config.ignoreBackdropClick ||\n      this.config.backdrop === 'static' ||\n      !clickedInBackdrop\n    ) {\n      this.clickStartedInContent = false;\n\n      return;\n    }\n    this.bsModalService.setDismissReason(DISMISS_REASONS.BACKRDOP);\n    this.hide();\n  }\n\n  @HostListener('window:popstate')\n  onPopState(): void {\n    this.bsModalService.setDismissReason(DISMISS_REASONS.BACK);\n    this.hide();\n  }\n\n  @HostListener('window:keydown.esc', ['$event'])\n  onEsc(event: KeyboardEvent): void {\n    if (!this.isShown) {\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 27 || event.key === 'Escape') {\n      event.preventDefault();\n    }\n\n    if (\n      this.config.keyboard &&\n      this.level === this.bsModalService.getModalsCount()\n    ) {\n      this.bsModalService.setDismissReason(DISMISS_REASONS.ESC);\n      this.hide();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.isShown) {\n      this.hide();\n    }\n  }\n\n  hide(): void {\n    if (this.isModalHiding || !this.isShown) {\n      return;\n    }\n    this.isModalHiding = true;\n    this._renderer.removeClass(\n      this._element.nativeElement,\n      isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW\n    );\n    setTimeout(() => {\n      this.isShown = false;\n      if (\n        document &&\n        document.body &&\n        this.bsModalService.getModalsCount() === 1\n      ) {\n        this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\n      }\n      this.bsModalService.hide(this.config.id);\n      this.isModalHiding = false;\n    }, this.isAnimated ? TRANSITION_DURATIONS.MODAL : 0);\n  }\n}\n","import { Component, ElementRef, OnInit, Renderer2 } from '@angular/core';\n\nimport { CLASS_NAME } from './modal-options.class';\nimport { isBs3, Utils } from 'ngx-bootstrap/utils';\n\n\n/** This component will be added as background layout for modals if enabled */\n@Component({\n  selector: 'bs-modal-backdrop',\n  template: ' ',\n  host: { class: CLASS_NAME.BACKDROP }\n})\nexport class ModalBackdropComponent implements OnInit {\n  get isAnimated(): boolean {\n    return this._isAnimated;\n  }\n\n  set isAnimated(value: boolean) {\n    this._isAnimated = value;\n    // this.renderer.setElementClass(this.element.nativeElement, `${ClassName.FADE}`, value);\n  }\n\n  get isShown(): boolean {\n    return this._isShown;\n  }\n\n  set isShown(value: boolean) {\n    this._isShown = value;\n    if (value) {\n      this.renderer.addClass(\n        this.element.nativeElement,\n        `${CLASS_NAME.IN}`\n      );\n    } else {\n      this.renderer.removeClass(\n        this.element.nativeElement,\n        `${CLASS_NAME.IN}`\n      );\n    }\n    if (!isBs3()) {\n      if (value) {\n        this.renderer.addClass(\n          this.element.nativeElement,\n          `${CLASS_NAME.SHOW}`\n        );\n      } else {\n        this.renderer.removeClass(\n          this.element.nativeElement,\n          `${CLASS_NAME.SHOW}`\n        );\n      }\n    }\n  }\n\n  element: ElementRef;\n  renderer: Renderer2;\n\n  protected _isAnimated: boolean;\n  protected _isShown = false;\n\n  constructor(element: ElementRef, renderer: Renderer2) {\n    this.element = element;\n    this.renderer = renderer;\n  }\n\n  ngOnInit(): void {\n    if (this.isAnimated) {\n      this.renderer.addClass(\n        this.element.nativeElement,\n        `${CLASS_NAME.FADE}`\n      );\n      Utils.reflow(this.element.nativeElement);\n    }\n    this.isShown = true;\n  }\n}\n","/* tslint:disable:max-file-line-count */\n// todo: should we support enforce focus in?\n// todo: in original bs there are was a way to prevent modal from showing\n// todo: original modal had resize events\n\nimport {\n  ComponentRef, Directive, ElementRef, EventEmitter, HostListener, Input,\n  OnDestroy, OnInit, Output, Renderer2, ViewContainerRef, Optional, Inject\n} from '@angular/core';\n\nimport { document, window, isBs3, Utils } from 'ngx-bootstrap/utils';\nimport { ModalBackdropComponent } from './modal-backdrop.component';\nimport {\n  CLASS_NAME, DISMISS_REASONS, modalConfigDefaults, ModalOptions, MODAL_CONFIG_DEFAULT_OVERRIDE\n} from './modal-options.class';\nimport { ComponentLoader, ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\n\nconst TRANSITION_DURATION = 300;\nconst BACKDROP_TRANSITION_DURATION = 150;\n\n/** Mark any code with directive to show it's content in modal */\n@Directive({\n  selector: '[bsModal]',\n  exportAs: 'bs-modal'\n})\nexport class ModalDirective implements OnDestroy, OnInit {\n  /** allows to set modal configuration via element property */\n  @Input()\n  set config(conf: ModalOptions) {\n    this._config = this.getConfig(conf);\n  }\n\n  get config(): ModalOptions {\n    return this._config;\n  }\n\n  /** This event fires immediately when the `show` instance method is called. */\n  @Output()\n  onShow: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n  /** This event is fired when the modal has been made visible to the user\n   * (will wait for CSS transitions to complete)\n   */\n  @Output()\n  onShown: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n  /** This event is fired immediately when\n   * the hide instance method has been called.\n   */\n  @Output()\n  onHide: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n  /** This event is fired when the modal has finished being\n   * hidden from the user (will wait for CSS transitions to complete).\n   */\n  @Output()\n  onHidden: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n\n  /** This field contains last dismiss reason.\n   * Possible values: `backdrop-click`, `esc` and `id: number`\n   * (if modal was closed by direct call of `.hide()`).\n   */\n  dismissReason: string;\n\n  get isShown(): boolean {\n    return this._isShown;\n  }\n\n  protected _config: ModalOptions;\n  protected _isShown = false;\n\n  protected isBodyOverflowing = false;\n  protected originalBodyPadding = 0;\n  protected scrollbarWidth = 0;\n\n  protected timerHideModal = 0;\n  protected timerRmBackDrop = 0;\n\n  // reference to backdrop component\n  protected backdrop: ComponentRef<ModalBackdropComponent>;\n  private _backdrop: ComponentLoader<ModalBackdropComponent>;\n\n  private isNested = false;\n  private clickStartedInContent = false;\n\n  constructor(\n    private _element: ElementRef,\n    _viewContainerRef: ViewContainerRef,\n    private _renderer: Renderer2,\n    clf: ComponentLoaderFactory,\n    @Optional() @Inject(MODAL_CONFIG_DEFAULT_OVERRIDE) modalDefaultOption: ModalOptions) {\n    this._backdrop = clf.createLoader<ModalBackdropComponent>(\n      _element,\n      _viewContainerRef,\n      _renderer\n    );\n    this._config = modalDefaultOption || modalConfigDefaults;\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onClickStarted(event: MouseEvent): void {\n    this.clickStartedInContent = event.target !== this._element.nativeElement;\n  }\n\n  @HostListener('mouseup', ['$event'])\n  onClickStop(event: MouseEvent): void {\n    const clickedInBackdrop = event.target === this._element.nativeElement && !this.clickStartedInContent;\n    if (\n      this.config.ignoreBackdropClick ||\n      this.config.backdrop === 'static' ||\n      !clickedInBackdrop\n    ) {\n      this.clickStartedInContent = false;\n\n      return;\n    }\n    this.dismissReason = DISMISS_REASONS.BACKRDOP;\n    this.hide(event);\n  }\n\n  // todo: consider preventing default and stopping propagation\n  @HostListener('keydown.esc', ['$event'])\n  onEsc(event: KeyboardEvent): void {\n    if (!this._isShown) {\n      return;\n    }\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 27 || event.key === 'Escape') {\n      event.preventDefault();\n    }\n\n    if (this.config.keyboard) {\n      this.dismissReason = DISMISS_REASONS.ESC;\n      this.hide();\n    }\n  }\n\n  ngOnDestroy() {\n    this.config = void 0;\n    if (this._isShown) {\n      this._isShown = false;\n      this.hideModal();\n      this._backdrop.dispose();\n    }\n  }\n\n  ngOnInit(): void {\n    this._config = this._config || this.getConfig();\n    setTimeout(() => {\n      if (this._config.show) {\n        this.show();\n      }\n    }, 0);\n  }\n\n  /* Public methods */\n\n  /** Allows to manually toggle modal visibility */\n  toggle(): void {\n    return this._isShown ? this.hide() : this.show();\n  }\n\n  /** Allows to manually open modal */\n  show(): void {\n    this.dismissReason = null;\n    this.onShow.emit(this);\n    if (this._isShown) {\n      return;\n    }\n    clearTimeout(this.timerHideModal);\n    clearTimeout(this.timerRmBackDrop);\n\n    this._isShown = true;\n\n    this.checkScrollbar();\n    this.setScrollbar();\n\n    if (document && document.body) {\n      if (document.body.classList.contains(CLASS_NAME.OPEN)) {\n        this.isNested = true;\n      } else {\n        this._renderer.addClass(document.body, CLASS_NAME.OPEN);\n      }\n    }\n\n    this.showBackdrop(() => {\n      this.showElement();\n    });\n  }\n\n  /** Allows to manually close modal */\n  hide(event?: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n\n    this.onHide.emit(this);\n\n    // todo: add an option to prevent hiding\n    if (!this._isShown) {\n      return;\n    }\n\n    window.clearTimeout(this.timerHideModal);\n    window.clearTimeout(this.timerRmBackDrop);\n\n    this._isShown = false;\n    this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.IN);\n    if (!isBs3()) {\n      this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.SHOW);\n    }\n    // this._addClassIn = false;\n\n    if (this._config.animated) {\n      this.timerHideModal = window.setTimeout(\n        () => this.hideModal(),\n        TRANSITION_DURATION\n      );\n    } else {\n      this.hideModal();\n    }\n  }\n\n  /** Private methods @internal */\n  protected getConfig(config?: ModalOptions): ModalOptions {\n    return Object.assign({}, this._config, config);\n  }\n\n  /**\n   *  Show dialog\n   *  @internal\n   */\n  protected showElement(): void {\n    // todo: replace this with component loader usage\n    if (\n      !this._element.nativeElement.parentNode ||\n      this._element.nativeElement.parentNode.nodeType !== Node.ELEMENT_NODE\n    ) {\n      // don't move modals dom position\n      if (document && document.body) {\n        document.body.appendChild(this._element.nativeElement);\n      }\n    }\n\n    this._renderer.setAttribute(\n      this._element.nativeElement,\n      'aria-hidden',\n      'false'\n    );\n    this._renderer.setAttribute(\n      this._element.nativeElement,\n      'aria-modal',\n      'true'\n    );\n    this._renderer.setStyle(\n      this._element.nativeElement,\n      'display',\n      'block'\n    );\n    this._renderer.setProperty(\n      this._element.nativeElement,\n      'scrollTop',\n      0\n    );\n\n    if (this._config.animated) {\n      Utils.reflow(this._element.nativeElement);\n    }\n\n    // this._addClassIn = true;\n    this._renderer.addClass(this._element.nativeElement, CLASS_NAME.IN);\n    if (!isBs3()) {\n      this._renderer.addClass(this._element.nativeElement, CLASS_NAME.SHOW);\n    }\n\n    const transitionComplete = () => {\n      if (this._config.focus) {\n        this._element.nativeElement.focus();\n      }\n      this.onShown.emit(this);\n    };\n\n    if (this._config.animated) {\n      setTimeout(transitionComplete, TRANSITION_DURATION);\n    } else {\n      transitionComplete();\n    }\n  }\n\n  /** @internal */\n  protected hideModal(): void {\n    this._renderer.setAttribute(\n      this._element.nativeElement,\n      'aria-hidden',\n      'true'\n    );\n    this._renderer.setStyle(\n      this._element.nativeElement,\n      'display',\n      'none'\n    );\n    this.showBackdrop(() => {\n      if (!this.isNested) {\n        if (document && document.body) {\n          this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\n        }\n        this.resetScrollbar();\n      }\n      this.resetAdjustments();\n      this.focusOtherModal();\n      this.onHidden.emit(this);\n    });\n  }\n\n  // todo: original show was calling a callback when done, but we can use\n  // promise\n  /** @internal */\n  protected showBackdrop(callback?: Function): void {\n    if (\n      this._isShown &&\n      this.config.backdrop &&\n      (!this.backdrop || !this.backdrop.instance.isShown)\n    ) {\n      this.removeBackdrop();\n      this._backdrop\n        .attach(ModalBackdropComponent)\n        .to('body')\n        .show({ isAnimated: this._config.animated });\n      this.backdrop = this._backdrop._componentRef;\n\n      if (!callback) {\n        return;\n      }\n\n      if (!this._config.animated) {\n        callback();\n\n        return;\n      }\n\n      setTimeout(callback, BACKDROP_TRANSITION_DURATION);\n    } else if (!this._isShown && this.backdrop) {\n      this.backdrop.instance.isShown = false;\n\n      const callbackRemove = () => {\n        this.removeBackdrop();\n        if (callback) {\n          callback();\n        }\n      };\n\n      if (this.backdrop.instance.isAnimated) {\n        this.timerRmBackDrop = window.setTimeout(\n          callbackRemove,\n          BACKDROP_TRANSITION_DURATION\n        );\n      } else {\n        callbackRemove();\n      }\n    } else if (callback) {\n      callback();\n    }\n  }\n\n  /** @internal */\n  protected removeBackdrop(): void {\n    this._backdrop.hide();\n  }\n\n  /** Events tricks */\n\n  // no need for it\n  // protected setEscapeEvent():void {\n  //   if (this._isShown && this._config.keyboard) {\n  //     $(this._element).on(Event.KEYDOWN_DISMISS, (event) => {\n  //       if (event.which === 27) {\n  //         this.hide()\n  //       }\n  //     })\n  //\n  //   } else if (!this._isShown) {\n  //     $(this._element).off(Event.KEYDOWN_DISMISS)\n  //   }\n  // }\n\n  // protected setResizeEvent():void {\n  // console.log(this.renderer.listenGlobal('', Event.RESIZE));\n  // if (this._isShown) {\n  //   $(window).on(Event.RESIZE, $.proxy(this._handleUpdate, this))\n  // } else {\n  //   $(window).off(Event.RESIZE)\n  // }\n  // }\n\n  protected focusOtherModal() {\n    if (this._element.nativeElement.parentElement == null) {\n      return;\n    }\n    const otherOpenedModals = this._element.nativeElement.parentElement.querySelectorAll('.in[bsModal]');\n    if (!otherOpenedModals.length) {\n      return;\n    }\n    otherOpenedModals[otherOpenedModals.length - 1].focus();\n  }\n\n  /** @internal */\n  protected resetAdjustments(): void {\n    this._renderer.setStyle(\n      this._element.nativeElement,\n      'paddingLeft',\n      ''\n    );\n    this._renderer.setStyle(\n      this._element.nativeElement,\n      'paddingRight',\n      ''\n    );\n  }\n\n  /** Scroll bar tricks */\n  /** @internal */\n  protected checkScrollbar(): void {\n    this.isBodyOverflowing = document.body.clientWidth < window.innerWidth;\n    this.scrollbarWidth = this.getScrollbarWidth();\n  }\n\n  protected setScrollbar(): void {\n    if (!document) {\n      return;\n    }\n\n    this.originalBodyPadding = parseInt(\n      window\n        .getComputedStyle(document.body)\n        .getPropertyValue('padding-right') || 0,\n      10\n    );\n\n    if (this.isBodyOverflowing) {\n      document.body.style.paddingRight = `${this.originalBodyPadding +\n        this.scrollbarWidth}px`;\n    }\n  }\n\n  protected resetScrollbar(): void {\n    document.body.style.paddingRight = `${this.originalBodyPadding}px`;\n  }\n\n  // thx d.walsh\n  protected getScrollbarWidth(): number {\n    const scrollDiv = this._renderer.createElement('div');\n    this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\n    this._renderer.appendChild(document.body, scrollDiv);\n    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n    this._renderer.removeChild(document.body, scrollDiv);\n\n    return scrollbarWidth;\n  }\n}\n","import {\n  ComponentRef,\n  Injectable,\n  TemplateRef,\n  EventEmitter,\n  Renderer2,\n  RendererFactory2,\n  Inject,\n  Optional\n} from '@angular/core';\n\nimport { ComponentLoader, ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { ModalBackdropComponent } from './modal-backdrop.component';\nimport { ModalContainerComponent } from './modal-container.component';\nimport {\n  CLASS_NAME,\n  modalConfigDefaults,\n  ModalOptions,\n  TRANSITION_DURATIONS,\n  MODAL_CONFIG_DEFAULT_OVERRIDE\n} from './modal-options.class';\nimport { BsModalRef } from './bs-modal-ref.service';\n\n@Injectable()\nexport class BsModalService {\n  // constructor props\n  config: ModalOptions;\n\n  // tslint:disable-next-line:no-any\n  onShow: EventEmitter<any> = new EventEmitter();\n  // tslint:disable-next-line:no-any\n  onShown: EventEmitter<any> = new EventEmitter();\n  // tslint:disable-next-line:no-any\n  onHide: EventEmitter<any> = new EventEmitter();\n  // tslint:disable-next-line:no-any\n  onHidden: EventEmitter<any> = new EventEmitter();\n\n  protected isBodyOverflowing = false;\n  protected originalBodyPadding = 0;\n\n  protected scrollbarWidth = 0;\n\n  protected backdropRef: ComponentRef<ModalBackdropComponent>;\n  private _backdropLoader: ComponentLoader<ModalBackdropComponent>;\n  private modalsCount = 0;\n  private lastDismissReason: any = null;\n\n  private loaders: ComponentLoader<ModalContainerComponent>[] = [];\n\n  private _renderer: Renderer2;\n\n  constructor(\n    rendererFactory: RendererFactory2,\n    private clf: ComponentLoaderFactory,\n    @Optional() @Inject(MODAL_CONFIG_DEFAULT_OVERRIDE) private modalDefaultOption: ModalOptions) {\n    this._backdropLoader = this.clf.createLoader<ModalBackdropComponent>(\n      null,\n      null,\n      null\n    );\n    this._renderer = rendererFactory.createRenderer(null, null);\n    this.config = modalDefaultOption ?\n      (Object.assign({}, modalConfigDefaults, modalDefaultOption)) :\n      modalConfigDefaults;\n  }\n\n  /** Shows a modal */\n  show<T = Object>(\n    // tslint:disable-next-line:no-any\n    content: string | TemplateRef<any> | { new(...args: any[]): T },\n    config?: ModalOptions<T>\n  ): BsModalRef<T> {\n    this.modalsCount++;\n    this._createLoaders();\n\n    const id = config?.id || (new Date()).getUTCMilliseconds(); // must be different per every show() call\n    this.config = this.modalDefaultOption ?\n      Object.assign({}, modalConfigDefaults, this.modalDefaultOption, config) :\n      Object.assign({}, modalConfigDefaults, config);\n    this.config.id = id;\n\n    this._showBackdrop();\n    this.lastDismissReason = null;\n\n    return this._showModal(content);\n  }\n\n  hide(id?: number) {\n    if (this.modalsCount === 1 || id == null) {\n      this._hideBackdrop();\n      this.resetScrollbar();\n    }\n    this.modalsCount = this.modalsCount >= 1 && id != null ? this.modalsCount - 1 : 0;\n    setTimeout(() => {\n      this._hideModal(id);\n      this.removeLoaders(id);\n    }, this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0);\n  }\n\n  _showBackdrop(): void {\n    const isBackdropEnabled =\n      this.config.backdrop || this.config.backdrop === 'static';\n    const isBackdropInDOM =\n      !this.backdropRef || !this.backdropRef.instance.isShown;\n\n    if (this.modalsCount === 1) {\n      this.removeBackdrop();\n\n      if (isBackdropEnabled && isBackdropInDOM) {\n        this._backdropLoader\n          .attach(ModalBackdropComponent)\n          .to('body')\n          .show({ isAnimated: this.config.animated });\n        this.backdropRef = this._backdropLoader._componentRef;\n      }\n    }\n  }\n\n  _hideBackdrop(): void {\n    if (!this.backdropRef) {\n      return;\n    }\n    this.backdropRef.instance.isShown = false;\n    const duration = this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0;\n    setTimeout(() => this.removeBackdrop(), duration);\n  }\n  // tslint:disable-next-line:no-any\n  _showModal(content: any): BsModalRef {\n    const modalLoader = this.loaders[this.loaders.length - 1];\n    if (this.config && this.config.providers) {\n      for (const provider of this.config.providers) {\n        modalLoader.provide(provider);\n      }\n    }\n\n    const bsModalRef = new BsModalRef();\n    const modalContainerRef = modalLoader\n      .provide({ provide: ModalOptions, useValue: this.config })\n      .provide({ provide: BsModalRef, useValue: bsModalRef })\n      .attach(ModalContainerComponent)\n      .to('body');\n    bsModalRef.hide = () => modalContainerRef.instance.hide();\n    bsModalRef.setClass = (newClass: string) => {\n      modalContainerRef.instance.config.class = newClass;\n    };\n\n    bsModalRef.onHidden = new EventEmitter<any>();\n    bsModalRef.onHide = new EventEmitter<any>();\n\n    this.copyEvent(modalLoader.onBeforeHide, bsModalRef.onHide);\n    this.copyEvent(modalLoader.onHidden, bsModalRef.onHidden);\n    // call 'show' method after assign setClass in bsModalRef.\n    // it makes modal component's bsModalRef available to call setClass method\n    modalContainerRef.show({\n      content,\n      isAnimated: this.config.animated,\n      initialState: this.config.initialState,\n      bsModalService: this,\n      id: this.config.id\n    });\n    modalContainerRef.instance.level = this.getModalsCount();\n\n    bsModalRef.content = modalLoader.getInnerComponent() || null;\n    bsModalRef.id = modalContainerRef.instance.config?.id;\n\n    return bsModalRef;\n  }\n\n  _hideModal(id?: number): void {\n    if (id != null) {\n      const indexToRemove = this.loaders.findIndex(loader => loader.instance.config.id === id);\n      const modalLoader = this.loaders[indexToRemove];\n      if (modalLoader) {\n        modalLoader.hide(id);\n      }\n    } else {\n      this.loaders.forEach(\n        (loader: ComponentLoader<ModalContainerComponent>) => {\n          loader.hide(loader.instance.config.id);\n        }\n      );\n    }\n  }\n\n  getModalsCount(): number {\n    return this.modalsCount;\n  }\n\n  setDismissReason(reason: string) {\n    this.lastDismissReason = reason;\n  }\n\n  removeBackdrop(): void {\n    this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\n    this._backdropLoader.hide();\n    this.backdropRef = null;\n  }\n\n  /** Checks if the body is overflowing and sets scrollbar width */\n  /** @internal */\n  checkScrollbar(): void {\n    this.isBodyOverflowing = document.body.clientWidth < window.innerWidth;\n    this.scrollbarWidth = this.getScrollbarWidth();\n  }\n\n  setScrollbar(): void {\n    if (!document) {\n      return;\n    }\n\n    this.originalBodyPadding = parseInt(\n      window\n        .getComputedStyle(document.body)\n        .getPropertyValue('padding-right') || '0',\n      10\n    );\n\n    if (this.isBodyOverflowing) {\n      document.body.style.paddingRight = `${this.originalBodyPadding +\n        this.scrollbarWidth}px`;\n    }\n  }\n\n  private resetScrollbar(): void {\n    document.body.style.paddingRight = `${this.originalBodyPadding}px`;\n  }\n\n  // thx d.walsh\n  private getScrollbarWidth(): number {\n    const scrollDiv = this._renderer.createElement('div');\n    this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\n    this._renderer.appendChild(document.body, scrollDiv);\n    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n    this._renderer.removeChild(document.body, scrollDiv);\n\n    return scrollbarWidth;\n  }\n\n  private _createLoaders(): void {\n    const loader = this.clf.createLoader<ModalContainerComponent>(\n      null,\n      null,\n      null\n    );\n    this.copyEvent(loader.onBeforeShow, this.onShow);\n    this.copyEvent(loader.onShown, this.onShown);\n    this.copyEvent(loader.onBeforeHide, this.onHide);\n    this.copyEvent(loader.onHidden, this.onHidden);\n    this.loaders.push(loader);\n  }\n\n  private removeLoaders(id?: number): void {\n    if (id != null) {\n      const indexToRemove = this.loaders.findIndex(loader => loader.instance.config.id === id);\n      if (indexToRemove >= 0) {\n        this.loaders.splice(indexToRemove, 1);\n        this.loaders.forEach(\n          (loader: ComponentLoader<ModalContainerComponent>, i: number) => {\n            loader.instance.level = i + 1;\n          }\n        );\n      }\n    } else {\n      this.loaders.splice(0, this.loaders.length);\n    }\n  }\n\n  // tslint:disable-next-line:no-any\n  private copyEvent(from: EventEmitter<any>, to: EventEmitter<any>) {\n    from.subscribe((data: any) => {\n      to.emit(this.lastDismissReason || data);\n    });\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ModalBackdropComponent } from './modal-backdrop.component';\nimport { ModalDirective } from './modal.directive';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { ModalContainerComponent } from './modal-container.component';\nimport { BsModalService } from './bs-modal.service';\n\n@NgModule({\n  declarations: [\n    ModalBackdropComponent,\n    ModalDirective,\n    ModalContainerComponent\n  ],\n  exports: [ModalBackdropComponent, ModalDirective],\n  entryComponents: [ModalBackdropComponent, ModalContainerComponent]\n})\nexport class ModalModule {\n  static forRoot(): ModuleWithProviders<ModalModule> {\n    return {\n      ngModule: ModalModule,\n      providers: [BsModalService, ComponentLoaderFactory, PositioningService]\n    };\n  }\n  static forChild(): ModuleWithProviders<ModalModule> {\n    return {\n      ngModule: ModalModule,\n      providers: [BsModalService, ComponentLoaderFactory, PositioningService]\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}