{"ast":null,"code":"import _createClass from \"/Users/prottasofgrosskofic/Documents/GitHub/sales-agent-site/new-repo/sales-agent-aps/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/prottasofgrosskofic/Documents/GitHub/sales-agent-site/new-repo/sales-agent-aps/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/Users/prottasofgrosskofic/Documents/GitHub/sales-agent-site/new-repo/sales-agent-aps/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/prottasofgrosskofic/Documents/GitHub/sales-agent-site/new-repo/sales-agent-aps/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { BehaviorSubject, queueScheduler, Observable } from 'rxjs';\nimport { observeOn, scan, map, distinctUntilChanged } from 'rxjs/operators';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @template T\n */\n\nvar MiniState = /*#__PURE__*/function (_BehaviorSubject) {\n  _inherits(MiniState, _BehaviorSubject);\n\n  var _super = _createSuper(MiniState);\n\n  /**\n   * @param {?} _initialState\n   * @param {?} actionsDispatcher$\n   * @param {?} reducer\n   */\n  function MiniState(_initialState, actionsDispatcher$, reducer) {\n    var _this;\n\n    _classCallCheck(this, MiniState);\n\n    _this = _super.call(this, _initialState);\n    /** @type {?} */\n\n    var actionInQueue$ = actionsDispatcher$.pipe(observeOn(queueScheduler));\n    /** @type {?} */\n\n    var state$ = actionInQueue$.pipe(scan(\n    /**\n    * @param {?} state\n    * @param {?} action\n    * @return {?}\n    */\n    function (state, action) {\n      if (!action) {\n        return state;\n      }\n\n      return reducer(state, action);\n    }, _initialState));\n    state$.subscribe(\n    /**\n    * @param {?} value\n    * @return {?}\n    */\n    function (value) {\n      return _this.next(value);\n    });\n    return _this;\n  }\n\n  return _createClass(MiniState);\n}(BehaviorSubject);\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @template T\n */\n\n\nvar MiniStore = /*#__PURE__*/function (_Observable) {\n  _inherits(MiniStore, _Observable);\n\n  var _super2 = _createSuper(MiniStore);\n\n  /**\n   * @param {?} _dispatcher\n   * @param {?} _reducer\n   * @param {?} state$\n   */\n  function MiniStore(_dispatcher, _reducer,\n  /* tslint:disable-next-line: no-any */\n  state$) {\n    var _this2;\n\n    _classCallCheck(this, MiniStore);\n\n    _this2 = _super2.call(this);\n    _this2._dispatcher = _dispatcher;\n    _this2._reducer = _reducer;\n    /* tslint:disable-next-line: deprecation */\n\n    _this2.source = state$;\n    return _this2;\n  }\n  /**\n   * @template R\n   * @param {?} pathOrMapFn\n   * @return {?}\n   */\n\n\n  _createClass(MiniStore, [{\n    key: \"select\",\n    value: function select(pathOrMapFn) {\n      /* tslint:disable-next-line: deprecation */\n\n      /** @type {?} */\n      var mapped$ = this.source.pipe(map(pathOrMapFn));\n      return mapped$.pipe(distinctUntilChanged());\n    }\n    /**\n     * @template R\n     * @param {?} operator\n     * @return {?}\n     */\n\n  }, {\n    key: \"lift\",\n    value: function lift(operator) {\n      /** @type {?} */\n      var store = new MiniStore(this._dispatcher, this._reducer, this);\n      /* tslint:disable-next-line: deprecation */\n\n      store.operator = operator;\n      return store;\n    }\n    /**\n     * @param {?} action\n     * @return {?}\n     */\n\n  }, {\n    key: \"dispatch\",\n    value: function dispatch(action) {\n      this._dispatcher.next(action);\n    }\n    /**\n     * @param {?} action\n     * @return {?}\n     */\n\n  }, {\n    key: \"next\",\n    value: function next(action) {\n      this._dispatcher.next(action);\n    }\n    /* tslint:disable-next-line: no-any */\n\n    /**\n     * @param {?} err\n     * @return {?}\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(err) {\n      this._dispatcher.error(err);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      /*noop*/\n    }\n  }]);\n\n  return MiniStore;\n}(Observable);\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  MiniStore.prototype._dispatcher;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  MiniStore.prototype._reducer;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @record\n */\n\n\nfunction Action() {}\n\nif (false) {\n  /** @type {?} */\n  Action.prototype.type;\n  /** @type {?|undefined} */\n\n  Action.prototype.payload;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { MiniState, MiniStore };","map":{"version":3,"sources":["ngx-bootstrap/mini-ngrx/state.class.ts","ngx-bootstrap/mini-ngrx/store.class.ts","ngx-bootstrap/mini-ngrx/public_api.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;IAQa,S;;;;;AACb;AAAQ;AAEL;AAAqC;AAClB;AAHpB,qBACE,aADF,EAEE,kBAFF,EAGE,OAHF,EAG2B;AAAA;;AAAA;;AAEzB,8BAAM,aAAN;AACJ;;AACwB,QAAd,cAAc,GAAG,kBAAkB,CAAC,IAAnB,CACrB,SAAS,CAAC,cAAD,CADY,CAAH;AAGxB;;AAAyB,QAAf,MAAM,GAAG,cAAc,CAAC,IAAf,CACb,IAAI;AAAA;AAAM;AACf;AACM;AACD;AAHK,cAAC,KAAD,EAAW,MAAX,EAAyB;AAC5B,UAAI,CAAC,MAAL,EAAa;AACX,eAAO,KAAP;AACD;;AAED,aAAO,OAAO,CAAC,KAAD,EAAQ,MAAR,CAAd;AACD,KANG,EAOJ,aAPI,CADS,CAAM;AAWrB,IAAA,MAAM,CAAC,SAAP;AAAgB;AAAM;AAC1B;AAEiB;AAHI,cAAC,KAAD;AAAA,aAAc,MAAK,IAAL,CAAU,KAAV,CAAd;AAAA,KAAjB;AAlByB;AAmB1B;;;EAvB+B,e;AAyBjC;AAAI;AAAkC;AAAqH;;AAAI;AAAI;AAAe;;;IC1BtK,S;;;;;AAAqC;AAAQ;AAChD;AACY;AAClB;AAFF,qBACU,WADV,EAGU,QAHV;AAID;AACG,EAAA,MALF,EAKyB;AAAA;;AAAA;;AAEvB;AANQ,WAAA,WAAA,GAAA,WAAA;AAEA,WAAA,QAAA,GAAA,QAAA;AAA6B;;AAOrC,WAAK,MAAL,GAAc,MAAd;AALuB;AAMxB;AACH;AACO;AAAmB;AAA8B;AACxC;;;;;WADd,gBAAU,WAAV,EAAsC;AAAI;;AACP;AACvB,UAAJ,OAAO,GAAkB,KAAK,MAAL,CAAY,IAAZ,CAAiB,GAAG,CAAC,WAAD,CAApB,CAArB;AAEV,aAAO,OAAO,CAAC,IAAR,CAAa,oBAAoB,EAAjC,CAAP;AACD;AACH;AACO;AAAmB;AACzB;AAAmB;;;;WADlB,cAAQ,QAAR,EAAgC;AAAI;AAC3B,UAAD,KAAK,GAAG,IAAI,SAAJ,CAAiB,KAAK,WAAtB,EAAmC,KAAK,QAAxC,EAAkD,IAAlD,CAAP;AACX;;AACI,MAAA,KAAK,CAAC,QAAN,GAAiB,QAAjB;AAEA,aAAO,KAAP;AACD;AACH;AACO;AACJ;AAAmB;;;;WADpB,kBAAS,MAAT,EAAuB;AACrB,WAAK,WAAL,CAAiB,IAAjB,CAAsB,MAAtB;AACD;AACH;AACO;AACA;AAAmB;;;;WADxB,cAAK,MAAL,EAAmB;AACjB,WAAK,WAAL,CAAiB,IAAjB,CAAsB,MAAtB;AACD;AACH;;AAEC;AAAQ;AACE;AAAmB;;;;WAD5B,eAAM,GAAN,EAAc;AACZ,WAAK,WAAL,CAAiB,KAAjB,CAAuB,GAAvB;AACD;AACH;AACO;AACI;;;;WADT,oBAAQ;AACV;AACG;;;;EA5C+B,U;;AA8ClC,IAAA,KAAA,EAAA;AAAa;AAAQ;AAAiB;AAAgB;AA5ClD,EAAA,SAAA,CAAA,SAAA,CAAA,WAAA;AAAsC;AACnC;AAAiB;AAAgB;;AACpC,EAAA,SAAA,CAAA,SAAA,CAAA,QAAA;AAAqC;AACvC;AAAI;AAAkC;AAMtB;;AAAI;AACtB;AAEM;;;ACrBN,SAAA,MAAA,GAAA,CAIC;;AACD,IAAA,KAAA,EAAA;AACY;AALV,EAAA,MAAA,CAAA,SAAA,CAAA,IAAA;AACF;;AACE,EAAA,MAAA,CAAA,SAAA,CAAA,OAAA;AACF;AAEA;AAAI;AAAkC;AAIlC;;;AAAK,SAAA,SAAA,EAAA,SAAA","sourcesContent":["/**\n * @copyright ngrx\n */\nimport { Action, ActionReducer } from './index';\nimport { BehaviorSubject, Observable, queueScheduler } from 'rxjs';\nimport { observeOn, scan } from 'rxjs/operators';\n\n\nexport class MiniState<T> extends BehaviorSubject<T> {\n  constructor(\n    _initialState: T,\n    actionsDispatcher$: Observable<Action>,\n    reducer: ActionReducer<T>\n  ) {\n    super(_initialState);\n\n    const actionInQueue$ = actionsDispatcher$.pipe(\n      observeOn(queueScheduler)\n    );\n    const state$ = actionInQueue$.pipe(\n      scan((state: T, action: Action) => {\n        if (!action) {\n          return state;\n        }\n\n        return reducer(state, action);\n      },\n      _initialState\n    ));\n\n    state$.subscribe((value: T) => this.next(value));\n  }\n}\n","/**\n * @copyright ngrx\n */\nimport { Observable, Observer, Operator } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { Action, ActionReducer } from './index';\n\nexport class MiniStore<T> extends Observable<T> implements Observer<Action> {\n  constructor(\n    private _dispatcher: Observer<Action>,\n    /* tslint:disable-next-line: no-any */\n    private _reducer: ActionReducer<any>,\n    /* tslint:disable-next-line: no-any */\n    state$: Observable<any>\n  ) {\n    super();\n\n    /* tslint:disable-next-line: deprecation */\n    this.source = state$;\n  }\n\n  select<R>(pathOrMapFn: (state: T) => R): Observable<R> {\n    /* tslint:disable-next-line: deprecation */\n    const mapped$: Observable<R> = this.source.pipe(map(pathOrMapFn));\n\n    return mapped$.pipe(distinctUntilChanged());\n  }\n\n  lift<R>(operator: Operator<T, R>): MiniStore<R> {\n    const store = new MiniStore<R>(this._dispatcher, this._reducer, this);\n    /* tslint:disable-next-line: deprecation */\n    store.operator = operator;\n\n    return store;\n  }\n\n  dispatch(action: Action) {\n    this._dispatcher.next(action);\n  }\n\n  next(action: Action) {\n    this._dispatcher.next(action);\n  }\n\n  /* tslint:disable-next-line: no-any */\n  error(err: any) {\n    this._dispatcher.error(err);\n  }\n\n  complete() {\n    /*noop*/\n  }\n}\n","export interface Action {\n  type: string;\n  /* tslint:disable-next-line: no-any */\n  payload?: any;\n}\n\nexport type ActionReducer<T> = (state: T, action: Action) => T;\n\nexport { MiniState } from './state.class';\nexport { MiniStore } from './store.class';\n"]},"metadata":{},"sourceType":"module"}