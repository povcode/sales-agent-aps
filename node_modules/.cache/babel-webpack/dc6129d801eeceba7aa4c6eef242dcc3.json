{"ast":null,"code":"import _createClass from \"/Users/prottasofgrosskofic/Documents/GitHub/sales-agent-site/aspro-sales-agent/blk-design-system-angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/prottasofgrosskofic/Documents/GitHub/sales-agent-site/aspro-sales-agent/blk-design-system-angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { EventEmitter, Injector, ElementRef, TemplateRef, Injectable, ComponentFactoryResolver, NgZone, ApplicationRef } from '@angular/core';\nimport { listenToTriggersV2, registerOutsideClick, registerEscClick } from 'ngx-bootstrap/utils';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @template T\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ngx-bootstrap/positioning';\n\nvar BsComponentRef = /*#__PURE__*/_createClass(function BsComponentRef() {\n  _classCallCheck(this, BsComponentRef);\n});\n\nif (false) {\n  /** @type {?} */\n  BsComponentRef.prototype.templateRef;\n  /** @type {?} */\n\n  BsComponentRef.prototype.viewContainer;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\n\nvar ContentRef = /*#__PURE__*/_createClass(\n/**\n * @param {?} nodes\n * @param {?=} viewRef\n * @param {?=} componentRef\n */\nfunction ContentRef(\n/* tslint:disable-next-line: no-any */\nnodes, viewRef,\n/* tslint:disable-next-line: no-any */\ncomponentRef) {\n  _classCallCheck(this, ContentRef);\n\n  this.nodes = nodes;\n  this.viewRef = viewRef;\n  this.componentRef = componentRef;\n});\n\nif (false) {\n  /** @type {?} */\n  ContentRef.prototype.nodes;\n  /** @type {?} */\n\n  ContentRef.prototype.viewRef;\n  /** @type {?} */\n\n  ContentRef.prototype.componentRef;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @template T\n */\n\n\nvar ComponentLoader = /*#__PURE__*/function () {\n  /**\n   * Do not use this directly, it should be instanced via\n   * `ComponentLoadFactory.attach`\n   * \\@internal\n   * @param {?} _viewContainerRef\n   * @param {?} _renderer\n   * @param {?} _elementRef\n   * @param {?} _injector\n   * @param {?} _componentFactoryResolver\n   * @param {?} _ngZone\n   * @param {?} _applicationRef\n   * @param {?} _posService\n   */\n  // tslint:disable-next-line\n  function ComponentLoader(_viewContainerRef, _renderer, _elementRef, _injector, _componentFactoryResolver, _ngZone, _applicationRef, _posService) {\n    _classCallCheck(this, ComponentLoader);\n\n    this._viewContainerRef = _viewContainerRef;\n    this._renderer = _renderer;\n    this._elementRef = _elementRef;\n    this._injector = _injector;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._ngZone = _ngZone;\n    this._applicationRef = _applicationRef;\n    this._posService = _posService;\n    this.onBeforeShow = new EventEmitter();\n    /* tslint:disable-next-line: no-any*/\n\n    this.onShown = new EventEmitter();\n    /* tslint:disable-next-line: no-any*/\n\n    this.onBeforeHide = new EventEmitter();\n    this.onHidden = new EventEmitter();\n    this._providers = [];\n    this._isHiding = false;\n    /**\n     * A selector used if container element was not found\n     */\n\n    this.containerDefaultSelector = 'body';\n    this._listenOpts = {};\n    this._globalListener = Function.prototype;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(ComponentLoader, [{\n    key: \"isShown\",\n    get: function get() {\n      if (this._isHiding) {\n        return false;\n      }\n\n      return !!this._componentRef;\n    }\n    /**\n     * @param {?} compType\n     * @return {?}\n     */\n\n  }, {\n    key: \"attach\",\n    value: function attach(compType) {\n      this._componentFactory = this._componentFactoryResolver.resolveComponentFactory(compType);\n      return this;\n    } // todo: add behaviour: to target element, `body`, custom element\n\n    /**\n     * @param {?=} container\n     * @return {?}\n     */\n\n  }, {\n    key: \"to\",\n    value: function to(container) {\n      this.container = container || this.container;\n      return this;\n    }\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n\n  }, {\n    key: \"position\",\n    value: function position(opts) {\n      this.attachment = opts.attachment || this.attachment;\n      /* tslint:disable-next-line: no-unnecessary-type-assertion */\n\n      this._elementRef =\n      /** @type {?} */\n      opts.target || this._elementRef;\n      return this;\n    }\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n\n  }, {\n    key: \"provide\",\n    value: function provide(provider) {\n      this._providers.push(provider);\n\n      return this;\n    } // todo: appendChild to element or document.querySelector(this.container)\n\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this._subscribePositioning();\n\n      this._innerComponent = null;\n\n      if (!this._componentRef) {\n        this.onBeforeShow.emit();\n        this._contentRef = this._getContentRef(opts.content, opts.context, opts.initialState);\n        /** @type {?} */\n\n        var injector = Injector.create({\n          providers: this._providers,\n          parent: this._injector\n        });\n        this._componentRef = this._componentFactory.create(injector, this._contentRef.nodes);\n\n        this._applicationRef.attachView(this._componentRef.hostView); // this._componentRef = this._viewContainerRef\n        //   .createComponent(this._componentFactory, 0, injector, this._contentRef.nodes);\n\n\n        this.instance = this._componentRef.instance;\n        Object.assign(this._componentRef.instance, opts);\n\n        if (this.container instanceof ElementRef) {\n          this.container.nativeElement.appendChild(this._componentRef.location.nativeElement);\n        }\n\n        if (typeof this.container === 'string' && typeof document !== 'undefined') {\n          /** @type {?} */\n          var selectedElement = document.querySelector(this.container) || document.querySelector(this.containerDefaultSelector);\n          selectedElement.appendChild(this._componentRef.location.nativeElement);\n        }\n\n        if (!this.container && this._elementRef && this._elementRef.nativeElement.parentElement) {\n          this._elementRef.nativeElement.parentElement.appendChild(this._componentRef.location.nativeElement);\n        } // we need to manually invoke change detection since events registered\n        // via\n        // Renderer::listen() are not picked up by change detection with the\n        // OnPush strategy\n\n\n        if (this._contentRef.componentRef) {\n          this._innerComponent = this._contentRef.componentRef.instance;\n\n          this._contentRef.componentRef.changeDetectorRef.markForCheck();\n\n          this._contentRef.componentRef.changeDetectorRef.detectChanges();\n        }\n\n        this._componentRef.changeDetectorRef.markForCheck();\n\n        this._componentRef.changeDetectorRef.detectChanges();\n\n        this.onShown.emit(opts.id ? {\n          id: opts.id\n        } : this._componentRef.instance);\n      }\n\n      this._registerOutsideClick();\n\n      return this._componentRef;\n    }\n    /**\n     * @param {?=} id\n     * @return {?}\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide(id) {\n      if (!this._componentRef) {\n        return this;\n      }\n\n      this._posService.deletePositionElement(this._componentRef.location);\n\n      this.onBeforeHide.emit(this._componentRef.instance);\n      /** @type {?} */\n\n      var componentEl = this._componentRef.location.nativeElement;\n      componentEl.parentNode.removeChild(componentEl);\n\n      if (this._contentRef.componentRef) {\n        this._contentRef.componentRef.destroy();\n      }\n\n      if (this._viewContainerRef && this._contentRef.viewRef) {\n        this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n      }\n\n      if (this._contentRef.viewRef) {\n        this._contentRef.viewRef.destroy();\n      }\n\n      this._contentRef = null;\n      this._componentRef = null;\n\n      this._removeGlobalListener();\n\n      this.onHidden.emit(id ? {\n        id: id\n      } : null);\n      return this;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (this.isShown) {\n        this.hide();\n        return;\n      }\n\n      this.show();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this.isShown) {\n        this.hide();\n      }\n\n      this._unsubscribePositioning();\n\n      if (this._unregisterListenersFn) {\n        this._unregisterListenersFn();\n      }\n    }\n    /**\n     * @param {?} listenOpts\n     * @return {?}\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(listenOpts) {\n      var _this = this;\n\n      this.triggers = listenOpts.triggers || this.triggers;\n      this._listenOpts.outsideClick = listenOpts.outsideClick;\n      this._listenOpts.outsideEsc = listenOpts.outsideEsc;\n      listenOpts.target = listenOpts.target || this._elementRef.nativeElement;\n      /** @type {?} */\n\n      var hide = this._listenOpts.hide =\n      /**\n      * @return {?}\n      */\n      function () {\n        return listenOpts.hide ? listenOpts.hide() : void _this.hide();\n      };\n      /** @type {?} */\n\n\n      var show = this._listenOpts.show =\n      /**\n      * @param {?} registerHide\n      * @return {?}\n      */\n      function (registerHide) {\n        listenOpts.show ? listenOpts.show(registerHide) : _this.show(registerHide);\n        registerHide();\n      };\n      /** @type {?} */\n\n\n      var toggle =\n      /**\n      * @param {?} registerHide\n      * @return {?}\n      */\n      function toggle(registerHide) {\n        _this.isShown ? hide() : show(registerHide);\n      };\n\n      this._unregisterListenersFn = listenToTriggersV2(this._renderer, {\n        target: listenOpts.target,\n        triggers: listenOpts.triggers,\n        show: show,\n        hide: hide,\n        toggle: toggle\n      });\n      return this;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_removeGlobalListener\",\n    value: function _removeGlobalListener() {\n      if (this._globalListener) {\n        this._globalListener();\n\n        this._globalListener = null;\n      }\n    }\n    /**\n     * @param {?} vRef\n     * @param {?} template\n     * @return {?}\n     */\n\n  }, {\n    key: \"attachInline\",\n    value: function attachInline(vRef,\n    /* tslint:disable-next-line: no-any*/\n    template) {\n      this._inlineViewRef = vRef.createEmbeddedView(template);\n      return this;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_registerOutsideClick\",\n    value: function _registerOutsideClick() {\n      var _this2 = this;\n\n      if (!this._componentRef || !this._componentRef.location) {\n        return;\n      } // why: should run after first event bubble\n\n\n      if (this._listenOpts.outsideClick) {\n        /** @type {?} */\n        var target = this._componentRef.location.nativeElement;\n        setTimeout(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this2._globalListener = registerOutsideClick(_this2._renderer, {\n            targets: [target, _this2._elementRef.nativeElement],\n            outsideClick: _this2._listenOpts.outsideClick,\n            hide:\n            /**\n            * @return {?}\n            */\n            function hide() {\n              return _this2._listenOpts.hide();\n            }\n          });\n        });\n      }\n\n      if (this._listenOpts.outsideEsc) {\n        /** @type {?} */\n        var _target = this._componentRef.location.nativeElement;\n        this._globalListener = registerEscClick(this._renderer, {\n          targets: [_target, this._elementRef.nativeElement],\n          outsideEsc: this._listenOpts.outsideEsc,\n          hide:\n          /**\n          * @return {?}\n          */\n          function hide() {\n            return _this2._listenOpts.hide();\n          }\n        });\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getInnerComponent\",\n    value: function getInnerComponent() {\n      return this._innerComponent;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"_subscribePositioning\",\n    value: function _subscribePositioning() {\n      var _this3 = this;\n\n      if (this._zoneSubscription || !this.attachment) {\n        return;\n      }\n\n      this.onShown.subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this3._posService.position({\n          element: _this3._componentRef.location,\n          target: _this3._elementRef,\n          attachment: _this3.attachment,\n          appendToBody: _this3.container === 'body'\n        });\n      });\n      this._zoneSubscription = this._ngZone.onStable.subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        if (!_this3._componentRef) {\n          return;\n        }\n\n        _this3._posService.calcPosition();\n      });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"_unsubscribePositioning\",\n    value: function _unsubscribePositioning() {\n      if (!this._zoneSubscription) {\n        return;\n      }\n\n      this._zoneSubscription.unsubscribe();\n\n      this._zoneSubscription = null;\n    }\n    /**\n     * @private\n     * @param {?} content\n     * @param {?=} context\n     * @param {?=} initialState\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getContentRef\",\n    value: function _getContentRef(\n    /* tslint:disable-next-line: no-any*/\n    content,\n    /* tslint:disable-next-line: no-any*/\n    context,\n    /* tslint:disable-next-line: no-any*/\n    initialState) {\n      if (!content) {\n        return new ContentRef([]);\n      }\n\n      if (content instanceof TemplateRef) {\n        if (this._viewContainerRef) {\n          /** @type {?} */\n          var _viewRef = this._viewContainerRef.createEmbeddedView(content, context);\n\n          _viewRef.markForCheck();\n\n          return new ContentRef([_viewRef.rootNodes], _viewRef);\n        }\n        /** @type {?} */\n\n\n        var viewRef = content.createEmbeddedView({});\n\n        this._applicationRef.attachView(viewRef);\n\n        return new ContentRef([viewRef.rootNodes], viewRef);\n      }\n\n      if (typeof content === 'function') {\n        /** @type {?} */\n        var contentCmptFactory = this._componentFactoryResolver.resolveComponentFactory(content);\n        /** @type {?} */\n\n\n        var modalContentInjector = Injector.create({\n          providers: this._providers,\n          parent: this._injector\n        });\n        /** @type {?} */\n\n        var componentRef = contentCmptFactory.create(modalContentInjector);\n        Object.assign(componentRef.instance, initialState);\n\n        this._applicationRef.attachView(componentRef.hostView);\n\n        return new ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);\n      }\n\n      return new ContentRef([[this._renderer.createText(\"\".concat(content))]]);\n    }\n  }]);\n\n  return ComponentLoader;\n}();\n\nif (false) {\n  /** @type {?} */\n  ComponentLoader.prototype.onBeforeShow;\n  /** @type {?} */\n\n  ComponentLoader.prototype.onShown;\n  /** @type {?} */\n\n  ComponentLoader.prototype.onBeforeHide;\n  /** @type {?} */\n\n  ComponentLoader.prototype.onHidden;\n  /** @type {?} */\n\n  ComponentLoader.prototype.instance;\n  /** @type {?} */\n\n  ComponentLoader.prototype._componentRef;\n  /** @type {?} */\n\n  ComponentLoader.prototype._inlineViewRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoader.prototype._providers;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoader.prototype._componentFactory;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoader.prototype._zoneSubscription;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoader.prototype._contentRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoader.prototype._innerComponent;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoader.prototype._unregisterListenersFn;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoader.prototype._isHiding;\n  /**\n   * Placement of a component. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoader.prototype.attachment;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoader.prototype.container;\n  /**\n   * A selector used if container element was not found\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoader.prototype.containerDefaultSelector;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoader.prototype.triggers;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoader.prototype._listenOpts;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoader.prototype._globalListener;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoader.prototype._viewContainerRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoader.prototype._renderer;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoader.prototype._elementRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoader.prototype._injector;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoader.prototype._componentFactoryResolver;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoader.prototype._ngZone;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoader.prototype._applicationRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoader.prototype._posService;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar ComponentLoaderFactory = /*#__PURE__*/function () {\n  /**\n   * @param {?} _componentFactoryResolver\n   * @param {?} _ngZone\n   * @param {?} _injector\n   * @param {?} _posService\n   * @param {?} _applicationRef\n   */\n  function ComponentLoaderFactory(_componentFactoryResolver, _ngZone, _injector, _posService, _applicationRef) {\n    _classCallCheck(this, ComponentLoaderFactory);\n\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._ngZone = _ngZone;\n    this._injector = _injector;\n    this._posService = _posService;\n    this._applicationRef = _applicationRef;\n  }\n  /**\n   *\n   * @template T\n   * @param {?} _elementRef\n   * @param {?} _viewContainerRef\n   * @param {?} _renderer\n   * @return {?}\n   */\n\n\n  _createClass(ComponentLoaderFactory, [{\n    key: \"createLoader\",\n    value: function createLoader(_elementRef, _viewContainerRef, _renderer) {\n      return new ComponentLoader(_viewContainerRef, _renderer, _elementRef, this._injector, this._componentFactoryResolver, this._ngZone, this._applicationRef, this._posService);\n    }\n  }]);\n\n  return ComponentLoaderFactory;\n}();\n\nComponentLoaderFactory.ɵfac = function ComponentLoaderFactory_Factory(t) {\n  return new (t || ComponentLoaderFactory)(ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc1.PositioningService), ɵngcc0.ɵɵinject(ɵngcc0.ApplicationRef));\n};\n\nComponentLoaderFactory.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ComponentLoaderFactory,\n  factory: ComponentLoaderFactory.ɵfac\n});\n/** @nocollapse */\n\nComponentLoaderFactory.ctorParameters = function () {\n  return [{\n    type: ComponentFactoryResolver\n  }, {\n    type: NgZone\n  }, {\n    type: Injector\n  }, {\n    type: PositioningService\n  }, {\n    type: ApplicationRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ComponentLoaderFactory, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc1.PositioningService\n    }, {\n      type: ɵngcc0.ApplicationRef\n    }];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  ComponentLoaderFactory.prototype._componentFactoryResolver;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoaderFactory.prototype._ngZone;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoaderFactory.prototype._injector;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoaderFactory.prototype._posService;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ComponentLoaderFactory.prototype._applicationRef;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { BsComponentRef, ComponentLoader, ComponentLoaderFactory, ContentRef };","map":{"version":3,"sources":["ngx-bootstrap/component-loader/bs-component-ref.class.ts","ngx-bootstrap/component-loader/content-ref.class.ts","ngx-bootstrap/component-loader/component-loader.class.ts","ngx-bootstrap/component-loader/component-loader.factory.ts"],"names":[],"mappings":"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","sourcesContent":["import { TemplateRef, ViewContainerRef } from '@angular/core';\n\nexport class BsComponentRef<T> {\n  templateRef: TemplateRef<T>;\n  viewContainer: ViewContainerRef;\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\nimport { ComponentRef, ViewRef } from '@angular/core';\n\nexport class ContentRef {\n  /* tslint:disable-next-line: no-any */\n  nodes: any[];\n  viewRef?: ViewRef;\n  /* tslint:disable-next-line: no-any */\n  componentRef?: ComponentRef<any>;\n\n  constructor(\n    /* tslint:disable-next-line: no-any */\n    nodes: any[],\n    viewRef?: ViewRef,\n    /* tslint:disable-next-line: no-any */\n    componentRef?: ComponentRef<any>\n  ) {\n    this.nodes = nodes;\n    this.viewRef = viewRef;\n    this.componentRef = componentRef;\n  }\n}\n","// tslint:disable:max-file-line-count\n// todo: add delay support\n// todo: merge events onShow, onShown, etc...\n// todo: add global positioning configuration?\nimport {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Injector,\n  NgZone,\n  Renderer2,\n  StaticProvider,\n  TemplateRef,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { PositioningOptions, PositioningService } from 'ngx-bootstrap/positioning';\n\nimport {\n  listenToTriggersV2,\n  registerEscClick,\n  registerOutsideClick\n} from 'ngx-bootstrap/utils';\n\nimport { ContentRef } from './content-ref.class';\nimport { ListenOptions } from './listen-options.model';\nimport { Subscription } from 'rxjs';\n\nexport class ComponentLoader<T> {\n  onBeforeShow: EventEmitter<void> = new EventEmitter();\n  /* tslint:disable-next-line: no-any*/\n  onShown: EventEmitter<any> = new EventEmitter();\n  /* tslint:disable-next-line: no-any*/\n  onBeforeHide: EventEmitter<any> = new EventEmitter();\n  onHidden: EventEmitter<any> = new EventEmitter();\n\n  instance: T;\n  _componentRef: ComponentRef<T>;\n  _inlineViewRef: EmbeddedViewRef<T>;\n\n  private _providers: StaticProvider[] = [];\n  private _componentFactory: ComponentFactory<T>;\n  private _zoneSubscription: Subscription;\n  private _contentRef: ContentRef;\n  private _innerComponent: ComponentRef<T>;\n\n  private _unregisterListenersFn: Function;\n\n  get isShown(): boolean {\n    if (this._isHiding) {\n      return false;\n    }\n\n    return !!this._componentRef;\n  }\n\n  private _isHiding = false;\n\n  /**\n   * Placement of a component. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  private attachment: string;\n\n  /**\n   * A selector specifying the element the popover should be appended to.\n   */\n  /* tslint:disable-next-line: no-any*/\n  private container: string | ElementRef | any;\n\n  /**\n   * A selector used if container element was not found\n   */\n  private containerDefaultSelector = 'body';\n\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  private triggers: string;\n\n  private _listenOpts: ListenOptions = {};\n  private _globalListener = Function.prototype;\n\n  /**\n   * Do not use this directly, it should be instanced via\n   * `ComponentLoadFactory.attach`\n   * @internal\n   */\n  // tslint:disable-next-line\n  public constructor(\n    private _viewContainerRef: ViewContainerRef,\n    private _renderer: Renderer2,\n    private _elementRef: ElementRef,\n    private _injector: Injector,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _ngZone: NgZone,\n    private _applicationRef: ApplicationRef,\n    private _posService: PositioningService\n  ) { }\n\n  attach(compType: Type<T>): ComponentLoader<T> {\n    this._componentFactory = this._componentFactoryResolver\n      .resolveComponentFactory<T>(compType);\n\n    return this;\n  }\n\n  // todo: add behaviour: to target element, `body`, custom element\n  to(container?: string | ElementRef): ComponentLoader<T> {\n    this.container = container || this.container;\n\n    return this;\n  }\n\n  position(opts?: PositioningOptions): ComponentLoader<T> {\n    this.attachment = opts.attachment || this.attachment;\n    /* tslint:disable-next-line: no-unnecessary-type-assertion */\n    this._elementRef = (opts.target as ElementRef) || this._elementRef;\n\n    return this;\n  }\n\n  provide(provider: StaticProvider): ComponentLoader<T> {\n    this._providers.push(provider);\n\n    return this;\n  }\n\n  // todo: appendChild to element or document.querySelector(this.container)\n\n  show(opts: {\n    /* tslint:disable-next-line: no-any*/\n    content?: string | TemplateRef<any>;\n    /* tslint:disable-next-line: no-any*/\n    context?: any;\n    /* tslint:disable-next-line: no-any*/\n    initialState?: any;\n    /* tslint:disable-next-line: no-any*/\n    [key: string]: any;\n    id?: number|string;\n  } = {}\n  ): ComponentRef<T> {\n\n    this._subscribePositioning();\n    this._innerComponent = null;\n\n    if (!this._componentRef) {\n      this.onBeforeShow.emit();\n      this._contentRef = this._getContentRef(opts.content, opts.context, opts.initialState);\n\n      const injector = Injector.create({\n        providers: this._providers,\n        parent: this._injector\n      });\n\n      this._componentRef = this._componentFactory.create(injector, this._contentRef.nodes);\n\n      this._applicationRef.attachView(this._componentRef.hostView);\n      // this._componentRef = this._viewContainerRef\n      //   .createComponent(this._componentFactory, 0, injector, this._contentRef.nodes);\n      this.instance = this._componentRef.instance;\n\n      Object.assign(this._componentRef.instance, opts);\n\n      if (this.container instanceof ElementRef) {\n        this.container.nativeElement.appendChild(\n          this._componentRef.location.nativeElement\n        );\n      }\n\n      if (typeof this.container === 'string' && typeof document !== 'undefined') {\n        const selectedElement = document.querySelector(this.container) ||\n                                document.querySelector(this.containerDefaultSelector);\n\n        selectedElement.appendChild(this._componentRef.location.nativeElement);\n      }\n\n      if (\n        !this.container &&\n        this._elementRef &&\n        this._elementRef.nativeElement.parentElement\n      ) {\n        this._elementRef.nativeElement.parentElement.appendChild(\n          this._componentRef.location.nativeElement\n        );\n      }\n\n      // we need to manually invoke change detection since events registered\n      // via\n      // Renderer::listen() are not picked up by change detection with the\n      // OnPush strategy\n      if (this._contentRef.componentRef) {\n        this._innerComponent = this._contentRef.componentRef.instance;\n        this._contentRef.componentRef.changeDetectorRef.markForCheck();\n        this._contentRef.componentRef.changeDetectorRef.detectChanges();\n      }\n      this._componentRef.changeDetectorRef.markForCheck();\n      this._componentRef.changeDetectorRef.detectChanges();\n\n\n      this.onShown.emit(opts.id ? { id: opts.id } : this._componentRef.instance);\n    }\n\n    this._registerOutsideClick();\n\n    return this._componentRef;\n  }\n\n  hide(id?: number|string): ComponentLoader<T> {\n    if (!this._componentRef) {\n      return this;\n    }\n\n    this._posService.deletePositionElement(this._componentRef.location);\n\n    this.onBeforeHide.emit(this._componentRef.instance);\n\n    const componentEl = this._componentRef.location.nativeElement;\n    componentEl.parentNode.removeChild(componentEl);\n    if (this._contentRef.componentRef) {\n      this._contentRef.componentRef.destroy();\n    }\n\n    if (this._viewContainerRef && this._contentRef.viewRef) {\n      this._viewContainerRef.remove(\n        this._viewContainerRef.indexOf(this._contentRef.viewRef)\n      );\n    }\n    if (this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n\n    this._contentRef = null;\n    this._componentRef = null;\n    this._removeGlobalListener();\n\n    this.onHidden.emit(id ? { id } : null);\n\n    return this;\n  }\n\n  toggle(): void {\n    if (this.isShown) {\n      this.hide();\n\n      return;\n    }\n\n    this.show();\n  }\n\n  dispose(): void {\n    if (this.isShown) {\n      this.hide();\n    }\n\n    this._unsubscribePositioning();\n\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n  }\n\n  listen(listenOpts: ListenOptions): ComponentLoader<T> {\n    this.triggers = listenOpts.triggers || this.triggers;\n    this._listenOpts.outsideClick = listenOpts.outsideClick;\n    this._listenOpts.outsideEsc = listenOpts.outsideEsc;\n    listenOpts.target = listenOpts.target || this._elementRef.nativeElement;\n\n    const hide = (this._listenOpts.hide = () =>\n      listenOpts.hide ? listenOpts.hide() : void this.hide());\n    const show = (this._listenOpts.show = (registerHide: Function) => {\n      listenOpts.show ? listenOpts.show(registerHide) : this.show(registerHide);\n      registerHide();\n    });\n\n    const toggle = (registerHide: Function) => {\n      this.isShown ? hide() : show(registerHide);\n    };\n\n    this._unregisterListenersFn = listenToTriggersV2(this._renderer, {\n      target: listenOpts.target,\n      triggers: listenOpts.triggers,\n      show,\n      hide,\n      toggle\n    });\n\n    return this;\n  }\n\n  _removeGlobalListener() {\n    if (this._globalListener) {\n      this._globalListener();\n      this._globalListener = null;\n    }\n  }\n\n  attachInline(\n    vRef: ViewContainerRef,\n    /* tslint:disable-next-line: no-any*/\n    template: TemplateRef<any>\n  ): ComponentLoader<T> {\n    this._inlineViewRef = vRef.createEmbeddedView(template);\n\n    return this;\n  }\n\n  _registerOutsideClick(): void {\n    if (!this._componentRef || !this._componentRef.location) {\n      return;\n    }\n    // why: should run after first event bubble\n    if (this._listenOpts.outsideClick) {\n      const target = this._componentRef.location.nativeElement;\n      setTimeout(() => {\n        this._globalListener = registerOutsideClick(this._renderer, {\n          targets: [target, this._elementRef.nativeElement],\n          outsideClick: this._listenOpts.outsideClick,\n          hide: () => this._listenOpts.hide()\n        });\n      });\n    }\n    if (this._listenOpts.outsideEsc) {\n      const target = this._componentRef.location.nativeElement;\n      this._globalListener = registerEscClick(this._renderer, {\n        targets: [target, this._elementRef.nativeElement],\n        outsideEsc: this._listenOpts.outsideEsc,\n        hide: () => this._listenOpts.hide()\n      });\n    }\n  }\n\n  getInnerComponent(): ComponentRef<T> {\n    return this._innerComponent;\n  }\n\n  private _subscribePositioning(): void {\n    if (this._zoneSubscription || !this.attachment) {\n      return;\n    }\n\n    this.onShown.subscribe(() => {\n      this._posService.position({\n        element: this._componentRef.location,\n        target: this._elementRef,\n        attachment: this.attachment,\n        appendToBody: this.container === 'body'\n      });\n    });\n\n    this._zoneSubscription = this._ngZone.onStable.subscribe(() => {\n      if (!this._componentRef) {\n        return;\n      }\n\n      this._posService.calcPosition();\n    });\n  }\n\n  private _unsubscribePositioning(): void {\n    if (!this._zoneSubscription) {\n      return;\n    }\n\n    this._zoneSubscription.unsubscribe();\n    this._zoneSubscription = null;\n  }\n\n  private _getContentRef(\n    /* tslint:disable-next-line: no-any*/\n    content: string | TemplateRef<any> | any,\n    /* tslint:disable-next-line: no-any*/\n    context?: any,\n    /* tslint:disable-next-line: no-any*/\n    initialState?: any\n  ): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    }\n\n    if (content instanceof TemplateRef) {\n      if (this._viewContainerRef) {\n        const _viewRef = this._viewContainerRef\n          .createEmbeddedView<TemplateRef<T>>(content, context);\n        _viewRef.markForCheck();\n\n        return new ContentRef([_viewRef.rootNodes], _viewRef);\n      }\n      const viewRef = content.createEmbeddedView({});\n      this._applicationRef.attachView(viewRef);\n\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n\n    if (typeof content === 'function') {\n      const contentCmptFactory = this._componentFactoryResolver.resolveComponentFactory(\n        content\n      );\n\n      const modalContentInjector = Injector.create({\n        providers: this._providers,\n        parent: this._injector\n      });\n\n      const componentRef = contentCmptFactory.create(modalContentInjector);\n      Object.assign(componentRef.instance, initialState);\n      this._applicationRef.attachView(componentRef.hostView);\n\n      return new ContentRef(\n        [[componentRef.location.nativeElement]],\n        componentRef.hostView,\n        componentRef\n      );\n    }\n\n    return new ContentRef([[this._renderer.createText(`${content}`)]]);\n  }\n}\n","import {\n  ApplicationRef, ComponentFactoryResolver, ElementRef, Injectable, Injector,\n  NgZone, Renderer2, ViewContainerRef\n} from '@angular/core';\nimport { ComponentLoader } from './component-loader.class';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\n\n@Injectable()\nexport class ComponentLoaderFactory {\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\n              private _ngZone: NgZone,\n              private _injector: Injector,\n              private _posService: PositioningService,\n              private _applicationRef: ApplicationRef) {}\n\n  /**\n   *\n   * @param _elementRef\n   * @param _viewContainerRef\n   * @param _renderer\n   */\n  createLoader<T>(_elementRef: ElementRef,\n                  _viewContainerRef: ViewContainerRef,\n                  _renderer: Renderer2): ComponentLoader<T> {\n    return new ComponentLoader<T>(\n      _viewContainerRef,\n      _renderer,\n      _elementRef,\n      this._injector,\n      this._componentFactoryResolver,\n      this._ngZone,\n      this._applicationRef,\n      this._posService\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}