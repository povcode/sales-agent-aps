{"ast":null,"code":"import _defineProperty from \"/Users/prottasofgrosskofic/Documents/GitHub/sales-agent-site/aspro-sales-agent/aps-sales-agent/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/prottasofgrosskofic/Documents/GitHub/sales-agent-site/aspro-sales-agent/aps-sales-agent/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/prottasofgrosskofic/Documents/GitHub/sales-agent-site/aspro-sales-agent/aps-sales-agent/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Directive, ViewContainerRef, Input, Injectable, ɵɵdefineInjectable, Component, Renderer2, ElementRef, HostBinding, EventEmitter, Output, TemplateRef, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction TabsetComponent_li_1_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"span\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function TabsetComponent_li_1_span_4_Template_span_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var tabz_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      $event.preventDefault();\n      return ctx_r4.removeTab(tabz_r1);\n    });\n    ɵngcc0.ɵɵtext(1, \" \\u274C\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar _c0 = function _c0(a1) {\n  return [\"nav-item\", a1];\n};\n\nfunction TabsetComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 3);\n    ɵngcc0.ɵɵlistener(\"keydown\", function TabsetComponent_li_1_Template_li_keydown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var i_r2 = ctx.index;\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.keyNavActions($event, i_r2);\n    });\n    ɵngcc0.ɵɵelementStart(1, \"a\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function TabsetComponent_li_1_Template_a_click_1_listener() {\n      var tabz_r1 = ctx.$implicit;\n      return tabz_r1.active = true;\n    });\n    ɵngcc0.ɵɵelementStart(2, \"span\", 5);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, TabsetComponent_li_1_span_4_Template, 2, 0, \"span\", 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var tabz_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵclassProp(\"active\", tabz_r1.active)(\"disabled\", tabz_r1.disabled);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(15, _c0, tabz_r1.customClass || \"\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"active\", tabz_r1.active)(\"disabled\", tabz_r1.disabled);\n    ɵngcc0.ɵɵattribute(\"aria-controls\", tabz_r1.id ? tabz_r1.id : \"\")(\"aria-selected\", !!tabz_r1.active)(\"id\", tabz_r1.id ? tabz_r1.id + \"-link\" : \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTransclude\", tabz_r1.headingRef);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(tabz_r1.heading);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tabz_r1.removable);\n  }\n}\n\nvar _c1 = [\"*\"];\n\nvar NgTranscludeDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} viewRef\n   */\n  function NgTranscludeDirective(viewRef) {\n    _classCallCheck(this, NgTranscludeDirective);\n\n    this.viewRef = viewRef;\n  }\n  /**\n   * @param {?} templateRef\n   * @return {?}\n   */\n\n\n  _createClass(NgTranscludeDirective, [{\n    key: \"ngTransclude\",\n    get:\n    /* tslint:disable-next-line:no-any */\n\n    /**\n     * @return {?}\n     */\n    function get() {\n      return this._ngTransclude;\n    },\n    set: function set(templateRef) {\n      this._ngTransclude = templateRef;\n\n      if (templateRef) {\n        this.viewRef.createEmbeddedView(templateRef);\n      }\n    }\n  }]);\n\n  return NgTranscludeDirective;\n}();\n\nNgTranscludeDirective.ɵfac = function NgTranscludeDirective_Factory(t) {\n  return new (t || NgTranscludeDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef));\n};\n\nNgTranscludeDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgTranscludeDirective,\n  selectors: [[\"\", \"ngTransclude\", \"\"]],\n  inputs: {\n    ngTransclude: \"ngTransclude\"\n  }\n});\n/** @nocollapse */\n\nNgTranscludeDirective.ctorParameters = function () {\n  return [{\n    type: ViewContainerRef\n  }];\n};\n\nNgTranscludeDirective.propDecorators = {\n  ngTransclude: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgTranscludeDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngTransclude]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ViewContainerRef\n    }];\n  }, {\n    ngTransclude: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  NgTranscludeDirective.prototype.viewRef;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  NgTranscludeDirective.prototype._viewRef;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  NgTranscludeDirective.prototype._ngTransclude;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar TabsetConfig = /*#__PURE__*/_createClass(function TabsetConfig() {\n  _classCallCheck(this, TabsetConfig);\n\n  /**\n   * provides default navigation context class: 'tabs' or 'pills'\n   */\n  this.type = 'tabs';\n  /**\n   * provides possibility to set keyNavigations enable or disable, by default is enable\n   */\n\n  this.isKeysAllowed = true;\n  /**\n   * aria label for tab list\n   */\n\n  this.ariaLabel = 'Tabs';\n});\n\nTabsetConfig.ɵfac = function TabsetConfig_Factory(t) {\n  return new (t || TabsetConfig)();\n};\n/** @nocollapse */\n\n\nTabsetConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function TabsetConfig_Factory() {\n    return new TabsetConfig();\n  },\n  token: TabsetConfig,\n  providedIn: \"root\"\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TabsetConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * provides default navigation context class: 'tabs' or 'pills'\n   * @type {?}\n   */\n  TabsetConfig.prototype.type;\n  /**\n   * provides possibility to set keyNavigations enable or disable, by default is enable\n   * @type {?}\n   */\n\n  TabsetConfig.prototype.isKeysAllowed;\n  /**\n   * aria label for tab list\n   * @type {?}\n   */\n\n  TabsetConfig.prototype.ariaLabel;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// todo: add active event to tab\n// todo: fix? mixing static and dynamic tabs position tabs in order of creation\n\n\nvar TabsetComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} config\n   * @param {?} renderer\n   * @param {?} elementRef\n   */\n  function TabsetComponent(config, renderer, elementRef) {\n    _classCallCheck(this, TabsetComponent);\n\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.clazz = true;\n    this.tabs = [];\n    this.classMap = {};\n    Object.assign(this, config);\n  }\n  /**\n   * if true tabs will be placed vertically\n   * @return {?}\n   */\n\n\n  _createClass(TabsetComponent, [{\n    key: \"vertical\",\n    get: function get() {\n      return this._vertical;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._vertical = value;\n      this.setClassMap();\n    }\n    /**\n     * if true tabs fill the container and have a consistent width\n     * @return {?}\n     */\n\n  }, {\n    key: \"justified\",\n    get: function get() {\n      return this._justified;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._justified = value;\n      this.setClassMap();\n    }\n    /**\n     * navigation context class: 'tabs' or 'pills'\n     * @return {?}\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._type;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._type = value;\n      this.setClassMap();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"isKeysAllowed\",\n    get: function get() {\n      return this._isKeysAllowed;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._isKeysAllowed = value;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.isDestroyed = true;\n    }\n    /**\n     * @param {?} tab\n     * @return {?}\n     */\n\n  }, {\n    key: \"addTab\",\n    value: function addTab(tab) {\n      this.tabs.push(tab);\n      tab.active = this.tabs.length === 1 && typeof tab.active === 'undefined';\n    }\n    /**\n     * @param {?} tab\n     * @param {?=} options\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeTab\",\n    value: function removeTab(tab) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        reselect: true,\n        emit: true\n      };\n\n      /** @type {?} */\n      var index = this.tabs.indexOf(tab);\n\n      if (index === -1 || this.isDestroyed) {\n        return;\n      } // Select a new tab if the tab to be removed is selected and not destroyed\n\n\n      if (options.reselect && tab.active && this.hasAvailableTabs(index)) {\n        /** @type {?} */\n        var newActiveIndex = this.getClosestTabIndex(index);\n        this.tabs[newActiveIndex].active = true;\n      }\n\n      if (options.emit) {\n        tab.removed.emit(tab);\n      }\n\n      this.tabs.splice(index, 1);\n\n      if (tab.elementRef.nativeElement.parentNode) {\n        this.renderer.removeChild(tab.elementRef.nativeElement.parentNode, tab.elementRef.nativeElement);\n      }\n    }\n    /* tslint:disable-next-line: cyclomatic-complexity */\n\n    /**\n     * @param {?} event\n     * @param {?} index\n     * @return {?}\n     */\n\n  }, {\n    key: \"keyNavActions\",\n    value: function keyNavActions(event, index) {\n      if (!this.isKeysAllowed) {\n        return;\n      }\n      /** @type {?} */\n\n\n      var list = Array.from(this.elementRef.nativeElement.querySelectorAll('.nav-link')); // const activeElList = list.filter((el: HTMLElement) => !el.classList.contains('disabled'));\n      // tslint:disable-next-line:deprecation\n\n      if (event.keyCode === 13 || event.key === 'Enter' || event.keyCode === 32 || event.key === 'Space') {\n        event.preventDefault();\n        /** @type {?} */\n\n        var currentTab = list[index % list.length];\n        currentTab.click();\n        return;\n      } // tslint:disable-next-line:deprecation\n\n\n      if (event.keyCode === 39 || event.key === 'RightArrow') {\n        /** @type {?} */\n        var nextTab;\n        /** @type {?} */\n\n        var shift = 1;\n\n        do {\n          nextTab = list[(index + shift) % list.length];\n          shift++;\n        } while (nextTab.classList.contains('disabled'));\n\n        nextTab.focus();\n        return;\n      } // tslint:disable-next-line:deprecation\n\n\n      if (event.keyCode === 37 || event.key === 'LeftArrow') {\n        /** @type {?} */\n        var previousTab;\n        /** @type {?} */\n\n        var _shift = 1;\n        /** @type {?} */\n\n        var i = index;\n\n        do {\n          if (i - _shift < 0) {\n            i = list.length - 1;\n            previousTab = list[i];\n            _shift = 0;\n          } else {\n            previousTab = list[i - _shift];\n          }\n\n          _shift++;\n        } while (previousTab.classList.contains('disabled'));\n\n        previousTab.focus();\n        return;\n      } // tslint:disable-next-line:deprecation\n\n\n      if (event.keyCode === 36 || event.key === 'Home') {\n        event.preventDefault();\n        /** @type {?} */\n\n        var firstTab;\n        /** @type {?} */\n\n        var _shift2 = 0;\n\n        do {\n          firstTab = list[_shift2 % list.length];\n          _shift2++;\n        } while (firstTab.classList.contains('disabled'));\n\n        firstTab.focus();\n        return;\n      } // tslint:disable-next-line:deprecation\n\n\n      if (event.keyCode === 35 || event.key === 'End') {\n        event.preventDefault();\n        /** @type {?} */\n\n        var lastTab;\n        /** @type {?} */\n\n        var _shift3 = 1;\n        /** @type {?} */\n\n        var _i = index;\n\n        do {\n          if (_i - _shift3 < 0) {\n            _i = list.length - 1;\n            lastTab = list[_i];\n            _shift3 = 0;\n          } else {\n            lastTab = list[_i - _shift3];\n          }\n\n          _shift3++;\n        } while (lastTab.classList.contains('disabled'));\n\n        lastTab.focus();\n        return;\n      } // tslint:disable-next-line:deprecation\n\n\n      if (event.keyCode === 46 || event.key === 'Delete') {\n        if (this.tabs[index].removable) {\n          this.removeTab(this.tabs[index]);\n\n          if (list[index + 1]) {\n            list[(index + 1) % list.length].focus();\n            return;\n          }\n\n          if (list[list.length - 1]) {\n            list[0].focus();\n          }\n        }\n      }\n    }\n    /**\n     * @protected\n     * @param {?} index\n     * @return {?}\n     */\n\n  }, {\n    key: \"getClosestTabIndex\",\n    value: function getClosestTabIndex(index) {\n      /** @type {?} */\n      var tabsLength = this.tabs.length;\n\n      if (!tabsLength) {\n        return -1;\n      }\n\n      for (var step = 1; step <= tabsLength; step += 1) {\n        /** @type {?} */\n        var prevIndex = index - step;\n        /** @type {?} */\n\n        var nextIndex = index + step;\n\n        if (this.tabs[prevIndex] && !this.tabs[prevIndex].disabled) {\n          return prevIndex;\n        }\n\n        if (this.tabs[nextIndex] && !this.tabs[nextIndex].disabled) {\n          return nextIndex;\n        }\n      }\n\n      return -1;\n    }\n    /**\n     * @protected\n     * @param {?} index\n     * @return {?}\n     */\n\n  }, {\n    key: \"hasAvailableTabs\",\n    value: function hasAvailableTabs(index) {\n      /** @type {?} */\n      var tabsLength = this.tabs.length;\n\n      if (!tabsLength) {\n        return false;\n      }\n\n      for (var i = 0; i < tabsLength; i += 1) {\n        if (!this.tabs[i].disabled && i !== index) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"setClassMap\",\n    value: function setClassMap() {\n      this.classMap = _defineProperty({\n        'nav-stacked': this.vertical,\n        'flex-column': this.vertical,\n        'nav-justified': this.justified\n      }, \"nav-\".concat(this.type), true);\n    }\n  }]);\n\n  return TabsetComponent;\n}();\n\nTabsetComponent.ɵfac = function TabsetComponent_Factory(t) {\n  return new (t || TabsetComponent)(ɵngcc0.ɵɵdirectiveInject(TabsetConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nTabsetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TabsetComponent,\n  selectors: [[\"tabset\"]],\n  hostVars: 2,\n  hostBindings: function TabsetComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"tab-container\", ctx.clazz);\n    }\n  },\n  inputs: {\n    vertical: \"vertical\",\n    justified: \"justified\",\n    type: \"type\"\n  },\n  ngContentSelectors: _c1,\n  decls: 4,\n  vars: 3,\n  consts: [[\"role\", \"tablist\", 1, \"nav\", 3, \"ngClass\", \"click\"], [3, \"ngClass\", \"active\", \"disabled\", \"keydown\", 4, \"ngFor\", \"ngForOf\"], [1, \"tab-content\"], [3, \"ngClass\", \"keydown\"], [\"href\", \"javascript:void(0);\", \"role\", \"tab\", 1, \"nav-link\", 3, \"click\"], [3, \"ngTransclude\"], [\"class\", \"bs-remove-tab\", 3, \"click\", 4, \"ngIf\"], [1, \"bs-remove-tab\", 3, \"click\"]],\n  template: function TabsetComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n      ɵngcc0.ɵɵlistener(\"click\", function TabsetComponent_Template_ul_click_0_listener($event) {\n        return $event.preventDefault();\n      });\n      ɵngcc0.ɵɵtemplate(1, TabsetComponent_li_1_Template, 5, 17, \"li\", 1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵprojection(3);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.classMap);\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx.ariaLabel);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.tabs);\n    }\n  },\n  directives: [ɵngcc1.NgClass, ɵngcc1.NgForOf, NgTranscludeDirective, ɵngcc1.NgIf],\n  styles: [\"[_nghost-%COMP%]   .nav-tabs[_ngcontent-%COMP%]   .nav-item.disabled[_ngcontent-%COMP%]   a.disabled[_ngcontent-%COMP%]{cursor:default}\"]\n});\n/** @nocollapse */\n\nTabsetComponent.ctorParameters = function () {\n  return [{\n    type: TabsetConfig\n  }, {\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }];\n};\n\nTabsetComponent.propDecorators = {\n  vertical: [{\n    type: Input\n  }],\n  justified: [{\n    type: Input\n  }],\n  type: [{\n    type: Input\n  }],\n  clazz: [{\n    type: HostBinding,\n    args: ['class.tab-container']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TabsetComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tabset',\n      template: \"<ul class=\\\"nav\\\" [ngClass]=\\\"classMap\\\"\\n    (click)=\\\"$event.preventDefault()\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    role=\\\"tablist\\\">\\n  <li *ngFor=\\\"let tabz of tabs; let i = index\\\" [ngClass]=\\\"['nav-item', tabz.customClass || '']\\\"\\n      [class.active]=\\\"tabz.active\\\" [class.disabled]=\\\"tabz.disabled\\\" (keydown)=\\\"keyNavActions($event, i)\\\">\\n    <a href=\\\"javascript:void(0);\\\" class=\\\"nav-link\\\" role=\\\"tab\\\"\\n       [attr.aria-controls]=\\\"tabz.id ? tabz.id : ''\\\"\\n       [attr.aria-selected]=\\\"!!tabz.active\\\"\\n       [attr.id]=\\\"tabz.id ? tabz.id + '-link' : ''\\\"\\n       [class.active]=\\\"tabz.active\\\" [class.disabled]=\\\"tabz.disabled\\\"\\n       (click)=\\\"tabz.active = true\\\">\\n      <span [ngTransclude]=\\\"tabz.headingRef\\\">{{ tabz.heading }}</span>\\n      <span *ngIf=\\\"tabz.removable\\\" (click)=\\\"$event.preventDefault(); removeTab(tabz);\\\" class=\\\"bs-remove-tab\\\"> &#10060;</span>\\n    </a>\\n  </li>\\n</ul>\\n<div class=\\\"tab-content\\\">\\n  <ng-content></ng-content>\\n</div>\\n\",\n      styles: [\":host .nav-tabs .nav-item.disabled a.disabled{cursor:default}\"]\n    }]\n  }], function () {\n    return [{\n      type: TabsetConfig\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    clazz: [{\n      type: HostBinding,\n      args: ['class.tab-container']\n    }],\n    vertical: [{\n      type: Input\n    }],\n    justified: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  TabsetComponent.prototype.clazz;\n  /** @type {?} */\n\n  TabsetComponent.prototype.tabs;\n  /** @type {?} */\n\n  TabsetComponent.prototype.classMap;\n  /**\n   * aria label for tab list\n   * @type {?}\n   */\n\n  TabsetComponent.prototype.ariaLabel;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  TabsetComponent.prototype.isDestroyed;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  TabsetComponent.prototype._vertical;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  TabsetComponent.prototype._justified;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  TabsetComponent.prototype._type;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  TabsetComponent.prototype._isKeysAllowed;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TabsetComponent.prototype.renderer;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TabsetComponent.prototype.elementRef;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar TabDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} tabset\n   * @param {?} elementRef\n   * @param {?} renderer\n   */\n  function TabDirective(tabset, elementRef, renderer) {\n    _classCallCheck(this, TabDirective);\n\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    /**\n     * fired when tab became active, $event:Tab equals to selected instance of Tab component\n     */\n\n    this.selectTab = new EventEmitter();\n    /**\n     * fired when tab became inactive, $event:Tab equals to deselected instance of Tab component\n     */\n\n    this.deselect = new EventEmitter();\n    /**\n     * fired before tab will be removed, $event:Tab equals to instance of removed tab\n     */\n\n    this.removed = new EventEmitter();\n    this.addClass = true;\n    this.role = 'tabpanel';\n    this.tabset = tabset;\n    this.tabset.addTab(this);\n  }\n  /**\n   * if set, will be added to the tab's class attribute. Multiple classes are supported.\n   * @return {?}\n   */\n\n\n  _createClass(TabDirective, [{\n    key: \"customClass\",\n    get: function get() {\n      return this._customClass;\n    }\n    /**\n     * @param {?} customClass\n     * @return {?}\n     */\n    ,\n    set: function set(customClass) {\n      var _this = this;\n\n      if (this.customClass) {\n        this.customClass.split(' ').forEach(\n        /**\n        * @param {?} cssClass\n        * @return {?}\n        */\n        function (cssClass) {\n          _this.renderer.removeClass(_this.elementRef.nativeElement, cssClass);\n        });\n      }\n\n      this._customClass = customClass ? customClass.trim() : null;\n\n      if (this.customClass) {\n        this.customClass.split(' ').forEach(\n        /**\n        * @param {?} cssClass\n        * @return {?}\n        */\n        function (cssClass) {\n          _this.renderer.addClass(_this.elementRef.nativeElement, cssClass);\n        });\n      }\n    }\n    /**\n     * tab active state toggle\n     * @return {?}\n     */\n\n  }, {\n    key: \"active\",\n    get: function get() {\n      return this._active;\n    }\n    /**\n     * @param {?} active\n     * @return {?}\n     */\n    ,\n    set: function set(active) {\n      var _this2 = this;\n\n      if (this._active === active) {\n        return;\n      }\n\n      if (this.disabled && active || !active) {\n        if (this._active && !active) {\n          this.deselect.emit(this);\n          this._active = active;\n        }\n\n        return;\n      }\n\n      this._active = active;\n      this.selectTab.emit(this);\n      this.tabset.tabs.forEach(\n      /**\n      * @param {?} tab\n      * @return {?}\n      */\n      function (tab) {\n        if (tab !== _this2) {\n          tab.active = false;\n        }\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ariaLabelledby\",\n    get: function get() {\n      return this.id ? \"\".concat(this.id, \"-link\") : '';\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.removable = this.removable;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.tabset.removeTab(this, {\n        reselect: false,\n        emit: false\n      });\n    }\n  }]);\n\n  return TabDirective;\n}();\n\nTabDirective.ɵfac = function TabDirective_Factory(t) {\n  return new (t || TabDirective)(ɵngcc0.ɵɵdirectiveInject(TabsetComponent), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\n\nTabDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: TabDirective,\n  selectors: [[\"tab\"], [\"\", \"tab\", \"\"]],\n  hostVars: 7,\n  hostBindings: function TabDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"aria-labelledby\", ctx.ariaLabelledby)(\"id\", ctx.id);\n      ɵngcc0.ɵɵclassProp(\"tab-pane\", ctx.addClass)(\"active\", ctx.active);\n    }\n  },\n  inputs: {\n    customClass: \"customClass\",\n    active: \"active\",\n    removable: \"removable\",\n    heading: \"heading\",\n    id: \"id\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    selectTab: \"selectTab\",\n    deselect: \"deselect\",\n    removed: \"removed\"\n  },\n  exportAs: [\"tab\"]\n});\n/** @nocollapse */\n\nTabDirective.ctorParameters = function () {\n  return [{\n    type: TabsetComponent\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }];\n};\n\nTabDirective.propDecorators = {\n  heading: [{\n    type: Input\n  }],\n  id: [{\n    type: HostBinding,\n    args: ['attr.id']\n  }, {\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  removable: [{\n    type: Input\n  }],\n  customClass: [{\n    type: Input\n  }],\n  active: [{\n    type: HostBinding,\n    args: ['class.active']\n  }, {\n    type: Input\n  }],\n  selectTab: [{\n    type: Output\n  }],\n  deselect: [{\n    type: Output\n  }],\n  removed: [{\n    type: Output\n  }],\n  addClass: [{\n    type: HostBinding,\n    args: ['class.tab-pane']\n  }],\n  role: [{\n    type: HostBinding,\n    args: ['attr.role']\n  }],\n  ariaLabelledby: [{\n    type: HostBinding,\n    args: ['attr.aria-labelledby']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TabDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'tab, [tab]',\n      exportAs: 'tab'\n    }]\n  }], function () {\n    return [{\n      type: TabsetComponent\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }];\n  }, {\n    selectTab: [{\n      type: Output\n    }],\n    deselect: [{\n      type: Output\n    }],\n    removed: [{\n      type: Output\n    }],\n    addClass: [{\n      type: HostBinding,\n      args: ['class.tab-pane']\n    }],\n    role: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }],\n    customClass: [{\n      type: Input\n    }],\n    active: [{\n      type: HostBinding,\n      args: ['class.active']\n    }, {\n      type: Input\n    }],\n    ariaLabelledby: [{\n      type: HostBinding,\n      args: ['attr.aria-labelledby']\n    }],\n    removable: [{\n      type: Input\n    }],\n    heading: [{\n      type: Input\n    }],\n    id: [{\n      type: HostBinding,\n      args: ['attr.id']\n    }, {\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /**\n   * tab header text\n   * @type {?}\n   */\n  TabDirective.prototype.heading;\n  /**\n   * tab id. The same id with suffix '-link' will be added to the corresponding &lt;li&gt; element\n   * @type {?}\n   */\n\n  TabDirective.prototype.id;\n  /**\n   * if true tab can not be activated\n   * @type {?}\n   */\n\n  TabDirective.prototype.disabled;\n  /**\n   * if true tab can be removable, additional button will appear\n   * @type {?}\n   */\n\n  TabDirective.prototype.removable;\n  /**\n   * fired when tab became active, $event:Tab equals to selected instance of Tab component\n   * @type {?}\n   */\n\n  TabDirective.prototype.selectTab;\n  /**\n   * fired when tab became inactive, $event:Tab equals to deselected instance of Tab component\n   * @type {?}\n   */\n\n  TabDirective.prototype.deselect;\n  /**\n   * fired before tab will be removed, $event:Tab equals to instance of removed tab\n   * @type {?}\n   */\n\n  TabDirective.prototype.removed;\n  /** @type {?} */\n\n  TabDirective.prototype.addClass;\n  /** @type {?} */\n\n  TabDirective.prototype.role;\n  /** @type {?} */\n\n  TabDirective.prototype.headingRef;\n  /** @type {?} */\n\n  TabDirective.prototype.tabset;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  TabDirective.prototype._active;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  TabDirective.prototype._customClass;\n  /** @type {?} */\n\n  TabDirective.prototype.elementRef;\n  /** @type {?} */\n\n  TabDirective.prototype.renderer;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Should be used to mark <ng-template> element as a template for tab heading\n */\n\n\nvar TabHeadingDirective = /*#__PURE__*/_createClass(\n/* tslint:disable-next-line:no-any */\n\n/**\n * @param {?} templateRef\n * @param {?} tab\n */\nfunction TabHeadingDirective(templateRef, tab) {\n  _classCallCheck(this, TabHeadingDirective);\n\n  tab.headingRef = templateRef;\n});\n\nTabHeadingDirective.ɵfac = function TabHeadingDirective_Factory(t) {\n  return new (t || TabHeadingDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(TabDirective));\n};\n\nTabHeadingDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: TabHeadingDirective,\n  selectors: [[\"\", \"tabHeading\", \"\"]]\n});\n/** @nocollapse */\n\nTabHeadingDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }, {\n    type: TabDirective\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TabHeadingDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[tabHeading]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }, {\n      type: TabDirective\n    }];\n  }, null);\n})();\n\nif (false) {\n  /** @type {?} */\n  TabHeadingDirective.prototype.templateRef;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar TabsModule = /*#__PURE__*/function () {\n  function TabsModule() {\n    _classCallCheck(this, TabsModule);\n  }\n\n  _createClass(TabsModule, null, [{\n    key: \"forRoot\",\n    value:\n    /**\n     * @return {?}\n     */\n    function forRoot() {\n      return {\n        ngModule: TabsModule,\n        providers: []\n      };\n    }\n  }]);\n\n  return TabsModule;\n}();\n\nTabsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: TabsModule\n});\nTabsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function TabsModule_Factory(t) {\n    return new (t || TabsModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TabsModule, {\n    declarations: function declarations() {\n      return [NgTranscludeDirective, TabDirective, TabsetComponent, TabHeadingDirective];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [TabDirective, TabsetComponent, TabHeadingDirective, NgTranscludeDirective];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TabsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [NgTranscludeDirective, TabDirective, TabsetComponent, TabHeadingDirective],\n      exports: [TabDirective, TabsetComponent, TabHeadingDirective, NgTranscludeDirective]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { NgTranscludeDirective, TabDirective, TabHeadingDirective, TabsModule, TabsetComponent, TabsetConfig };","map":{"version":3,"sources":["ngx-bootstrap/tabs/ng-transclude.directive.ts","ngx-bootstrap/tabs/tabset.config.ts","ngx-bootstrap/tabs/tabset.component.ts","ngx-bootstrap/tabs/tab.directive.ts","ngx-bootstrap/tabs/tab-heading.directive.ts","ngx-bootstrap/tabs/tabs.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngTransclude]'\n})\nexport class NgTranscludeDirective {\n  viewRef: ViewContainerRef;\n\n  protected _viewRef: ViewContainerRef;\n  /* tslint:disable-next-line:no-any */\n  protected _ngTransclude: TemplateRef<any>;\n\n  @Input()\n  /* tslint:disable-next-line:no-any */\n  set ngTransclude(templateRef: TemplateRef<any>) {\n    this._ngTransclude = templateRef;\n    if (templateRef) {\n      this.viewRef.createEmbeddedView(templateRef);\n    }\n  }\n\n  /* tslint:disable-next-line:no-any */\n  get ngTransclude(): TemplateRef<any> {\n    return this._ngTransclude;\n  }\n\n  constructor(viewRef: ViewContainerRef) {\n    this.viewRef = viewRef;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TabsetConfig {\n  /** provides default navigation context class: 'tabs' or 'pills' */\n  type = 'tabs';\n  /** provides possibility to set keyNavigations enable or disable, by default is enable */\n  isKeysAllowed = true;\n  /** aria label for tab list */\n  ariaLabel = 'Tabs';\n}\n","import { Component, HostBinding, Input, OnDestroy, Renderer2, ElementRef } from '@angular/core';\n\nimport { TabDirective } from './tab.directive';\nimport { TabsetConfig } from './tabset.config';\n// todo: add active event to tab\n// todo: fix? mixing static and dynamic tabs position tabs in order of creation\n@Component({\n  selector: 'tabset',\n  templateUrl: './tabset.component.html',\n  styleUrls: ['./tabs.scss']\n})\nexport class TabsetComponent implements OnDestroy {\n  /** if true tabs will be placed vertically */\n  @Input()\n  get vertical(): boolean {\n    return this._vertical;\n  }\n  set vertical(value: boolean) {\n    this._vertical = value;\n    this.setClassMap();\n  }\n\n  /** if true tabs fill the container and have a consistent width */\n  @Input()\n  get justified(): boolean {\n    return this._justified;\n  }\n  set justified(value: boolean) {\n    this._justified = value;\n    this.setClassMap();\n  }\n\n  /** navigation context class: 'tabs' or 'pills' */\n  @Input()\n  get type(): string {\n    return this._type;\n  }\n  set type(value: string) {\n    this._type = value;\n    this.setClassMap();\n  }\n\n  get isKeysAllowed(): boolean {\n    return this._isKeysAllowed;\n  }\n\n  set isKeysAllowed(value: boolean) {\n    this._isKeysAllowed = value;\n  }\n\n\n  @HostBinding('class.tab-container') clazz = true;\n\n  tabs: TabDirective[] = [];\n  classMap: { [key: string]: boolean } = {};\n\n  /** aria label for tab list */\n  ariaLabel: string;\n\n  protected isDestroyed: boolean;\n  protected _vertical: boolean;\n  protected _justified: boolean;\n  protected _type: string;\n  protected _isKeysAllowed: boolean;\n\n  constructor(\n    config: TabsetConfig,\n    private renderer: Renderer2,\n    private elementRef: ElementRef\n  ) {\n    Object.assign(this, config);\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroyed = true;\n  }\n\n  addTab(tab: TabDirective): void {\n    this.tabs.push(tab);\n    tab.active = this.tabs.length === 1 && typeof tab.active === 'undefined';\n  }\n\n  removeTab(\n    tab: TabDirective,\n    options = { reselect: true, emit: true }\n  ): void {\n    const index = this.tabs.indexOf(tab);\n    if (index === -1 || this.isDestroyed) {\n      return;\n    }\n    // Select a new tab if the tab to be removed is selected and not destroyed\n    if (options.reselect && tab.active && this.hasAvailableTabs(index)) {\n      const newActiveIndex = this.getClosestTabIndex(index);\n      this.tabs[newActiveIndex].active = true;\n    }\n    if (options.emit) {\n      tab.removed.emit(tab);\n    }\n    this.tabs.splice(index, 1);\n    if (tab.elementRef.nativeElement.parentNode) {\n      this.renderer.removeChild(\n        tab.elementRef.nativeElement.parentNode,\n        tab.elementRef.nativeElement\n      );\n    }\n  }\n\n  /* tslint:disable-next-line: cyclomatic-complexity */\n  keyNavActions(event: KeyboardEvent, index: number) {\n    if (!this.isKeysAllowed) {\n      return;\n    }\n    const list: HTMLElement[] = Array.from(this.elementRef.nativeElement.querySelectorAll('.nav-link'));\n    // const activeElList = list.filter((el: HTMLElement) => !el.classList.contains('disabled'));\n\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 13 || event.key === 'Enter' || event.keyCode === 32 || event.key === 'Space') {\n      event.preventDefault();\n      const currentTab = list[(index) % list.length];\n      currentTab.click();\n\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 39 || event.key === 'RightArrow') {\n      let nextTab: any;\n      let shift = 1;\n\n      do {\n        nextTab = list[(index + shift) % list.length];\n\n        shift++;\n      } while (nextTab.classList.contains('disabled'));\n\n      nextTab.focus();\n\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 37 || event.key === 'LeftArrow') {\n      let previousTab: any;\n      let shift = 1;\n      let i = index;\n\n      do {\n        if ((i - shift) < 0) {\n          i = list.length - 1;\n          previousTab = list[i];\n          shift = 0;\n        } else {\n          previousTab = list[i - shift];\n        }\n\n        shift++;\n      } while (previousTab.classList.contains('disabled'));\n\n      previousTab.focus();\n\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 36 || event.key === 'Home') {\n      event.preventDefault();\n\n      let firstTab: any;\n      let shift = 0;\n\n      do {\n        firstTab = list[shift % list.length];\n\n        shift++;\n      } while (firstTab.classList.contains('disabled'));\n\n      firstTab.focus();\n\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 35 || event.key === 'End') {\n      event.preventDefault();\n\n      let lastTab: any;\n      let shift = 1;\n      let i = index;\n\n      do {\n        if ((i - shift) < 0) {\n          i = list.length - 1;\n          lastTab = list[i];\n          shift = 0;\n        } else {\n          lastTab = list[i - shift];\n        }\n\n        shift++;\n      } while (lastTab.classList.contains('disabled'));\n\n      lastTab.focus();\n\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 46 || event.key === 'Delete') {\n      if (this.tabs[index].removable) {\n        this.removeTab(this.tabs[index]);\n\n        if (list[index + 1]) {\n          list[(index + 1) % list.length].focus();\n\n          return;\n        }\n\n        if (list[list.length - 1]) {\n          list[0].focus();\n        }\n      }\n    }\n  }\n\n  protected getClosestTabIndex(index: number): number {\n    const tabsLength = this.tabs.length;\n    if (!tabsLength) {\n      return -1;\n    }\n\n    for (let step = 1; step <= tabsLength; step += 1) {\n      const prevIndex = index - step;\n      const nextIndex = index + step;\n      if (this.tabs[prevIndex] && !this.tabs[prevIndex].disabled) {\n        return prevIndex;\n      }\n      if (this.tabs[nextIndex] && !this.tabs[nextIndex].disabled) {\n        return nextIndex;\n      }\n    }\n\n    return -1;\n  }\n\n  protected hasAvailableTabs(index: number): boolean {\n    const tabsLength = this.tabs.length;\n    if (!tabsLength) {\n      return false;\n    }\n\n    for (let i = 0; i < tabsLength; i += 1) {\n      if (!this.tabs[i].disabled && i !== index) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  protected setClassMap(): void {\n    this.classMap = {\n      'nav-stacked': this.vertical,\n      'flex-column': this.vertical,\n      'nav-justified': this.justified,\n      [`nav-${this.type}`]: true\n    };\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Output,\n  TemplateRef,\n  OnInit,\n  OnDestroy,\n  ElementRef,\n  Renderer2\n} from '@angular/core';\nimport { TabsetComponent } from './tabset.component';\n\n@Directive({ selector: 'tab, [tab]', exportAs: 'tab' })\nexport class TabDirective implements OnInit, OnDestroy {\n  /** tab header text */\n  @Input() heading: string;\n  /** tab id. The same id with suffix '-link' will be added to the corresponding &lt;li&gt; element  */\n  @HostBinding('attr.id')\n  @Input() id: string;\n  /** if true tab can not be activated */\n  @Input() disabled: boolean;\n  /** if true tab can be removable, additional button will appear */\n  @Input() removable: boolean;\n  /** if set, will be added to the tab's class attribute. Multiple classes are supported. */\n  @Input()\n  get customClass(): string {\n    return this._customClass;\n  }\n\n  set customClass(customClass: string) {\n    if (this.customClass) {\n      this.customClass.split(' ').forEach((cssClass: string) => {\n        this.renderer.removeClass(this.elementRef.nativeElement, cssClass);\n      });\n    }\n\n    this._customClass = customClass ? customClass.trim() : null;\n\n    if (this.customClass) {\n      this.customClass.split(' ').forEach((cssClass: string) => {\n        this.renderer.addClass(this.elementRef.nativeElement, cssClass);\n      });\n    }\n  }\n\n  /** tab active state toggle */\n  @HostBinding('class.active')\n  @Input()\n  get active(): boolean {\n    return this._active;\n  }\n\n  set active(active: boolean) {\n    if (this._active === active) {\n      return;\n    }\n    if ((this.disabled && active) || !active) {\n      if (this._active && !active) {\n        this.deselect.emit(this);\n        this._active = active;\n      }\n\n      return;\n    }\n\n    this._active = active;\n    this.selectTab.emit(this);\n    this.tabset.tabs.forEach((tab: TabDirective) => {\n      if (tab !== this) {\n        tab.active = false;\n      }\n    });\n  }\n\n  /** fired when tab became active, $event:Tab equals to selected instance of Tab component */\n  @Output() selectTab: EventEmitter<TabDirective> = new EventEmitter();\n  /** fired when tab became inactive, $event:Tab equals to deselected instance of Tab component */\n  @Output() deselect: EventEmitter<TabDirective> = new EventEmitter();\n  /** fired before tab will be removed, $event:Tab equals to instance of removed tab */\n  @Output() removed: EventEmitter<TabDirective> = new EventEmitter();\n\n  @HostBinding('class.tab-pane') addClass = true;\n  @HostBinding('attr.role') role = 'tabpanel';\n  @HostBinding('attr.aria-labelledby') get ariaLabelledby(): string {\n    return this.id ? `${this.id}-link` : '';\n  }\n\n  /* tslint:disable-next-line:no-any */\n  headingRef: TemplateRef<any>;\n  tabset: TabsetComponent;\n  protected _active: boolean;\n  protected _customClass: string;\n\n  constructor(\n    tabset: TabsetComponent,\n    public elementRef: ElementRef,\n    public renderer: Renderer2\n  ) {\n    this.tabset = tabset;\n    this.tabset.addTab(this);\n  }\n\n  ngOnInit(): void {\n    this.removable = this.removable;\n  }\n\n  ngOnDestroy(): void {\n    this.tabset.removeTab(this, { reselect: false, emit: false });\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\nimport { TabDirective } from './tab.directive';\n\n/** Should be used to mark <ng-template> element as a template for tab heading */\n@Directive({ selector: '[tabHeading]' })\nexport class TabHeadingDirective {\n  /* tslint:disable-next-line:no-any */\n  templateRef: TemplateRef<any>;\n\n  /* tslint:disable-next-line:no-any */\n  constructor(templateRef: TemplateRef<any>, tab: TabDirective) {\n    tab.headingRef = templateRef;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { NgTranscludeDirective } from './ng-transclude.directive';\nimport { TabHeadingDirective } from './tab-heading.directive';\nimport { TabDirective } from './tab.directive';\nimport { TabsetComponent } from './tabset.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    NgTranscludeDirective,\n    TabDirective,\n    TabsetComponent,\n    TabHeadingDirective\n  ],\n  exports: [\n    TabDirective,\n    TabsetComponent,\n    TabHeadingDirective,\n    NgTranscludeDirective\n  ]\n})\nexport class TabsModule {\n  static forRoot(): ModuleWithProviders<TabsModule> {\n    return {\n      ngModule: TabsModule,\n      providers: []\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}